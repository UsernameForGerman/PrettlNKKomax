{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/TaskDetailPage/TaskDetailPageContainer.js\";\nimport TaskDetailPage from \"./TaskDetailPage\";\nimport React, { useEffect } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport auth from \"../../AuthHOC/authHOC\";\nimport { connect } from \"react-redux\";\nimport classes from \"./TaskDetailPage.module.css\";\nimport TasksSelector from \"../../../selectors/tasksSelector\";\nimport { getTasksThunk } from \"../../../reducers/tasksReducer\";\nimport LoginSelector from \"../../../selectors/loginSelector\";\nimport BASE_URL from \"../../../DAL/getBaseUrl\";\nimport formatTime from \"./formatTime\";\nimport { FormattedMessage } from \"react-intl\";\n\nlet TaskDetailPageContainer = props => {\n  let name = props.match.params.id;\n  useEffect(() => {\n    props.fetchList();\n  }, props.taskList.length);\n  let task = props.taskList.filter(elem => elem.task_name === name)[0];\n  let komaxes = task ? task.komaxes : [];\n  let harnesses = task ? task.harnesses : [];\n  let taskHarnesses = harnesses.map((elem, index) => {\n    return /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.harness,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, elem.harness, \" : \", elem.amount);\n  });\n  let taskKomaxes = komaxes.map(elem => {\n    return /*#__PURE__*/React.createElement(\"h3\", {\n      className: classes.komax,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: \"50px\",\n        textAlign: \"right\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, elem.komax, \" - \"), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: \"150px\",\n        textAlign: \"left\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, formatTime(elem.time, props.locale)));\n  });\n  let row = [];\n  let task_komax = komaxes.map((elem, index) => {\n    row.push( /*#__PURE__*/React.createElement(\"a\", {\n      href: BASE_URL + \"api/v1/\" + name + \"/get_task_komax/\" + elem.komax + \"/\",\n      target: \"blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.greenBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"task_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }), \" \", elem.komax)));\n\n    if ((index + 1) % 3 === 0) {\n      let result = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, [...row]);\n      row = [];\n      return result;\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  });\n\n  if (row.length > 0) {\n    task_komax.push( /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, [...row]));\n    row = [];\n  }\n\n  row = [];\n  let ticket_komax = komaxes.map((elem, index) => {\n    row.push( /*#__PURE__*/React.createElement(\"a\", {\n      href: BASE_URL + \"api/v1/\" + name + \"/get_ticket_komax/\" + elem.komax + \"/\",\n      target: \"blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.greenBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"ticket_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }), \" \", elem.komax)));\n\n    if ((index + 1) % 3 === 0) {\n      let result = /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, [...row]);\n      row = [];\n      return result;\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  });\n\n  if (row.length > 0) {\n    task_komax.push( /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.row,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, [...row]));\n    row = [];\n  }\n\n  return /*#__PURE__*/React.createElement(TaskDetailPage, {\n    role: props.role,\n    task_komax: task_komax,\n    ticket_komax: ticket_komax,\n    harnesses: taskHarnesses,\n    komaxes: taskKomaxes,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  });\n};\n\nlet mapStateToProps = state => {\n  return {\n    taskList: TasksSelector.getList(state),\n    role: LoginSelector.getRole(state)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    fetchList: () => {\n      dispatch(getTasksThunk());\n    }\n  };\n};\n\nexport default auth(withRouter(connect(mapStateToProps, mapDispatchToProps)(TaskDetailPageContainer)));","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/TaskDetailPage/TaskDetailPageContainer.js"],"names":["TaskDetailPage","React","useEffect","withRouter","auth","connect","classes","TasksSelector","getTasksThunk","LoginSelector","BASE_URL","formatTime","FormattedMessage","TaskDetailPageContainer","props","name","match","params","id","fetchList","taskList","length","task","filter","elem","task_name","komaxes","harnesses","taskHarnesses","map","index","harness","amount","taskKomaxes","komax","minWidth","textAlign","time","locale","row","task_komax","push","greenBtn","result","ticket_komax","role","mapStateToProps","state","getList","getRole","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import TaskDetailPage from \"./TaskDetailPage\";\nimport React, {useEffect} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport auth from \"../../AuthHOC/authHOC\";\nimport {connect} from \"react-redux\"\nimport classes from \"./TaskDetailPage.module.css\"\nimport TasksSelector from \"../../../selectors/tasksSelector\";\nimport {getTasksThunk} from \"../../../reducers/tasksReducer\";\nimport LoginSelector from \"../../../selectors/loginSelector\";\nimport BASE_URL from \"../../../DAL/getBaseUrl\";\nimport formatTime from \"./formatTime\";\nimport {FormattedMessage} from \"react-intl\";\n\nlet TaskDetailPageContainer = (props) => {\n    let name = props.match.params.id;\n\n    useEffect(() => {\n        props.fetchList();\n    }, props.taskList.length);\n\n    let task = props.taskList.filter(elem => elem.task_name === name)[0];\n    let komaxes = task ? task.komaxes: []\n    let harnesses = task ? task.harnesses : [];\n\n    let taskHarnesses = harnesses.map((elem, index) => {\n        return(\n            <h3 className={classes.harness}>\n                {elem.harness} : {elem.amount}\n            </h3>\n        )\n    });\n\n    let taskKomaxes = komaxes.map(elem => {\n        return(\n            <h3 className={classes.komax}>\n                <div style={{\n                    minWidth : \"50px\",\n                    textAlign : \"right\"\n                }}>{elem.komax} - </div>\n                <div style={{\n                    minWidth : \"150px\",\n                    textAlign : \"left\"\n                }}>{formatTime(elem.time, props.locale)}</div>\n            </h3>\n        )\n    });\n\n    let row = [];\n    let task_komax = komaxes.map((elem, index) => {\n        row.push(\n            <a href={BASE_URL + \"api/v1/\" + name +\"/get_task_komax/\" + elem.komax +\"/\"} target={\"blank\"}>\n                <button className={classes.greenBtn}>\n                    <FormattedMessage id={\"task_label\"}/> {elem.komax}\n                </button>\n            </a>\n        )\n\n        if ((index + 1) % 3 === 0){\n            let result =\n             (\n                <div className={classes.row}>\n                    {[...row]}\n                </div>\n            )\n            row = [];\n            return result;\n        } else {\n            return (<></>)\n        }\n    });\n    if (row.length > 0){\n        task_komax.push(\n                <div className={classes.row}>\n                    {[...row]}\n                </div>)\n            row = [];\n    }\n    row = [];\n\n    let ticket_komax = komaxes.map((elem, index) => {\n        row.push(\n            <a href={BASE_URL + \"api/v1/\" + name +\"/get_ticket_komax/\" + elem.komax +\"/\"} target={\"blank\"}>\n                <button className={classes.greenBtn}>\n                    <FormattedMessage id={\"ticket_label\"}/> {elem.komax}\n                </button>\n            </a>\n        )\n        if ((index + 1) % 3 === 0){\n            let result =\n             (\n                <div className={classes.row}>\n                    {[...row]}\n                </div>\n            )\n            row = [];\n            return result;\n        } else {\n            return (<></>)\n        }\n    });\n    if (row.length > 0){\n        task_komax.push(\n                <div className={classes.row}>\n                    {[...row]}\n                </div>)\n            row = [];\n    }\n\n    return(\n        <TaskDetailPage\n            role={props.role}\n        task_komax={task_komax}\n        ticket_komax={ticket_komax}\n        harnesses={taskHarnesses}\n        komaxes={taskKomaxes}\n        name={name}\n        />\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return{\n        taskList : TasksSelector.getList(state),\n        role : LoginSelector.getRole(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        fetchList : () => {\n            dispatch(getTasksThunk())\n        }\n    }\n}\n\nexport default auth(withRouter(connect(mapStateToProps, mapDispatchToProps)(TaskDetailPageContainer)));"]},"metadata":{},"sourceType":"module"}