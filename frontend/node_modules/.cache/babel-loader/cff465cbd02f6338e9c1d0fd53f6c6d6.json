{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/CreateTaskPage/CreateTaskPage.js\";\nimport classes from \"./CreateTaskPage.module.css\";\nimport React, { useState } from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport SuccessButton from \"../../common/SuccessButton/SuccessButton\";\nimport { withStyles } from \"@material-ui/styles\";\nimport { FormattedMessage } from \"react-intl\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"../../common/IconButton/IconButton\";\nimport Modal from \"react-modal\";\nimport TaskCreateModalFormContainer from \"./Modal/TCPModalContainer,js\";\nimport { Multiselect } from \"multiselect-react-dropdown\";\nimport '../../../index.css';\nimport { NavLink, Redirect } from \"react-router-dom\";\n\nlet CreateTaskPage = props => {\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        width: 100,\n        top: \"100px !important\"\n      }\n    }\n  };\n  const customStyles = {\n    content: {\n      top: '25%',\n      left: '20%',\n      transform: 'translate(-10%, -20%)'\n    }\n  };\n  let [isModalOpen, setIsOpen] = useState(false);\n\n  let openModal = () => {\n    setIsOpen(true);\n  };\n\n  let open = () => {\n    openModal();\n    props.fetch();\n  };\n\n  let closeModal = () => {\n    setIsOpen(false);\n  };\n\n  let oldHandle = (e, callback) => {\n    callback(e.target.value);\n  };\n\n  let handleMultiSelect = (e, callback) => {\n    callback(e.map(elem => elem.name));\n  };\n\n  let openNextForm = e => {\n    e.preventDefault();\n    props.setContinue(true);\n    let data = {\n      work_shift: workShiftRef.current.value,\n      name: numberRef.current.value\n    };\n    props.sendDataFirst(data);\n  };\n\n  let collectData = e => {\n    props.sendDataSecond({\n      name: numberRef.current.value\n    });\n  };\n\n  let renderedHarnesses = props.multiselectOptions.map(elem => {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, elem, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Количество\",\n      type: \"number\",\n      onChange: e => {\n        props.addHarnessData(elem, e);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }));\n  });\n\n  const handleChangeWork = event => {\n    props.setWorkType(event.target.value);\n  };\n\n  const handleChangeLoading = event => {\n    props.setLoadingType(event.target.value);\n  };\n\n  let numberRef = React.createRef();\n  let workShiftRef = React.createRef();\n\n  let checkValid = () => {\n    let text = numberRef.current.value;\n    props.check(text);\n  };\n\n  const CustomRadio = withStyles({\n    root: {\n      color: \"gray\",\n      '&$checked': {\n        color: \"black\"\n      }\n    },\n    checked: {}\n  })(props => /*#__PURE__*/React.createElement(Radio, Object.assign({\n    color: \"default\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  })));\n\n  let renderOptions = (formName, value, onChange, options) => {\n    let renderedOptions = options.map(option => {\n      return /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: option.value,\n        control: /*#__PURE__*/React.createElement(CustomRadio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 65\n          }\n        }),\n        label: option.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, formName), /*#__PURE__*/React.createElement(RadioGroup, {\n      \"aria-label\": formName,\n      name: formName,\n      value: value,\n      onChange: onChange,\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, renderedOptions));\n  };\n\n  let workType = renderOptions(\"Work type\", props.workType, handleChangeWork, [{\n    value: \"parallel\",\n    label: \"Parallel\"\n  }, {\n    value: \"consistently\",\n    label: \"Consistently\"\n  }]);\n  let loadingType = renderOptions(\"Loading type\", props.loadingType, handleChangeLoading, [{\n    value: \"new\",\n    label: \"New\"\n  }, {\n    value: \"mix\",\n    label: \"Mix\"\n  }, {\n    value: \"urgent\",\n    label: \"Urgent\"\n  }]);\n\n  let convertOptions = src => {\n    return src.map(elem => {\n      return {\n        name: elem,\n        id: elem\n      };\n    });\n  };\n\n  let harnesses_options = convertOptions(props.harnesses_options);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.formWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading_text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"tasks.create_new_task_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 59\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    icon: [\"fas\", 'cog'],\n    class: classes.modalBtn,\n    click: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.row,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.column,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.input_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"tasks.create_new_task_job_name_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 37\n    }\n  }), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    type: \"text\",\n    ref: numberRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.input_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"tasks.create_new_task_harnesses_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 38\n    }\n  }), \":\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.multiselect_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Multiselect, {\n    options: harnesses_options,\n    onSelect: e => {\n      handleMultiSelect(e, props.setMultiselectOptions);\n    },\n    onRemove: e => {\n      handleMultiSelect(e, props.setMultiselectOptions);\n    },\n    selectedValues: props.multiselectOptions.map(elem => {\n      return {\n        name: elem,\n        id: elem\n      };\n    }),\n    displayValue: \"name\",\n    style: {\n      multiselectContainer: {\n        // To change css for multiselect (Width,height,etc..)\n        width: \"200px\"\n      }\n    },\n    id: \"harnesses_select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 37\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.input_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"tasks.create_new_task_komaxes_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 37\n    }\n  }), \":\"), /*#__PURE__*/React.createElement(Select, {\n    classes: classes.select,\n    multiple: true,\n    value: props.komaxesOptions,\n    onChange: e => {\n      oldHandle(e, props.setKomaxesOptions);\n    },\n    input: /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 42\n      }\n    }),\n    MenuProps: MenuProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 33\n    }\n  }, props.komaxes_options.map(elem => /*#__PURE__*/React.createElement(MenuItem, {\n    key: elem,\n    value: elem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 37\n    }\n  }, elem))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.input_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"tasks.create_new_task_kappas_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 37\n    }\n  }), \":\"), /*#__PURE__*/React.createElement(Select, {\n    classes: classes.select,\n    multiple: true,\n    value: props.kappasOptions,\n    onChange: e => {\n      oldHandle(e, props.setKappasOptions);\n    },\n    input: /*#__PURE__*/React.createElement(Input, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 46\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 37\n    }\n  }, props.kappas_options.map(elem => /*#__PURE__*/React.createElement(MenuItem, {\n    key: elem,\n    value: elem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 41\n    }\n  }, elem))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.input_wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"tasks.create_new_task_work_shift_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 37\n    }\n  }), \":\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    type: \"number\",\n    ref: workShiftRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.column} ${classes.right}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 25\n    }\n  }, workType, loadingType), /*#__PURE__*/React.createElement(SuccessButton, {\n    value: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"tasks.create_new_task_continue_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 47\n      }\n    }),\n    class: classes.addBtn,\n    disable: !props.isValid || props.shouldContinue,\n    click: openNextForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.err,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, props.errMsg)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }\n  }, !props.shouldContinue ? /*#__PURE__*/React.createElement(\"button\", {\n    disabled: true,\n    className: classes.fill,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"tasks.create_new_task_fill_form_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  })) : /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.right_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, renderedHarnesses), /*#__PURE__*/React.createElement(NavLink, {\n    to: \"/tasks\",\n    onClick: collectData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SuccessButton, {\n    value: \"Создать задание\",\n    class: classes.addBtn,\n    disable: !props.canSend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isModalOpen,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TaskCreateModalFormContainer, {\n    close: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CreateTaskPage;","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/CreateTaskPage/CreateTaskPage.js"],"names":["classes","React","useState","FormControlLabel","FormControl","FormLabel","RadioGroup","Radio","SuccessButton","withStyles","FormattedMessage","Select","Input","MenuItem","IconButton","Modal","TaskCreateModalFormContainer","Multiselect","NavLink","Redirect","CreateTaskPage","props","MenuProps","PaperProps","style","width","top","customStyles","content","left","transform","isModalOpen","setIsOpen","openModal","open","fetch","closeModal","oldHandle","e","callback","target","value","handleMultiSelect","map","elem","name","openNextForm","preventDefault","setContinue","data","work_shift","workShiftRef","current","numberRef","sendDataFirst","collectData","sendDataSecond","renderedHarnesses","multiselectOptions","addHarnessData","handleChangeWork","event","setWorkType","handleChangeLoading","setLoadingType","createRef","checkValid","text","check","CustomRadio","root","color","checked","renderOptions","formName","onChange","options","renderedOptions","option","label","workType","loadingType","convertOptions","src","id","harnesses_options","formWrapper","form","heading","heading_text","modalBtn","row","column","input_wrapper","input","multiselect_wrapper","setMultiselectOptions","multiselectContainer","select","komaxesOptions","setKomaxesOptions","komaxes_options","kappasOptions","setKappasOptions","kappas_options","right","addBtn","isValid","shouldContinue","err","errMsg","fill","right_form","list","canSend"],"mappings":"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","sourcesContent":["import classes from \"./CreateTaskPage.module.css\"\nimport React, {useState} from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport SuccessButton from \"../../common/SuccessButton/SuccessButton\";\nimport {withStyles} from \"@material-ui/styles\";\nimport {FormattedMessage} from \"react-intl\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"../../common/IconButton/IconButton\";\nimport Modal from \"react-modal\";\nimport TaskCreateModalFormContainer from \"./Modal/TCPModalContainer,js\";\nimport {Multiselect} from \"multiselect-react-dropdown\";\nimport '../../../index.css';\nimport {NavLink, Redirect} from \"react-router-dom\";\nlet CreateTaskPage = (props) => {\n    const MenuProps = {\n          PaperProps: {\n            style: {\n              width: 100,\n              top: \"100px !important\"\n            },\n          },\n        };\n    const customStyles = {\n      content : {\n        top                   : '25%',\n        left                  : '20%',\n        transform             : 'translate(-10%, -20%)'\n      }\n    };\n\n    let [isModalOpen, setIsOpen] = useState(false);\n    let openModal = () => {\n        setIsOpen(true);\n    }\n\n    let open = () => {\n        openModal();\n        props.fetch();\n    }\n\n    let closeModal = () => {\n        setIsOpen(false)\n    }\n\n    let oldHandle = (e, callback) => {\n        callback(e.target.value);\n    }\n\n    let handleMultiSelect = (e, callback) => {\n        callback(e.map(elem => elem.name));\n    }\n\n    let openNextForm = (e) => {\n        e.preventDefault();\n        props.setContinue(true);\n        let data = {\n            work_shift : workShiftRef.current.value,\n            name : numberRef.current.value\n        }\n        props.sendDataFirst(data);\n    }\n\n    let collectData = (e) => {\n        props.sendDataSecond({\n            name : numberRef.current.value\n        });\n    }\n\n    let renderedHarnesses = props.multiselectOptions.map(elem => {\n        return(\n            <label>\n                {elem}\n                <input placeholder={\"Количество\"} type={\"number\"} onChange={(e) => {\n                    props.addHarnessData(elem, e)\n                }}/>\n            </label>\n        )\n    })\n\n    const handleChangeWork = (event) => {\n        props.setWorkType(event.target.value);\n    };\n\n    const handleChangeLoading = (event) => {\n        props.setLoadingType(event.target.value);\n    };\n\n    let numberRef = React.createRef();\n    let workShiftRef = React.createRef();\n\n    let checkValid = () => {\n        let text = numberRef.current.value;\n        props.check(text);\n    }\n\n    const CustomRadio = withStyles({\n      root: {\n        color: \"gray\",\n        '&$checked': {\n          color: \"black\",\n        },\n      },\n      checked: {},\n    })((props) => <Radio color=\"default\" {...props} />);\n\n    let renderOptions = (formName, value, onChange, options) => {\n        let renderedOptions = options.map((option) => {\n            return(\n                <FormControlLabel value={option.value} control={<CustomRadio />} label={option.label} />\n            );\n        });\n        return (\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">{formName}</FormLabel>\n              <RadioGroup aria-label={formName} name={formName} value={value} onChange={onChange} row>\n                  {renderedOptions}\n              </RadioGroup>\n            </FormControl>\n        )\n    }\n\n    let workType = renderOptions(\n        \"Work type\",\n        props.workType,\n        handleChangeWork,\n        [\n            {\n                value : \"parallel\",\n                label : \"Parallel\"\n            },\n            {\n                value : \"consistently\",\n                label : \"Consistently\"\n            }\n        ]\n    );\n\n    let loadingType = renderOptions(\n        \"Loading type\",\n        props.loadingType,\n        handleChangeLoading,\n        [\n            {\n                value : \"new\",\n                label : \"New\"\n            },\n            {\n                value : \"mix\",\n                label : \"Mix\"\n            },\n            {\n                value : \"urgent\",\n                label : \"Urgent\"\n            }\n        ]\n    );\n\n    let convertOptions = (src) => {\n        return src.map(elem => {\n            return {\n                name: elem,\n                id: elem\n            }\n        })\n    }\n\n    let harnesses_options = convertOptions(props.harnesses_options);\n\n    return(\n        <div className={classes.formWrapper}>\n            <div className={classes.form}>\n                <div className={classes.heading}>\n                    <div className={classes.heading_text}><FormattedMessage id={\"tasks.create_new_task_heading\"}/></div>\n                    <IconButton icon={[\"fas\", 'cog']} class={classes.modalBtn} click={open}/>\n                </div>\n                <div className={classes.row}>\n                    <div className={classes.column}>\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <h3><FormattedMessage id={\"tasks.create_new_task_job_name_label\"}/>:</h3>\n                                <input className={classes.input} type={\"text\"} ref={numberRef}/>\n                            </label>\n                        </div>\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <div><FormattedMessage id={\"tasks.create_new_task_harnesses_label\"}/>:</div>\n                                <div className={classes.multiselect_wrapper}>\n                                    <Multiselect\n                                        options={harnesses_options}\n                                        onSelect={(e) => {handleMultiSelect(e, props.setMultiselectOptions)}}\n                                        onRemove={(e) => {handleMultiSelect(e, props.setMultiselectOptions)}}\n                                        selectedValues={props.multiselectOptions.map(elem => {return {name : elem, id : elem}})}\n                                        displayValue=\"name\"\n                                        style={{\n                                              multiselectContainer: { // To change css for multiselect (Width,height,etc..)\n                                                width : \"200px\"\n                                              }\n                                        }}\n                                        id={\"harnesses_select\"}\n                                    />\n                                </div>\n                            </label>\n                        </div>\n\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <h3><FormattedMessage id={\"tasks.create_new_task_komaxes_label\"}/>:</h3>\n                                <Select classes={classes.select}\n                                  multiple\n                                  value={props.komaxesOptions}\n                                  onChange={(e) => {oldHandle(e, props.setKomaxesOptions)}}\n                                  input={<Input />}\n                                    MenuProps={MenuProps}\n                                >\n                                  {props.komaxes_options.map((elem) => (\n                                    <MenuItem key={elem} value={elem}>\n                                      {elem}\n                                    </MenuItem>\n                                  ))}\n                                </Select>\n                            </label>\n                        </div>\n\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <h3><FormattedMessage id={\"tasks.create_new_task_kappas_label\"}/>:</h3>\n                                    <Select classes={classes.select}\n                                      multiple\n                                      value={props.kappasOptions}\n                                      onChange={(e) => {oldHandle(e, props.setKappasOptions)}}\n                                      input={<Input />}\n                                    >\n                                      {props.kappas_options.map((elem) => (\n                                        <MenuItem key={elem} value={elem}>\n                                          {elem}\n                                        </MenuItem>\n                                      ))}\n                                  </Select>\n                            </label>\n                        </div>\n\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <h3><FormattedMessage id={\"tasks.create_new_task_work_shift_label\"}/>:</h3>\n                                <input className={classes.input} type={\"number\"} ref={workShiftRef}/>\n                            </label>\n                        </div>\n                    </div>\n                    <div className={`${classes.column} ${classes.right}`}>\n                        <div className={classes.options}>\n                            {workType}\n                            {loadingType}\n                        </div>\n                        <SuccessButton value={<FormattedMessage id={\"tasks.create_new_task_continue_label\"}/>} class={classes.addBtn} disable={!props.isValid || props.shouldContinue} click={openNextForm}/>\n                        <div className={classes.err}>\n                            {props.errMsg}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.form}>\n                {!props.shouldContinue\n                    ? <button disabled className={classes.fill}>\n                            <FormattedMessage id={\"tasks.create_new_task_fill_form_label\"}/>\n                      </button>\n                    : <form className={classes.right_form}>\n                        <div className={classes.list}>\n                            {renderedHarnesses}\n                        </div>\n                        <NavLink to={\"/tasks\"} onClick={collectData}>\n                            <SuccessButton value={\"Создать задание\"} class={classes.addBtn} disable={!props.canSend}/>\n                        </NavLink>\n                    </form>\n                }\n            </div>\n            <Modal\n              isOpen={isModalOpen}\n              onRequestClose={closeModal}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n                <TaskCreateModalFormContainer close={closeModal}/>\n            </Modal>\n        </div>\n    )\n}\n\nexport default CreateTaskPage;"]},"metadata":{},"sourceType":"module"}