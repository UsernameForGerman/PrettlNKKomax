{"ast":null,"code":"import classes from\"./AddForm.module.css\";import React from\"react\";import{FormattedMessage}from\"react-intl\";import{withStyles}from\"@material-ui/styles\";import Radio from\"@material-ui/core/Radio\";import FormControlLabel from\"@material-ui/core/FormControlLabel\";import FormControl from\"@material-ui/core/FormControl\";import FormLabel from\"@material-ui/core/FormLabel\";import RadioGroup from\"@material-ui/core/RadioGroup\";import SuccessButton from\"../../common/SuccessButton/SuccessButton\";var AddForm=function AddForm(props){var create=function create(){props.create(ref.current.value);};var ref=React.createRef();var handleChangeMaterial=function handleChangeMaterial(event){props.setMaterial(event.target.value);};var handleChangeTerminal=function handleChangeTerminal(event){props.setTerminal(event.target.value);};var CustomRadio=withStyles({root:{color:\"gray\",'&$checked':{color:\"black\"}},checked:{}})(function(props){return/*#__PURE__*/React.createElement(Radio,Object.assign({color:\"default\"},props));});var renderOptions=function renderOptions(formName,value,onChange,options){var renderedOptions=options.map(function(option){return/*#__PURE__*/React.createElement(FormControlLabel,{value:option.value,control:/*#__PURE__*/React.createElement(CustomRadio,null),label:option.label});});return/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\"},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\"},formName),/*#__PURE__*/React.createElement(RadioGroup,{\"aria-label\":formName,name:formName,value:value,onChange:onChange,row:true},renderedOptions));};var sealOptions=renderOptions(/*#__PURE__*/React.createElement(FormattedMessage,{id:\"terminal.material_avaliable_label\"}),props.materialValue,handleChangeMaterial,[{value:\"False\",label:\"-\"},{value:\"True\",label:\"+\"}]);var terminalOptions=renderOptions(/*#__PURE__*/React.createElement(FormattedMessage,{id:\"terminal.terminal_avaliable_label\"}),props.terminalAvaliable,handleChangeTerminal,[{value:\"False\",label:\"-\"},{value:\"True\",label:\"+\"}]);return/*#__PURE__*/React.createElement(\"form\",{className:classes.form},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"terminal.terminal_number_label\"}),/*#__PURE__*/React.createElement(\"input\",{className:classes.input,ref:ref,type:\"text\"})),sealOptions,terminalOptions,/*#__PURE__*/React.createElement(SuccessButton,{class:classes.btn,value:/*#__PURE__*/React.createElement(FormattedMessage,{id:\"add_button_text\"}),click:create}));};export default AddForm;","map":{"version":3,"sources":["/home/german/PycharmProjects/komax_prettl/PrettlNKKomax/frontend/src/comp/Komax terminal/AddFrom/AddForm.js"],"names":["classes","React","FormattedMessage","withStyles","Radio","FormControlLabel","FormControl","FormLabel","RadioGroup","SuccessButton","AddForm","props","create","ref","current","value","createRef","handleChangeMaterial","event","setMaterial","target","handleChangeTerminal","setTerminal","CustomRadio","root","color","checked","renderOptions","formName","onChange","options","renderedOptions","map","option","label","sealOptions","materialValue","terminalOptions","terminalAvaliable","form","input","btn"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,gBAAR,KAA+B,YAA/B,CACA,OAAQC,UAAR,KAAyB,qBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oCAA7B,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,aAAP,KAA0B,0CAA1B,CACA,GAAIC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,CACrB,GAAIC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CAChBD,KAAK,CAACC,MAAN,CAAaC,GAAG,CAACC,OAAJ,CAAYC,KAAzB,EACF,CAFD,CAIA,GAAIF,CAAAA,GAAG,CAAGZ,KAAK,CAACe,SAAN,EAAV,CAEC,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CACrCP,KAAK,CAACQ,WAAN,CAAkBD,KAAK,CAACE,MAAN,CAAaL,KAA/B,EACH,CAFA,CAID,GAAMM,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACH,KAAD,CAAW,CACpCP,KAAK,CAACW,WAAN,CAAkBJ,KAAK,CAACE,MAAN,CAAaL,KAA/B,EACH,CAFD,CAIA,GAAMQ,CAAAA,WAAW,CAAGpB,UAAU,CAAC,CAC7BqB,IAAI,CAAE,CACJC,KAAK,CAAE,MADH,CAEJ,YAAa,CACXA,KAAK,CAAE,OADI,CAFT,CADuB,CAO7BC,OAAO,CAAE,EAPoB,CAAD,CAAV,CAQjB,SAACf,KAAD,qBAAW,oBAAC,KAAD,gBAAO,KAAK,CAAC,SAAb,EAA2BA,KAA3B,EAAX,EARiB,CAApB,CAUA,GAAIgB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,CAAWb,KAAX,CAAkBc,QAAlB,CAA4BC,OAA5B,CAAwC,CACxD,GAAIC,CAAAA,eAAe,CAAGD,OAAO,CAACE,GAAR,CAAY,SAACC,MAAD,CAAY,CAC1C,mBACI,oBAAC,gBAAD,EAAkB,KAAK,CAAEA,MAAM,CAAClB,KAAhC,CAAuC,OAAO,cAAE,oBAAC,WAAD,MAAhD,CAAiE,KAAK,CAAEkB,MAAM,CAACC,KAA/E,EADJ,CAGH,CAJqB,CAAtB,CAKA,mBACI,oBAAC,WAAD,EAAa,SAAS,CAAC,UAAvB,eACE,oBAAC,SAAD,EAAW,SAAS,CAAC,QAArB,EAA+BN,QAA/B,CADF,cAEE,oBAAC,UAAD,EAAY,aAAYA,QAAxB,CAAkC,IAAI,CAAEA,QAAxC,CAAkD,KAAK,CAAEb,KAAzD,CAAgE,QAAQ,CAAEc,QAA1E,CAAoF,GAAG,KAAvF,EACKE,eADL,CAFF,CADJ,CAQH,CAdD,CAgBA,GAAII,CAAAA,WAAW,CAAGR,aAAa,cAC3B,oBAAC,gBAAD,EAAkB,EAAE,CAAE,mCAAtB,EAD2B,CAE3BhB,KAAK,CAACyB,aAFqB,CAG3BnB,oBAH2B,CAI3B,CACI,CACIF,KAAK,CAAG,OADZ,CAEImB,KAAK,CAAG,GAFZ,CADJ,CAKI,CACInB,KAAK,CAAG,MADZ,CAEImB,KAAK,CAAG,GAFZ,CALJ,CAJ2B,CAA/B,CAgBA,GAAIG,CAAAA,eAAe,CAAGV,aAAa,cAC/B,oBAAC,gBAAD,EAAkB,EAAE,CAAE,mCAAtB,EAD+B,CAE/BhB,KAAK,CAAC2B,iBAFyB,CAG/BjB,oBAH+B,CAI/B,CACI,CACIN,KAAK,CAAG,OADZ,CAEImB,KAAK,CAAG,GAFZ,CADJ,CAKI,CACInB,KAAK,CAAG,MADZ,CAEImB,KAAK,CAAG,GAFZ,CALJ,CAJ+B,CAAnC,CAeA,mBACI,4BAAM,SAAS,CAAElC,OAAO,CAACuC,IAAzB,eACI,8CACI,oBAAC,gBAAD,EAAkB,EAAE,CAAE,gCAAtB,EADJ,cAEI,6BAAO,SAAS,CAAEvC,OAAO,CAACwC,KAA1B,CAAiC,GAAG,CAAE3B,GAAtC,CAA2C,IAAI,CAAE,MAAjD,EAFJ,CADJ,CAKKsB,WALL,CAMKE,eANL,cAOI,oBAAC,aAAD,EAAe,KAAK,CAAErC,OAAO,CAACyC,GAA9B,CAAmC,KAAK,cAAE,oBAAC,gBAAD,EAAkB,EAAE,CAAE,iBAAtB,EAA1C,CAAsF,KAAK,CAAE7B,MAA7F,EAPJ,CADJ,CAWH,CAnFD,CAqFA,cAAeF,CAAAA,OAAf","sourcesContent":["import classes from \"./AddForm.module.css\"\nimport React from \"react\";\nimport {FormattedMessage} from \"react-intl\";\nimport {withStyles} from \"@material-ui/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport SuccessButton from \"../../common/SuccessButton/SuccessButton\";\nlet AddForm = (props) => {\n    let create = () => {\n       props.create(ref.current.value);\n    }\n\n    let ref = React.createRef();\n\n     const handleChangeMaterial = (event) => {\n        props.setMaterial(event.target.value);\n    };\n\n    const handleChangeTerminal = (event) => {\n        props.setTerminal(event.target.value);\n    };\n\n    const CustomRadio = withStyles({\n      root: {\n        color: \"gray\",\n        '&$checked': {\n          color: \"black\",\n        },\n      },\n      checked: {},\n    })((props) => <Radio color=\"default\" {...props} />);\n\n    let renderOptions = (formName, value, onChange, options) => {\n        let renderedOptions = options.map((option) => {\n            return(\n                <FormControlLabel value={option.value} control={<CustomRadio />} label={option.label} />\n            );\n        });\n        return (\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">{formName}</FormLabel>\n              <RadioGroup aria-label={formName} name={formName} value={value} onChange={onChange} row>\n                  {renderedOptions}\n              </RadioGroup>\n            </FormControl>\n        )\n    }\n\n    let sealOptions = renderOptions(\n        <FormattedMessage id={\"terminal.material_avaliable_label\"}/>,\n        props.materialValue,\n        handleChangeMaterial,\n        [\n            {\n                value : \"False\",\n                label : \"-\"\n            },\n            {\n                value : \"True\",\n                label : \"+\"\n            },\n        ]\n    );\n\n    let terminalOptions = renderOptions(\n        <FormattedMessage id={\"terminal.terminal_avaliable_label\"}/>,\n        props.terminalAvaliable,\n        handleChangeTerminal,\n        [\n            {\n                value : \"False\",\n                label : \"-\"\n            },\n            {\n                value : \"True\",\n                label : \"+\"\n            },\n        ]\n    );\n    return(\n        <form className={classes.form}>\n            <label>\n                <FormattedMessage id={\"terminal.terminal_number_label\"}/>\n                <input className={classes.input} ref={ref} type={\"text\"}/>\n            </label>\n            {sealOptions}\n            {terminalOptions}\n            <SuccessButton class={classes.btn} value={<FormattedMessage id={\"add_button_text\"}/>} click={create}/>\n        </form>\n    )\n}\n\nexport default AddForm;"]},"metadata":{},"sourceType":"module"}