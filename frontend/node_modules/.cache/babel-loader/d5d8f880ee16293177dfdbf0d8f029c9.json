{"ast":null,"code":"import React,{useState}from\"react\";import classes from\"./KappaModalForm.module.css\";import createKomax from\"../../../DAL/models/komax\";import SaveButton from\"../../common/SaveButton/SaveButton\";import{FormattedMessage}from'react-intl';import{Multiselect}from'multiselect-react-dropdown';var KappaModalForm=function KappaModalForm(props){var currKomax=props.selected;if(!currKomax){currKomax=createKomax({});}var komaxNumberRef=React.createRef();var statusRef=React.createRef();var collectData=function collectData(e){props.close();var data={number:komaxNumberRef.current.value,status:statusRef.current.value};props.send(data);};var isInEditMode=props.heading===\"Изменить существующий аппарат\";var isNumberValid=props.numberErrMsg.length===0;var isIdValid=props.idErrMsg.length===0;var check=function check(e){if(!isInEditMode){var number=Number(komaxNumberRef.current.value);props.checkValid(number);}};return/*#__PURE__*/React.createElement(\"div\",{className:classes.ModalForm},/*#__PURE__*/React.createElement(\"div\",{className:classes.heading},/*#__PURE__*/React.createElement(\"h2\",null,props.heading),/*#__PURE__*/React.createElement(\"button\",{onClick:props.close,className:classes.closeBtn},\"X\")),/*#__PURE__*/React.createElement(\"div\",{className:classes.inputs},/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"komax.number_label\"}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"\".concat(classes.input,\" \").concat(!isNumberValid?classes.invalidInput:\"\"),ref:komaxNumberRef,value:currKomax.number,onChange:check,disabled:isInEditMode})),isNumberValid?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(\"div\",{className:classes.error},props.numberErrMsg),/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"komax.status_label\"}),/*#__PURE__*/React.createElement(\"select\",{className:classes.select,ref:statusRef},/*#__PURE__*/React.createElement(\"option\",{value:1,selected:currKomax.status===1,className:classes.option},\"Works\"),/*#__PURE__*/React.createElement(\"option\",{value:2,selected:currKomax.status===0,className:classes.option},\"Repair\"),/*#__PURE__*/React.createElement(\"option\",{value:3,selected:currKomax.status===2,className:classes.option},\"Not working\"))),isIdValid?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(\"div\",{className:classes.error},props.idErrMsg)),/*#__PURE__*/React.createElement(\"div\",{className:classes.toolbar},/*#__PURE__*/React.createElement(SaveButton,{click:collectData,disable:props.isFetching||!props.isValid,value:/*#__PURE__*/React.createElement(FormattedMessage,{id:\"save_button_label\"})})));};export default KappaModalForm;","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komaxes/KappaModal/KappaModalForm.js"],"names":["React","useState","classes","createKomax","SaveButton","FormattedMessage","Multiselect","KappaModalForm","props","currKomax","selected","komaxNumberRef","createRef","statusRef","collectData","e","close","data","number","current","value","status","send","isInEditMode","heading","isNumberValid","numberErrMsg","length","isIdValid","idErrMsg","check","Number","checkValid","ModalForm","closeBtn","inputs","input","invalidInput","error","select","option","toolbar","isFetching","isValid"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport classes from \"./KappaModalForm.module.css\";\nimport createKomax from \"../../../DAL/models/komax\";\nimport SaveButton from \"../../common/SaveButton/SaveButton\";\nimport {FormattedMessage} from 'react-intl';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nlet KappaModalForm = (props) => {\n\n    let currKomax = props.selected;\n    if (!currKomax){\n        currKomax = createKomax({});\n    }\n\n    let komaxNumberRef = React.createRef();\n    let statusRef = React.createRef();\n\n    let collectData = (e) => {\n        props.close();\n        let data = {\n            number : komaxNumberRef.current.value,\n            status : statusRef.current.value\n        }\n\n        props.send(data);\n    };\n\n    let isInEditMode = props.heading === \"Изменить существующий аппарат\";\n    let isNumberValid = props.numberErrMsg.length === 0;\n    let isIdValid = props.idErrMsg.length === 0;\n\n    let check = (e) => {\n        if (!isInEditMode){\n            let number = Number(komaxNumberRef.current.value);\n            props.checkValid(number);\n        }\n    }\n\n    return(\n        <div className={classes.ModalForm}>\n            <div className={classes.heading}>\n                <h2>{props.heading}</h2>\n                <button onClick={props.close} className={classes.closeBtn}>X</button>\n            </div>\n            <div className={classes.inputs}>\n                <label>\n                    <FormattedMessage id={\"komax.number_label\"}/>\n                    <input type={\"text\"} className={`${classes.input} ${!isNumberValid ? classes.invalidInput :\"\"}`} ref={komaxNumberRef} value={currKomax.number} onChange={check} disabled={isInEditMode}/>\n                </label>\n                {isNumberValid\n                    ? <></>\n                    : <div className={classes.error}>\n                        {props.numberErrMsg}\n                      </div>\n                }\n                <label>\n                    <FormattedMessage id={\"komax.status_label\"}/>\n                    <select className={classes.select} ref={statusRef}>\n                        <option value={1} selected={currKomax.status === 1} className={classes.option}>Works</option>\n                        <option value={2} selected={currKomax.status === 0} className={classes.option}>Repair</option>\n                        <option value={3} selected={currKomax.status === 2} className={classes.option}>Not working</option>\n                    </select>\n                </label>\n                {isIdValid\n                    ? <></>\n                    : <div className={classes.error}>\n                        {props.idErrMsg}\n                      </div>\n                }\n            </div>\n            <div className={classes.toolbar}>\n                <SaveButton click={collectData} disable={props.isFetching || !props.isValid} value={<FormattedMessage id={\"save_button_label\"}/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport default KappaModalForm;"]},"metadata":{},"sourceType":"module"}