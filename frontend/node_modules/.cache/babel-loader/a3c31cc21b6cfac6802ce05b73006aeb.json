{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komax terminal/AddFrom/AddForm.js\";\nimport classes from \"./AddForm.module.css\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport { withStyles } from \"@material-ui/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport SuccessButton from \"../../common/SuccessButton/SuccessButton\";\n\nlet AddForm = props => {\n  let create = () => {\n    props.create(ref.current.value);\n  };\n\n  let ref = React.createRef();\n\n  const handleChangeMaterial = event => {\n    props.setMaterial(event.target.value);\n  };\n\n  const handleChangeTerminal = event => {\n    props.setTerminal(event.target.value);\n  };\n\n  const CustomRadio = withStyles({\n    root: {\n      color: \"gray\",\n      '&$checked': {\n        color: \"black\"\n      }\n    },\n    checked: {}\n  })(props => /*#__PURE__*/React.createElement(Radio, Object.assign({\n    color: \"default\"\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  })));\n\n  let renderOptions = (formName, value, onChange, options) => {\n    let renderedOptions = options.map(option => {\n      return /*#__PURE__*/React.createElement(FormControlLabel, {\n        value: option.value,\n        control: /*#__PURE__*/React.createElement(CustomRadio, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 65\n          }\n        }),\n        label: option.label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }\n      });\n    });\n    return /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      component: \"legend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }\n    }, formName), /*#__PURE__*/React.createElement(RadioGroup, {\n      \"aria-label\": formName,\n      name: formName,\n      value: value,\n      onChange: onChange,\n      row: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, renderedOptions));\n  };\n\n  let sealOptions = renderOptions( /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"terminal.material_avaliable_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), props.materialValue, handleChangeMaterial, [{\n    value: \"False\",\n    label: \"-\"\n  }, {\n    value: \"True\",\n    label: \"+\"\n  }]);\n  let terminalOptions = renderOptions( /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"terminal.terminal_avaliable_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), props.terminalAvaliable, handleChangeTerminal, [{\n    value: \"False\",\n    label: \"-\"\n  }, {\n    value: \"True\",\n    label: \"+\"\n  }]);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"terminal.terminal_number_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: classes.input,\n    ref: ref,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })), sealOptions, terminalOptions, /*#__PURE__*/React.createElement(SuccessButton, {\n    class: classes.btn,\n    value: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"add_button_text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 55\n      }\n    }),\n    click: create,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default AddForm;","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komax terminal/AddFrom/AddForm.js"],"names":["classes","React","FormattedMessage","withStyles","Radio","FormControlLabel","FormControl","FormLabel","RadioGroup","SuccessButton","AddForm","props","create","ref","current","value","createRef","handleChangeMaterial","event","setMaterial","target","handleChangeTerminal","setTerminal","CustomRadio","root","color","checked","renderOptions","formName","onChange","options","renderedOptions","map","option","label","sealOptions","materialValue","terminalOptions","terminalAvaliable","form","input","btn"],"mappings":"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","sourcesContent":["import classes from \"./AddForm.module.css\"\nimport React from \"react\";\nimport {FormattedMessage} from \"react-intl\";\nimport {withStyles} from \"@material-ui/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport SuccessButton from \"../../common/SuccessButton/SuccessButton\";\nlet AddForm = (props) => {\n    let create = () => {\n       props.create(ref.current.value);\n    }\n\n    let ref = React.createRef();\n\n     const handleChangeMaterial = (event) => {\n        props.setMaterial(event.target.value);\n    };\n\n    const handleChangeTerminal = (event) => {\n        props.setTerminal(event.target.value);\n    };\n\n    const CustomRadio = withStyles({\n      root: {\n        color: \"gray\",\n        '&$checked': {\n          color: \"black\",\n        },\n      },\n      checked: {},\n    })((props) => <Radio color=\"default\" {...props} />);\n\n    let renderOptions = (formName, value, onChange, options) => {\n        let renderedOptions = options.map((option) => {\n            return(\n                <FormControlLabel value={option.value} control={<CustomRadio />} label={option.label} />\n            );\n        });\n        return (\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">{formName}</FormLabel>\n              <RadioGroup aria-label={formName} name={formName} value={value} onChange={onChange} row>\n                  {renderedOptions}\n              </RadioGroup>\n            </FormControl>\n        )\n    }\n\n    let sealOptions = renderOptions(\n        <FormattedMessage id={\"terminal.material_avaliable_label\"}/>,\n        props.materialValue,\n        handleChangeMaterial,\n        [\n            {\n                value : \"False\",\n                label : \"-\"\n            },\n            {\n                value : \"True\",\n                label : \"+\"\n            },\n        ]\n    );\n\n    let terminalOptions = renderOptions(\n        <FormattedMessage id={\"terminal.terminal_avaliable_label\"}/>,\n        props.terminalAvaliable,\n        handleChangeTerminal,\n        [\n            {\n                value : \"False\",\n                label : \"-\"\n            },\n            {\n                value : \"True\",\n                label : \"+\"\n            },\n        ]\n    );\n    return(\n        <form className={classes.form}>\n            <label>\n                <FormattedMessage id={\"terminal.terminal_number_label\"}/>\n                <input className={classes.input} ref={ref} type={\"text\"}/>\n            </label>\n            {sealOptions}\n            {terminalOptions}\n            <SuccessButton class={classes.btn} value={<FormattedMessage id={\"add_button_text\"}/>} click={create}/>\n        </form>\n    )\n}\n\nexport default AddForm;"]},"metadata":{},"sourceType":"module"}