{"ast":null,"code":"import _objectSpread from\"/home/german/PycharmProjects/komax_prettl/PrettlNKKomax/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import komaxApi from\"../DAL/komax/komax-api\";import handle401 from\"./handle401\";var initialState={isFetching:false,komaxList:[],statuses:[]};var TOGGLE_FETCHING=\"KOMAX/TOGGLE_FETCHING\";var SET_LIST=\"KOMAX/TOGGLE_SET_LIST\";var SET_STATUSES=\"KOMAX/STATUSES\";var komaxReducer=function komaxReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var stateCopy=_objectSpread({},state);switch(action.type){case TOGGLE_FETCHING:{stateCopy.isFetching=!stateCopy.isFetching;break;}case SET_LIST:{stateCopy.komaxList=action.list.sort(function(elem,elem2){return elem.number-elem2.number;});break;}case SET_STATUSES:{stateCopy.statuses=action.statuses;}}return stateCopy;};var toggleFetchAC=function toggleFetchAC(){return{type:TOGGLE_FETCHING};};var setListAC=function setListAC(list){return{type:SET_LIST,list:list};};var setStatusesAC=function setStatusesAC(statuses){return{type:SET_STATUSES,statuses:statuses};};var getListThunk=function getListThunk(){return function(dispatch){dispatch(toggleFetchAC());komaxApi.getKomaxList().then(function(data){dispatch(setListAC(data));dispatch(toggleFetchAC());}).catch(function(err){handle401(err,dispatch);});};};var createKomaxThunk=function createKomaxThunk(komax){return function(dispatch){dispatch(toggleFetchAC());komaxApi.createKomax(komax).then(function(data){dispatch(getListThunk());dispatch(toggleFetchAC());}).catch(function(err){handle401(err,dispatch);});};};var updateKomaxThunk=function updateKomaxThunk(komax){return function(dispatch){dispatch(toggleFetchAC());komaxApi.updateKomax(komax).then(function(data){dispatch(getListThunk());dispatch(toggleFetchAC());}).catch(function(err){handle401(err,dispatch);});};};var getStatusesThunk=function getStatusesThunk(){return function(dispatch){var send=function send(){komaxApi.getStatuses().then(function(resp){var path=window.location.pathname;if(path===\"/komaxes\"){dispatch(setStatusesAC(resp));setTimeout(function(){send();},2000);}else{return'';}}).catch(function(err){handle401(err,dispatch);});};send();};};export{toggleFetchAC,setListAC,komaxReducer,getListThunk,createKomaxThunk,updateKomaxThunk,getStatusesThunk};","map":{"version":3,"sources":["/home/german/PycharmProjects/komax_prettl/PrettlNKKomax/frontend/src/reducers/komaxReducer.js"],"names":["komaxApi","handle401","initialState","isFetching","komaxList","statuses","TOGGLE_FETCHING","SET_LIST","SET_STATUSES","komaxReducer","state","action","stateCopy","type","list","sort","elem","elem2","number","toggleFetchAC","setListAC","setStatusesAC","getListThunk","dispatch","getKomaxList","then","data","catch","err","createKomaxThunk","komax","createKomax","updateKomaxThunk","updateKomax","getStatusesThunk","send","getStatuses","resp","path","window","location","pathname","setTimeout"],"mappings":"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","sourcesContent":["import komaxApi from \"../DAL/komax/komax-api\";\nimport handle401 from \"./handle401\";\n\nconst initialState = {\n    isFetching : false,\n    komaxList : [],\n    statuses : []\n}\n\nconst TOGGLE_FETCHING = \"KOMAX/TOGGLE_FETCHING\";\nconst SET_LIST = \"KOMAX/TOGGLE_SET_LIST\";\nconst SET_STATUSES = \"KOMAX/STATUSES\";\n\nconst komaxReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case TOGGLE_FETCHING : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break;\n        }\n\n        case SET_LIST : {\n            stateCopy.komaxList = action.list.sort((elem, elem2) => {\n                return elem.number - elem2.number\n            });\n            break;\n        }\n\n        case SET_STATUSES : {\n            stateCopy.statuses = action.statuses\n        }\n    }\n    return stateCopy;\n}\n\nconst toggleFetchAC = () => {\n    return {\n        type : TOGGLE_FETCHING\n    }\n}\n\nconst setListAC = (list) => {\n    return {\n        type : SET_LIST,\n        list : list\n    }\n}\n\nconst setStatusesAC = (statuses) => {\n    return {\n        type : SET_STATUSES,\n        statuses : statuses\n    }\n}\n\nconst getListThunk = () => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        komaxApi.getKomaxList()\n            .then((data) => {\n                dispatch(setListAC(data));\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst createKomaxThunk = (komax) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        komaxApi.createKomax(komax)\n            .then((data) => {\n                dispatch(getListThunk());\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst updateKomaxThunk = (komax) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        komaxApi.updateKomax(komax)\n            .then((data) => {\n                dispatch(getListThunk());\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst getStatusesThunk = () => {\n    return (dispatch) => {\n        let send = () => {\n            komaxApi.getStatuses()\n                .then(resp => {\n                    let path = window.location.pathname;\n                    if (path === \"/komaxes\"){\n                        dispatch(setStatusesAC(resp));\n                        setTimeout(() => {\n                            send();\n                        }, 2000);\n                    } else {\n                        return '';\n                    }\n                })\n                .catch(err => {\n                    handle401(err, dispatch)\n                })\n        }\n        send();\n    }\n}\n\nexport {toggleFetchAC, setListAC, komaxReducer, getListThunk, createKomaxThunk, updateKomaxThunk, getStatusesThunk};"]},"metadata":{},"sourceType":"module"}