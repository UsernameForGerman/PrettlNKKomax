{"ast":null,"code":"import RecentTask from\"./RecentTask\";import React,{useEffect}from\"react\";import classes from\"./RecentTask.module.css\";import{connect}from\"react-redux\";import{getStatusThunk}from\"../../../reducers/tasksReducer\";import TasksSelector from\"../../../selectors/tasksSelector\";import LinearProgress from\"@material-ui/core/LinearProgress\";import BASE_URL from\"../../../DAL/getBaseUrl\";import LoginSelector from\"../../../selectors/loginSelector\";var RecentTaskContainer=function RecentTaskContainer(props){useEffect(function(){props.getStatus();},[props.status.harnesses.length]);var komaxes=props.status.komax_task!==undefined?props.status.komax_task.komaxes:[];var harnesses=props.status.harnesses?props.status.harnesses:[];var name=props.status.komax_task!==undefined?props.status.komax_task.task_name:-1;var ticket_komax=komaxes.map(function(elem){return/*#__PURE__*/React.createElement(\"a\",{href:BASE_URL+\"tasks/\"+name+\"/get_ticket_komax/\"+elem.komax+\"/\",target:\"blank\"},/*#__PURE__*/React.createElement(\"button\",{className:classes.greenBtn},\"Ticket \",elem.komax));});var harnesses_btns=harnesses.map(function(elem){var percent=isNaN(elem.left_time_secs/elem.sum_time_secs)?0:elem.left_time_secs/elem.sum_time_secs*100;return/*#__PURE__*/React.createElement(\"div\",{className:classes.harness},/*#__PURE__*/React.createElement(\"div\",{className:classes.harness_heading},elem.harness_number),/*#__PURE__*/React.createElement(\"div\",{className:classes.status},percent,\" % completed\",/*#__PURE__*/React.createElement(LinearProgress,{variant:\"determinate\",value:percent})),/*#__PURE__*/React.createElement(\"a\",{href:BASE_URL+\"harnesses/\"+elem.harness_number+\"/download/\",target:\"blank\"},/*#__PURE__*/React.createElement(\"button\",{className:classes.greenBtn},\"Download\")));});return/*#__PURE__*/React.createElement(React.Fragment,null,name+\"\"===\"-1\"||props.role.toString().toLowerCase()!==(\"master\"||\"operator\")?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(RecentTask,Object.assign({},props,{tickets:ticket_komax,harnesses:harnesses_btns,number:name})));};var mapStateToProps=function mapStateToProps(state){return{status:TasksSelector.getStatus(state),role:LoginSelector.getRole(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getStatus:function getStatus(){dispatch(getStatusThunk());}};};export default connect(mapStateToProps,mapDispatchToProps)(RecentTaskContainer);","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Start/RecentTask/RecentTaskContainer.js"],"names":["RecentTask","React","useEffect","classes","connect","getStatusThunk","TasksSelector","LinearProgress","BASE_URL","LoginSelector","RecentTaskContainer","props","getStatus","status","harnesses","length","komaxes","komax_task","undefined","name","task_name","ticket_komax","map","elem","komax","greenBtn","harnesses_btns","percent","isNaN","left_time_secs","sum_time_secs","harness","harness_heading","harness_number","role","toString","toLowerCase","mapStateToProps","state","getRole","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import RecentTask from \"./RecentTask\";\nimport React, {useEffect} from \"react\";\nimport classes from \"./RecentTask.module.css\"\nimport {connect} from \"react-redux\";\nimport {getStatusThunk} from \"../../../reducers/tasksReducer\";\nimport TasksSelector from \"../../../selectors/tasksSelector\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport BASE_URL from \"../../../DAL/getBaseUrl\";\nimport LoginSelector from \"../../../selectors/loginSelector\";\nlet RecentTaskContainer = (props) => {\n    useEffect(() => {\n        props.getStatus();\n    }, [props.status.harnesses.length]);\n\n    let komaxes = props.status.komax_task !== undefined ? props.status.komax_task.komaxes : [];\n\n    let harnesses =  props.status.harnesses ? props.status.harnesses : [];\n\n    let name = props.status.komax_task !== undefined ? props.status.komax_task.task_name : -1;\n\n    let ticket_komax = komaxes.map(elem => {\n        return(\n            <a href={BASE_URL + \"tasks/\" + name +\"/get_ticket_komax/\" + elem.komax +\"/\"} target={\"blank\"}>\n                <button className={classes.greenBtn}>\n                    Ticket {elem.komax}\n                </button>\n            </a>\n        )\n    });\n\n    let harnesses_btns = harnesses.map(elem => {\n        let percent = isNaN(elem.left_time_secs / elem.sum_time_secs) ? 0 : (elem.left_time_secs / elem.sum_time_secs) * 100;\n        return(\n            <div className={classes.harness}>\n                <div className={classes.harness_heading}>\n                    {elem.harness_number}\n                </div>\n                <div className={classes.status}>\n                    {percent} % completed\n                    <LinearProgress variant=\"determinate\" value={percent} />\n                </div>\n                <a href={BASE_URL + \"harnesses/\" + elem.harness_number +\"/download/\"} target={\"blank\"}>\n                    <button className={classes.greenBtn}>\n                        Download\n                    </button>\n                </a>\n            </div>\n        )\n    });\n\n    return (\n        <>\n            {name + \"\" === \"-1\" || props.role.toString().toLowerCase() !== (\"master\" || \"operator\")\n                ? <></>\n                : <RecentTask {...props} tickets={ticket_komax} harnesses={harnesses_btns} number={name}/>\n            }\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        status : TasksSelector.getStatus(state),\n        role : LoginSelector.getRole(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        getStatus : () => {\n            dispatch(getStatusThunk())\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecentTaskContainer);"]},"metadata":{},"sourceType":"module"}