{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Start/StartPageContainer.js\";\nimport StartPage from \"./StartPage\";\nimport React, { useEffect, useState } from \"react\";\nimport auth from \"../AuthHOC/authHOC\";\nimport ava from \"../../assets/images/ava.png\";\nimport Modal from 'react-modal';\nimport { connect } from \"react-redux\";\nimport LoginSelector from \"../../selectors/loginSelector\";\nimport { chooseKomaxThunk } from \"../../reducers/authReducer\";\nimport ChooseModalContainer from \"./Modal/ChooseModalContainer\";\nimport KomaxSelector from \"../../selectors/komaxSelector\";\nimport { getListThunk } from \"../../reducers/komaxReducer\";\nimport SaveButton from \"../common/SaveButton/SaveButton\";\nimport classes from \"./StartPage.module.css\";\nimport { FormattedMessage } from \"react-intl\";\n\nlet StartPageContainer = props => {\n  useEffect(() => {\n    props.fetchKomaxes();\n  }, [props.komaxList.length]);\n  const customStyles = {\n    content: {\n      top: '25%',\n      left: '60%',\n      transform: 'translate(-70%, -20%)'\n    }\n  };\n  let user = {\n    username: props.login,\n    role: props.role\n  };\n  const [isOpen, setOpen] = useState(false);\n  const [isSettingsOpen, setSettingsOpen] = useState(false);\n\n  let openModal = () => {\n    setOpen(true);\n  };\n\n  let closeModal = () => {\n    setOpen(false);\n  };\n\n  let openSettings = () => {\n    setSettingsOpen(true);\n  };\n\n  let closeSettings = () => {\n    setSettingsOpen(false);\n  };\n\n  if (props.role.toString().toLocaleLowerCase() === \"operator\" && props.komax === \"\" && !isOpen) openModal();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StartPage, Object.assign({}, user, {\n    ava: ava,\n    open: openSettings\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isOpen,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChooseModalContainer, {\n    komaxList: props.komaxList,\n    close: closeModal,\n    komax: props.komax,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: isSettingsOpen,\n    style: customStyles,\n    onRequestClose: closeSettings,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.choose_form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.choose_heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"choose_avatar_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.ava_block,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: ava,\n    alt: \"Avatar\",\n    className: classes.choose_ava,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: classes.input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.btns,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SaveButton, {\n    value: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"save_button_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 44\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: classes.close_btn,\n    onClick: closeSettings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"close_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 87\n    }\n  }))))));\n};\n\nlet mapStateToProps = state => {\n  return {\n    login: LoginSelector.getLogin(state),\n    role: LoginSelector.getRole(state),\n    komax: LoginSelector.getKomax(state),\n    komaxList: KomaxSelector.getList(state)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    choose: (login, number) => {\n      dispatch(chooseKomaxThunk(login, number));\n    },\n    fetchKomaxes: () => {\n      dispatch(getListThunk());\n    }\n  };\n};\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(StartPageContainer));","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Start/StartPageContainer.js"],"names":["StartPage","React","useEffect","useState","auth","ava","Modal","connect","LoginSelector","chooseKomaxThunk","ChooseModalContainer","KomaxSelector","getListThunk","SaveButton","classes","FormattedMessage","StartPageContainer","props","fetchKomaxes","komaxList","length","customStyles","content","top","left","transform","user","username","login","role","isOpen","setOpen","isSettingsOpen","setSettingsOpen","openModal","closeModal","openSettings","closeSettings","toString","toLocaleLowerCase","komax","choose_form","choose_heading","ava_block","choose_ava","input","btns","close_btn","mapStateToProps","state","getLogin","getRole","getKomax","getList","mapDispatchToProps","dispatch","choose","number"],"mappings":"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","sourcesContent":["import StartPage from \"./StartPage\";\nimport React, {useEffect, useState} from \"react\";\nimport auth from \"../AuthHOC/authHOC\";\nimport ava from \"../../assets/images/ava.png\"\nimport Modal from 'react-modal';\nimport {connect} from \"react-redux\";\nimport LoginSelector from \"../../selectors/loginSelector\";\nimport {chooseKomaxThunk} from \"../../reducers/authReducer\";\nimport ChooseModalContainer from \"./Modal/ChooseModalContainer\";\nimport KomaxSelector from \"../../selectors/komaxSelector\";\nimport {getListThunk} from \"../../reducers/komaxReducer\";\nimport SaveButton from \"../common/SaveButton/SaveButton\";\nimport classes from \"./StartPage.module.css\"\nimport {FormattedMessage} from \"react-intl\";\n\nlet StartPageContainer = (props) => {\n    useEffect(() => {\n        props.fetchKomaxes();\n    }, [props.komaxList.length])\n\n    const customStyles = {\n      content : {\n        top                   : '25%',\n        left                  : '60%',\n        transform             : 'translate(-70%, -20%)'\n      }\n    };\n\n    let user = {\n        username : props.login,\n        role : props.role\n    }\n\n    const [isOpen, setOpen] = useState(false);\n    const [isSettingsOpen, setSettingsOpen] = useState(false);\n\n    let openModal = () => {\n        setOpen(true);\n    }\n\n    let closeModal = () => {\n        setOpen(false);\n    }\n\n    let openSettings = () => {\n        setSettingsOpen(true);\n    }\n\n    let closeSettings = () => {\n        setSettingsOpen(false);\n    }\n\n    if (props.role.toString().toLocaleLowerCase() === \"operator\" && props.komax === \"\" && !isOpen) openModal();\n\n    return(\n        <>\n            <StartPage {...user} ava={ava} open={openSettings} {...props}/>\n            <Modal\n              isOpen={isOpen}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n                <ChooseModalContainer komaxList={props.komaxList} close={closeModal} komax={props.komax}/>\n            </Modal>\n            <Modal\n              isOpen={isSettingsOpen}\n              style={customStyles}\n              onRequestClose={closeSettings}\n              contentLabel=\"Example Modal\"\n            >\n                <div className={classes.choose_form}>\n                    <div className={classes.choose_heading}>\n                        <FormattedMessage id={\"choose_avatar_label\"}/>\n                    </div>\n                    <div className={classes.ava_block}>\n                        <img src={ava} alt={\"Avatar\"} className={classes.choose_ava}/>\n                        <input type={\"file\"} className={classes.input}/>\n                    </div>\n                    <div className={classes.btns}>\n                        <SaveButton value={<FormattedMessage id={\"save_button_label\"}/>}/>\n                        <button className={classes.close_btn} onClick={closeSettings}><FormattedMessage id={\"close_label\"}/></button>\n                    </div>\n                </div>\n            </Modal>\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        login : LoginSelector.getLogin(state),\n        role : LoginSelector.getRole(state),\n        komax : LoginSelector.getKomax(state),\n        komaxList : KomaxSelector.getList(state),\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        choose : (login, number) => {\n            dispatch(chooseKomaxThunk(login, number))\n        },\n\n        fetchKomaxes : () => {\n            dispatch(getListThunk())\n        }\n    }\n}\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(StartPageContainer));"]},"metadata":{},"sourceType":"module"}