{"ast":null,"code":"import _slicedToArray from\"/home/german/PycharmProjects/komax_prettl/PrettlNKKomax/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import classes from\"./CreateTaskPage.module.css\";import React,{useState}from\"react\";import FormControlLabel from\"@material-ui/core/FormControlLabel\";import FormControl from\"@material-ui/core/FormControl\";import FormLabel from\"@material-ui/core/FormLabel\";import RadioGroup from\"@material-ui/core/RadioGroup\";import Radio from\"@material-ui/core/Radio\";import SuccessButton from\"../../common/SuccessButton/SuccessButton\";import{withStyles}from\"@material-ui/styles\";import{FormattedMessage}from\"react-intl\";import Select from\"@material-ui/core/Select\";import Input from\"@material-ui/core/Input\";import MenuItem from\"@material-ui/core/MenuItem\";import IconButton from\"../../common/IconButton/IconButton\";import Modal from\"react-modal\";import TaskCreateModalFormContainer from\"./Modal/TCPModalContainer,js\";import{Multiselect}from\"multiselect-react-dropdown\";import'../../../index.css';import{NavLink,Redirect}from\"react-router-dom\";var CreateTaskPage=function CreateTaskPage(props){var MenuProps={PaperProps:{style:{width:100,top:\"100px !important\"}}};var customStyles={content:{top:'25%',left:'20%',transform:'translate(-10%, -20%)'}};var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isModalOpen=_useState2[0],setIsOpen=_useState2[1];var openModal=function openModal(){setIsOpen(true);};var open=function open(){openModal();props.fetch();};var closeModal=function closeModal(){setIsOpen(false);};var oldHandle=function oldHandle(e,callback){callback(e.target.value);};var handleMultiSelect=function handleMultiSelect(e,callback){callback(e.map(function(elem){return elem.name;}));};var openNextForm=function openNextForm(e){e.preventDefault();props.setContinue(true);var data={work_shift:workShiftRef.current.value,name:numberRef.current.value};props.sendDataFirst(data);};var collectData=function collectData(e){props.sendDataSecond({name:numberRef.current.value});};var renderedHarnesses=props.multiselectOptions.map(function(elem){return/*#__PURE__*/React.createElement(\"label\",null,elem,/*#__PURE__*/React.createElement(\"input\",{placeholder:\"Количество\",type:\"number\",onChange:function onChange(e){props.addHarnessData(elem,e);}}));});var handleChangeWork=function handleChangeWork(event){props.setWorkType(event.target.value);};var handleChangeLoading=function handleChangeLoading(event){props.setLoadingType(event.target.value);};var numberRef=React.createRef();var workShiftRef=React.createRef();var checkValid=function checkValid(){var text=numberRef.current.value;props.check(text);};var CustomRadio=withStyles({root:{color:\"gray\",'&$checked':{color:\"black\"}},checked:{}})(function(props){return/*#__PURE__*/React.createElement(Radio,Object.assign({color:\"default\"},props));});var renderOptions=function renderOptions(formName,value,onChange,options){var renderedOptions=options.map(function(option){return/*#__PURE__*/React.createElement(FormControlLabel,{value:option.value,control:/*#__PURE__*/React.createElement(CustomRadio,null),label:option.label});});return/*#__PURE__*/React.createElement(FormControl,{component:\"fieldset\"},/*#__PURE__*/React.createElement(FormLabel,{component:\"legend\"},formName),/*#__PURE__*/React.createElement(RadioGroup,{\"aria-label\":formName,name:formName,value:value,onChange:onChange,row:true},renderedOptions));};var workType=renderOptions(\"Work type\",props.workType,handleChangeWork,[{value:\"parallel\",label:\"Parallel\"},{value:\"consistently\",label:\"Consistently\"}]);var loadingType=renderOptions(\"Loading type\",props.loadingType,handleChangeLoading,[{value:\"new\",label:\"New\"},{value:\"mix\",label:\"Mix\"},{value:\"urgent\",label:\"Urgent\"}]);var convertOptions=function convertOptions(src){return src.map(function(elem){return{name:elem,id:elem};});};var harnesses_options=convertOptions(props.harnesses_options);return/*#__PURE__*/React.createElement(\"div\",{className:classes.formWrapper},/*#__PURE__*/React.createElement(\"div\",{className:classes.form},/*#__PURE__*/React.createElement(\"div\",{className:classes.heading},/*#__PURE__*/React.createElement(\"div\",{className:classes.heading_text},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"tasks.create_new_task_heading\"})),/*#__PURE__*/React.createElement(IconButton,{icon:[\"fas\",'cog'],class:classes.modalBtn,click:open})),/*#__PURE__*/React.createElement(\"div\",{className:classes.row},/*#__PURE__*/React.createElement(\"div\",{className:classes.column},/*#__PURE__*/React.createElement(\"div\",{className:classes.input_wrapper},/*#__PURE__*/React.createElement(\"label\",{className:classes.label},/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"tasks.create_new_task_job_name_label\"}),\":\"),/*#__PURE__*/React.createElement(\"input\",{className:classes.input,type:\"text\",ref:numberRef}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.input_wrapper},/*#__PURE__*/React.createElement(\"label\",{className:classes.label},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"tasks.create_new_task_harnesses_label\"}),\":\"),/*#__PURE__*/React.createElement(\"div\",{className:classes.multiselect_wrapper},/*#__PURE__*/React.createElement(Multiselect,{options:harnesses_options,onSelect:function onSelect(e){handleMultiSelect(e,props.setMultiselectOptions);},onRemove:function onRemove(e){handleMultiSelect(e,props.setMultiselectOptions);},selectedValues:props.multiselectOptions.map(function(elem){return{name:elem,id:elem};}),displayValue:\"name\",style:{multiselectContainer:{// To change css for multiselect (Width,height,etc..)\nwidth:\"200px\"}},id:\"harnesses_select\"})))),/*#__PURE__*/React.createElement(\"div\",{className:classes.input_wrapper},/*#__PURE__*/React.createElement(\"label\",{className:classes.label},/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"tasks.create_new_task_komaxes_label\"}),\":\"),/*#__PURE__*/React.createElement(Select,{classes:classes.select,multiple:true,value:props.komaxesOptions,onChange:function onChange(e){oldHandle(e,props.setKomaxesOptions);},input:/*#__PURE__*/React.createElement(Input,null),MenuProps:MenuProps},props.komaxes_options.map(function(elem){return/*#__PURE__*/React.createElement(MenuItem,{key:elem,value:elem},elem);})))),/*#__PURE__*/React.createElement(\"div\",{className:classes.input_wrapper},/*#__PURE__*/React.createElement(\"label\",{className:classes.label},/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"tasks.create_new_task_kappas_label\"}),\":\"),/*#__PURE__*/React.createElement(Select,{classes:classes.select,multiple:true,value:props.kappasOptions,onChange:function onChange(e){oldHandle(e,props.setKappasOptions);},input:/*#__PURE__*/React.createElement(Input,null)},props.kappas_options.map(function(elem){return/*#__PURE__*/React.createElement(MenuItem,{key:elem,value:elem},elem);})))),/*#__PURE__*/React.createElement(\"div\",{className:classes.input_wrapper},/*#__PURE__*/React.createElement(\"label\",{className:classes.label},/*#__PURE__*/React.createElement(\"h3\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"tasks.create_new_task_work_shift_label\"}),\":\"),/*#__PURE__*/React.createElement(\"input\",{className:classes.input,type:\"number\",ref:workShiftRef})))),/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(classes.column,\" \").concat(classes.right)},/*#__PURE__*/React.createElement(\"div\",{className:classes.options},workType,loadingType),/*#__PURE__*/React.createElement(SuccessButton,{value:/*#__PURE__*/React.createElement(FormattedMessage,{id:\"tasks.create_new_task_continue_label\"}),class:classes.addBtn,disable:!props.isValid||props.shouldContinue,click:openNextForm}),/*#__PURE__*/React.createElement(\"div\",{className:classes.err},props.errMsg)))),/*#__PURE__*/React.createElement(\"div\",{className:classes.form},!props.shouldContinue?/*#__PURE__*/React.createElement(\"button\",{disabled:true,className:classes.fill},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"tasks.create_new_task_fill_form_label\"})):/*#__PURE__*/React.createElement(\"form\",{className:classes.right_form},/*#__PURE__*/React.createElement(\"div\",{className:classes.list},renderedHarnesses),/*#__PURE__*/React.createElement(NavLink,{to:\"/tasks\",onClick:collectData},/*#__PURE__*/React.createElement(SuccessButton,{value:\"Создать задание\",class:classes.addBtn,disable:!props.canSend})))),/*#__PURE__*/React.createElement(Modal,{isOpen:isModalOpen,onRequestClose:closeModal,style:customStyles,contentLabel:\"Example Modal\"},/*#__PURE__*/React.createElement(TaskCreateModalFormContainer,{close:closeModal})));};export default CreateTaskPage;","map":{"version":3,"sources":["/home/german/PycharmProjects/komax_prettl/PrettlNKKomax/frontend/src/comp/Tasks/CreateTaskPage/CreateTaskPage.js"],"names":["classes","React","useState","FormControlLabel","FormControl","FormLabel","RadioGroup","Radio","SuccessButton","withStyles","FormattedMessage","Select","Input","MenuItem","IconButton","Modal","TaskCreateModalFormContainer","Multiselect","NavLink","Redirect","CreateTaskPage","props","MenuProps","PaperProps","style","width","top","customStyles","content","left","transform","isModalOpen","setIsOpen","openModal","open","fetch","closeModal","oldHandle","e","callback","target","value","handleMultiSelect","map","elem","name","openNextForm","preventDefault","setContinue","data","work_shift","workShiftRef","current","numberRef","sendDataFirst","collectData","sendDataSecond","renderedHarnesses","multiselectOptions","addHarnessData","handleChangeWork","event","setWorkType","handleChangeLoading","setLoadingType","createRef","checkValid","text","check","CustomRadio","root","color","checked","renderOptions","formName","onChange","options","renderedOptions","option","label","workType","loadingType","convertOptions","src","id","harnesses_options","formWrapper","form","heading","heading_text","modalBtn","row","column","input_wrapper","input","multiselect_wrapper","setMultiselectOptions","multiselectContainer","select","komaxesOptions","setKomaxesOptions","komaxes_options","kappasOptions","setKappasOptions","kappas_options","right","addBtn","isValid","shouldContinue","err","errMsg","fill","right_form","list","canSend"],"mappings":"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","sourcesContent":["import classes from \"./CreateTaskPage.module.css\"\nimport React, {useState} from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport Radio from \"@material-ui/core/Radio\";\nimport SuccessButton from \"../../common/SuccessButton/SuccessButton\";\nimport {withStyles} from \"@material-ui/styles\";\nimport {FormattedMessage} from \"react-intl\";\nimport Select from \"@material-ui/core/Select\";\nimport Input from \"@material-ui/core/Input\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"../../common/IconButton/IconButton\";\nimport Modal from \"react-modal\";\nimport TaskCreateModalFormContainer from \"./Modal/TCPModalContainer,js\";\nimport {Multiselect} from \"multiselect-react-dropdown\";\nimport '../../../index.css';\nimport {NavLink, Redirect} from \"react-router-dom\";\nlet CreateTaskPage = (props) => {\n    const MenuProps = {\n          PaperProps: {\n            style: {\n              width: 100,\n              top: \"100px !important\"\n            },\n          },\n        };\n    const customStyles = {\n      content : {\n        top                   : '25%',\n        left                  : '20%',\n        transform             : 'translate(-10%, -20%)'\n      }\n    };\n\n    let [isModalOpen, setIsOpen] = useState(false);\n    let openModal = () => {\n        setIsOpen(true);\n    }\n\n    let open = () => {\n        openModal();\n        props.fetch();\n    }\n\n    let closeModal = () => {\n        setIsOpen(false)\n    }\n\n    let oldHandle = (e, callback) => {\n        callback(e.target.value);\n    }\n\n    let handleMultiSelect = (e, callback) => {\n        callback(e.map(elem => elem.name));\n    }\n\n    let openNextForm = (e) => {\n        e.preventDefault();\n        props.setContinue(true);\n        let data = {\n            work_shift : workShiftRef.current.value,\n            name : numberRef.current.value\n        }\n        props.sendDataFirst(data);\n    }\n\n    let collectData = (e) => {\n        props.sendDataSecond({\n            name : numberRef.current.value\n        });\n    }\n\n    let renderedHarnesses = props.multiselectOptions.map(elem => {\n        return(\n            <label>\n                {elem}\n                <input placeholder={\"Количество\"} type={\"number\"} onChange={(e) => {\n                    props.addHarnessData(elem, e)\n                }}/>\n            </label>\n        )\n    })\n\n    const handleChangeWork = (event) => {\n        props.setWorkType(event.target.value);\n    };\n\n    const handleChangeLoading = (event) => {\n        props.setLoadingType(event.target.value);\n    };\n\n    let numberRef = React.createRef();\n    let workShiftRef = React.createRef();\n\n    let checkValid = () => {\n        let text = numberRef.current.value;\n        props.check(text);\n    }\n\n    const CustomRadio = withStyles({\n      root: {\n        color: \"gray\",\n        '&$checked': {\n          color: \"black\",\n        },\n      },\n      checked: {},\n    })((props) => <Radio color=\"default\" {...props} />);\n\n    let renderOptions = (formName, value, onChange, options) => {\n        let renderedOptions = options.map((option) => {\n            return(\n                <FormControlLabel value={option.value} control={<CustomRadio />} label={option.label} />\n            );\n        });\n        return (\n            <FormControl component=\"fieldset\">\n              <FormLabel component=\"legend\">{formName}</FormLabel>\n              <RadioGroup aria-label={formName} name={formName} value={value} onChange={onChange} row>\n                  {renderedOptions}\n              </RadioGroup>\n            </FormControl>\n        )\n    }\n\n    let workType = renderOptions(\n        \"Work type\",\n        props.workType,\n        handleChangeWork,\n        [\n            {\n                value : \"parallel\",\n                label : \"Parallel\"\n            },\n            {\n                value : \"consistently\",\n                label : \"Consistently\"\n            }\n        ]\n    );\n\n    let loadingType = renderOptions(\n        \"Loading type\",\n        props.loadingType,\n        handleChangeLoading,\n        [\n            {\n                value : \"new\",\n                label : \"New\"\n            },\n            {\n                value : \"mix\",\n                label : \"Mix\"\n            },\n            {\n                value : \"urgent\",\n                label : \"Urgent\"\n            }\n        ]\n    );\n\n    let convertOptions = (src) => {\n        return src.map(elem => {\n            return {\n                name: elem,\n                id: elem\n            }\n        })\n    }\n\n    let harnesses_options = convertOptions(props.harnesses_options);\n\n    return(\n        <div className={classes.formWrapper}>\n            <div className={classes.form}>\n                <div className={classes.heading}>\n                    <div className={classes.heading_text}><FormattedMessage id={\"tasks.create_new_task_heading\"}/></div>\n                    <IconButton icon={[\"fas\", 'cog']} class={classes.modalBtn} click={open}/>\n                </div>\n                <div className={classes.row}>\n                    <div className={classes.column}>\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <h3><FormattedMessage id={\"tasks.create_new_task_job_name_label\"}/>:</h3>\n                                <input className={classes.input} type={\"text\"} ref={numberRef}/>\n                            </label>\n                        </div>\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <div><FormattedMessage id={\"tasks.create_new_task_harnesses_label\"}/>:</div>\n                                <div className={classes.multiselect_wrapper}>\n                                    <Multiselect\n                                        options={harnesses_options}\n                                        onSelect={(e) => {handleMultiSelect(e, props.setMultiselectOptions)}}\n                                        onRemove={(e) => {handleMultiSelect(e, props.setMultiselectOptions)}}\n                                        selectedValues={props.multiselectOptions.map(elem => {return {name : elem, id : elem}})}\n                                        displayValue=\"name\"\n                                        style={{\n                                              multiselectContainer: { // To change css for multiselect (Width,height,etc..)\n                                                width : \"200px\"\n                                              }\n                                        }}\n                                        id={\"harnesses_select\"}\n                                    />\n                                </div>\n                            </label>\n                        </div>\n\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <h3><FormattedMessage id={\"tasks.create_new_task_komaxes_label\"}/>:</h3>\n                                <Select classes={classes.select}\n                                  multiple\n                                  value={props.komaxesOptions}\n                                  onChange={(e) => {oldHandle(e, props.setKomaxesOptions)}}\n                                  input={<Input />}\n                                    MenuProps={MenuProps}\n                                >\n                                  {props.komaxes_options.map((elem) => (\n                                    <MenuItem key={elem} value={elem}>\n                                      {elem}\n                                    </MenuItem>\n                                  ))}\n                                </Select>\n                            </label>\n                        </div>\n\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <h3><FormattedMessage id={\"tasks.create_new_task_kappas_label\"}/>:</h3>\n                                    <Select classes={classes.select}\n                                      multiple\n                                      value={props.kappasOptions}\n                                      onChange={(e) => {oldHandle(e, props.setKappasOptions)}}\n                                      input={<Input />}\n                                    >\n                                      {props.kappas_options.map((elem) => (\n                                        <MenuItem key={elem} value={elem}>\n                                          {elem}\n                                        </MenuItem>\n                                      ))}\n                                  </Select>\n                            </label>\n                        </div>\n\n                        <div className={classes.input_wrapper}>\n                            <label className={classes.label}>\n                                <h3><FormattedMessage id={\"tasks.create_new_task_work_shift_label\"}/>:</h3>\n                                <input className={classes.input} type={\"number\"} ref={workShiftRef}/>\n                            </label>\n                        </div>\n                    </div>\n                    <div className={`${classes.column} ${classes.right}`}>\n                        <div className={classes.options}>\n                            {workType}\n                            {loadingType}\n                        </div>\n                        <SuccessButton value={<FormattedMessage id={\"tasks.create_new_task_continue_label\"}/>} class={classes.addBtn} disable={!props.isValid || props.shouldContinue} click={openNextForm}/>\n                        <div className={classes.err}>\n                            {props.errMsg}\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className={classes.form}>\n                {!props.shouldContinue\n                    ? <button disabled className={classes.fill}>\n                            <FormattedMessage id={\"tasks.create_new_task_fill_form_label\"}/>\n                      </button>\n                    : <form className={classes.right_form}>\n                        <div className={classes.list}>\n                            {renderedHarnesses}\n                        </div>\n                        <NavLink to={\"/tasks\"} onClick={collectData}>\n                            <SuccessButton value={\"Создать задание\"} class={classes.addBtn} disable={!props.canSend}/>\n                        </NavLink>\n                    </form>\n                }\n            </div>\n            <Modal\n              isOpen={isModalOpen}\n              onRequestClose={closeModal}\n              style={customStyles}\n              contentLabel=\"Example Modal\"\n            >\n                <TaskCreateModalFormContainer close={closeModal}/>\n            </Modal>\n        </div>\n    )\n}\n\nexport default CreateTaskPage;"]},"metadata":{},"sourceType":"module"}