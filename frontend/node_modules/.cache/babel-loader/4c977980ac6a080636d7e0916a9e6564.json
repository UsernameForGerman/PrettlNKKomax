{"ast":null,"code":"import komax_terminal_api from \"../DAL/komax_terminal/komax_terminal_api\";\nimport handle401 from \"./handle401\";\nconst initialState = {\n  isFetching: false,\n  terminalsList: []\n};\nconst TOGGLE_FETCHING = \"TERMINAL/TOGGLE_FETCHING\";\nconst SET_LIST = \"TERMINAL/TOGGLE_SET_LIST\";\n\nconst komaxTerminalReducer = (state = initialState, action) => {\n  let stateCopy = { ...state\n  };\n\n  switch (action.type) {\n    case TOGGLE_FETCHING:\n      {\n        stateCopy.isFetching = !stateCopy.isFetching;\n        break;\n      }\n\n    case SET_LIST:\n      {\n        stateCopy.terminalsList = action.list;\n        break;\n      }\n  }\n\n  return stateCopy;\n};\n\nconst toggleFetchAC = () => {\n  return {\n    type: TOGGLE_FETCHING\n  };\n};\n\nconst setListAC = list => {\n  return {\n    type: SET_LIST,\n    list: list\n  };\n};\n\nconst getTerminalListThunk = () => {\n  return dispatch => {\n    dispatch(toggleFetchAC());\n    komax_terminal_api.getTerminalList().then(data => {\n      dispatch(setListAC(data));\n      dispatch(toggleFetchAC());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nconst createTerminalThunk = terminal => {\n  return dispatch => {\n    dispatch(toggleFetchAC());\n    komax_terminal_api.createTerminal(terminal).then(data => {\n      dispatch(getTerminalListThunk());\n      dispatch(toggleFetchAC());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nconst updateTerminalThunk = terminal => {\n  return dispatch => {\n    dispatch(toggleFetchAC());\n    komax_terminal_api.updateTerminal(terminal).then(data => {\n      dispatch(getTerminalListThunk());\n      dispatch(toggleFetchAC());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nconst deleteTerminalThunk = terminal => {\n  return dispatch => {\n    dispatch(toggleFetchAC());\n    komax_terminal_api.deleteTerminal(terminal).then(data => {\n      dispatch(getTerminalListThunk());\n      dispatch(toggleFetchAC());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nexport { komaxTerminalReducer, updateTerminalThunk, getTerminalListThunk, createTerminalThunk, deleteTerminalThunk };","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/reducers/komaxTerminalReducer.js"],"names":["komax_terminal_api","handle401","initialState","isFetching","terminalsList","TOGGLE_FETCHING","SET_LIST","komaxTerminalReducer","state","action","stateCopy","type","list","toggleFetchAC","setListAC","getTerminalListThunk","dispatch","getTerminalList","then","data","catch","err","createTerminalThunk","terminal","createTerminal","updateTerminalThunk","updateTerminal","deleteTerminalThunk","deleteTerminal"],"mappings":"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","sourcesContent":["import komax_terminal_api from \"../DAL/komax_terminal/komax_terminal_api\";\nimport handle401 from \"./handle401\";\n\nconst initialState = {\n    isFetching : false,\n    terminalsList : []\n}\n\nconst TOGGLE_FETCHING = \"TERMINAL/TOGGLE_FETCHING\";\nconst SET_LIST = \"TERMINAL/TOGGLE_SET_LIST\";\n\nconst komaxTerminalReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case TOGGLE_FETCHING : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break;\n        }\n\n        case SET_LIST : {\n            stateCopy.terminalsList = action.list;\n            break;\n        }\n    }\n    return stateCopy;\n}\n\nconst toggleFetchAC = () => {\n    return {\n        type : TOGGLE_FETCHING\n    }\n}\n\nconst setListAC = (list) => {\n    return {\n        type : SET_LIST,\n        list : list\n    }\n}\n\nconst getTerminalListThunk = () => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        komax_terminal_api.getTerminalList()\n            .then((data) => {\n                dispatch(setListAC(data));\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst createTerminalThunk = (terminal) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        komax_terminal_api.createTerminal(terminal)\n            .then((data) => {\n                dispatch(getTerminalListThunk());\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst updateTerminalThunk = (terminal) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        komax_terminal_api.updateTerminal(terminal)\n            .then((data) => {\n                dispatch(getTerminalListThunk());\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst deleteTerminalThunk = (terminal) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        komax_terminal_api.deleteTerminal(terminal)\n            .then((data) => {\n                dispatch(getTerminalListThunk())\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch);\n            })\n    }\n}\n\nexport {komaxTerminalReducer, updateTerminalThunk, getTerminalListThunk, createTerminalThunk, deleteTerminalThunk}"]},"metadata":{},"sourceType":"module"}