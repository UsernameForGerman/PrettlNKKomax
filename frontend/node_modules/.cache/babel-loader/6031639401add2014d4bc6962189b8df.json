{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komaxes/decrypter.js\";\nimport React from \"react\";\nimport { FormattedMessage } from \"react-intl\";\n\nlet getStatus = num => {\n  debugger;\n\n  switch (num) {\n    case 1:\n      return /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"working_status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 25\n        }\n      });\n\n    case 2:\n      return /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"repairing_status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 25\n        }\n      });\n\n    case 3:\n      return /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"not_working_status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 25\n        }\n      });\n\n    default:\n      return num;\n  }\n};\n\nlet getMarking = num => {\n  switch (num) {\n    case 1:\n      return /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"black_marking\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 25\n        }\n      });\n\n    case 2:\n      return /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"white_marking\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }\n      });\n\n    case 3:\n      return /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"both_marking\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }\n      });\n\n    default:\n      return num;\n  }\n};\n\nlet getSepairing = num => {\n  switch (num) {\n    case \"1\":\n      return \"0.5 - 1.0\";\n\n    case \"2\":\n      return \"1.5 - 2.5\";\n\n    case \"3\":\n      return \"4.0 - 6.0\";\n\n    default:\n      return num;\n  }\n};\n\nexport { getStatus, getMarking, getSepairing };","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komaxes/decrypter.js"],"names":["React","FormattedMessage","getStatus","num","getMarking","getSepairing"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,QAA+B,YAA/B;;AAEA,IAAIC,SAAS,GAAIC,GAAD,IAAS;AACrB;;AACA,UAAQA,GAAR;AACI,SAAK,CAAL;AAAS,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACT,SAAK,CAAL;AAAS,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACT,SAAK,CAAL;AAAS,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACT;AAAU,aAAOA,GAAP;AAJd;AAMH,CARD;;AAUA,IAAIC,UAAU,GAAID,GAAD,IAAS;AACtB,UAAQA,GAAR;AACI,SAAK,CAAL;AAAS,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACT,SAAK,CAAL;AAAS,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACT,SAAK,CAAL;AAAS,0BAAO,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAE,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;;AACT;AAAU,aAAOA,GAAP;AAJd;AAMH,CAPD;;AASA,IAAIE,YAAY,GAAIF,GAAD,IAAS;AACxB,UAAQA,GAAR;AACI,SAAK,GAAL;AAAW,aAAO,WAAP;;AACX,SAAK,GAAL;AAAW,aAAO,WAAP;;AACX,SAAK,GAAL;AAAW,aAAO,WAAP;;AACX;AAAU,aAAOA,GAAP;AAJd;AAMH,CAPD;;AASA,SAAQD,SAAR,EAAmBE,UAAnB,EAA+BC,YAA/B","sourcesContent":["import React from \"react\";\nimport {FormattedMessage} from \"react-intl\";\n\nlet getStatus = (num) => {\n    debugger;\n    switch (num) {\n        case 1 : return <FormattedMessage id={\"working_status\"}/>;\n        case 2 : return <FormattedMessage id={\"repairing_status\"}/>;\n        case 3 : return <FormattedMessage id={\"not_working_status\"}/>;\n        default : return num;\n    }\n}\n\nlet getMarking = (num) => {\n    switch (num) {\n        case 1 : return <FormattedMessage id={\"black_marking\"}/>;\n        case 2 : return <FormattedMessage id={\"white_marking\"}/>;\n        case 3 : return <FormattedMessage id={\"both_marking\"}/>;\n        default : return num;\n    }\n}\n\nlet getSepairing = (num) => {\n    switch (num) {\n        case \"1\" : return \"0.5 - 1.0\";\n        case \"2\" : return \"1.5 - 2.5\";\n        case \"3\" : return \"4.0 - 6.0\";\n        default : return num;\n    }\n}\n\nexport {getStatus, getMarking, getSepairing}"]},"metadata":{},"sourceType":"module"}