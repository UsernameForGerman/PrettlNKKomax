{"ast":null,"code":"import TaskCreateModalForm from\"./TCPModal\";import React,{useState}from\"react\";import TerminalSelector from\"../../../../selectors/terminalSelector\";import SealSelector from\"../../../../selectors/sealSelector\";import{connect}from\"react-redux\";import{updateTerminalThunk}from\"../../../../reducers/komaxTerminalReducer\";import{updateSealThunk}from\"../../../../reducers/sealReducer\";import classes from\"./TCPModal.module.css\";import SealItem from\"./SealItem\";import TerminalItem from\"./TerminalItem\";import{FormattedMessage}from\"react-intl\";var TaskCreateModalFormContainer=function TaskCreateModalFormContainer(props){var seal_list=/*#__PURE__*/React.createElement(\"div\",{className:classes.list},/*#__PURE__*/React.createElement(\"h2\",{className:classes.list_heading},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"seals_label\"})),/*#__PURE__*/React.createElement(\"div\",{className:classes.table},/*#__PURE__*/React.createElement(\"div\",{className:classes.row},/*#__PURE__*/React.createElement(\"div\",{className:classes.item},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"seal_name_label\"}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.item},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"terminal.material_avaliable_label\"})))),props.seals.map(function(seal){return/*#__PURE__*/React.createElement(SealItem,Object.assign({},seal,{callback:props.updateSeal}));})));var terminal_list=/*#__PURE__*/React.createElement(\"div\",{className:classes.list},/*#__PURE__*/React.createElement(\"h2\",{className:classes.list_heading},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"header.komax_teminals_link\"})),/*#__PURE__*/React.createElement(\"div\",{className:classes.table},/*#__PURE__*/React.createElement(\"div\",{className:classes.row},/*#__PURE__*/React.createElement(\"div\",{className:classes.item},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"terminal_name_label\"}))),/*#__PURE__*/React.createElement(\"div\",{className:classes.item},/*#__PURE__*/React.createElement(\"b\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"terminal.terminal_avaliable_label\"})))),props.terminals.map(function(terminal){return/*#__PURE__*/React.createElement(TerminalItem,Object.assign({},terminal,{updateTerminal:props.updateTerminal}));})));return/*#__PURE__*/React.createElement(TaskCreateModalForm,Object.assign({seal_list:seal_list,terminal_list:terminal_list},props));};var mapStateToProps=function mapStateToProps(state){return{terminals:TerminalSelector.getList(state),seals:SealSelector.getList(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateTerminal:function updateTerminal(terminal){dispatch(updateTerminalThunk(terminal));},updateSeal:function updateSeal(seal){dispatch(updateSealThunk(seal));}};};export default connect(mapStateToProps,mapDispatchToProps)(TaskCreateModalFormContainer);","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/CreateTaskPage/Modal/TCPModalContainer,js.js"],"names":["TaskCreateModalForm","React","useState","TerminalSelector","SealSelector","connect","updateTerminalThunk","updateSealThunk","classes","SealItem","TerminalItem","FormattedMessage","TaskCreateModalFormContainer","props","seal_list","list","list_heading","table","row","item","seals","map","seal","updateSeal","terminal_list","terminals","terminal","updateTerminal","mapStateToProps","state","getList","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import TaskCreateModalForm from \"./TCPModal\";\nimport React, {useState} from \"react\";\nimport TerminalSelector from \"../../../../selectors/terminalSelector\";\nimport SealSelector from \"../../../../selectors/sealSelector\";\nimport {connect} from \"react-redux\";\nimport {updateTerminalThunk} from \"../../../../reducers/komaxTerminalReducer\";\nimport {updateSealThunk} from \"../../../../reducers/sealReducer\";\nimport classes from \"./TCPModal.module.css\"\nimport SealItem from \"./SealItem\";\nimport TerminalItem from \"./TerminalItem\";\nimport {FormattedMessage} from \"react-intl\";\n\nlet TaskCreateModalFormContainer = (props) => {\n    let seal_list = (\n        <div className={classes.list}>\n            <h2 className={classes.list_heading}><FormattedMessage id={\"seals_label\"}/></h2>\n            <div className={classes.table}>\n                {(\n                    <div className={classes.row}>\n                        <div className={classes.item}>\n                            <b><FormattedMessage id={\"seal_name_label\"}/></b>\n                        </div>\n                        <div className={classes.item}>\n                            <b><FormattedMessage id={\"terminal.material_avaliable_label\"}/></b>\n                        </div>\n                    </div>\n                )}\n                {props.seals.map(seal => {\n                    return <SealItem {...seal} callback={props.updateSeal}/>\n                })}\n            </div>\n        </div>\n    )\n\n    let terminal_list = (\n        <div className={classes.list}>\n            <h2 className={classes.list_heading}><FormattedMessage id={\"header.komax_teminals_link\"}/></h2>\n            <div className={classes.table}>\n                {(\n                    <div className={classes.row}>\n                        <div className={classes.item}>\n                            <b><FormattedMessage id={\"terminal_name_label\"}/></b>\n                        </div>\n                        <div className={classes.item}>\n                            <b><FormattedMessage id={\"terminal.terminal_avaliable_label\"}/></b>\n                        </div>\n                    </div>\n                )}\n                {props.terminals.map(terminal => {\n                    return <TerminalItem {...terminal} updateTerminal={props.updateTerminal}/>\n                })}\n            </div>\n        </div>\n    )\n\n    return (\n        <TaskCreateModalForm seal_list={seal_list} terminal_list={terminal_list} {...props}/>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        terminals : TerminalSelector.getList(state),\n        seals : SealSelector.getList(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateTerminal : (terminal) => {\n            dispatch(updateTerminalThunk(terminal))\n        },\n\n        updateSeal : (seal) => {\n            dispatch(updateSealThunk(seal))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TaskCreateModalFormContainer);"]},"metadata":{},"sourceType":"module"}