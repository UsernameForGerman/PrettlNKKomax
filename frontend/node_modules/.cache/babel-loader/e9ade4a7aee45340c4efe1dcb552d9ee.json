{"ast":null,"code":"import komaxApi from \"../DAL/komax/komax-api\";\nimport handle401 from \"./handle401\";\nlet initialState = {\n  isFetching: false,\n  isValid: true,\n  numberErrMsg: \"\",\n  idErrMsg: \"\"\n};\nconst TOGGLE_FETCHING = \"MODAL/FETCHING\";\nconst SET_VALID = \"MODAL/SET_VALID\";\nconst SET_NUMBER_ERR_MSG = \"MODAL/NUMBER_MSG\";\nconst SET_ID_ERR_MSG = \"MODAL/ID_MSG\";\n\nlet modalReducer = (state = initialState, action) => {\n  let stateCopy = { ...state\n  };\n\n  switch (action.type) {\n    case TOGGLE_FETCHING:\n      {\n        stateCopy.isFetching = !stateCopy.isFetching;\n        break;\n      }\n\n    case SET_VALID:\n      {\n        stateCopy.isValid = action.isValid;\n        break;\n      }\n\n    case SET_ID_ERR_MSG:\n      {\n        stateCopy.idErrMsg = action.idErrMsg;\n        break;\n      }\n\n    case SET_NUMBER_ERR_MSG:\n      {\n        stateCopy.numberErrMsg = action.numberErrMsg;\n        break;\n      }\n  }\n\n  return stateCopy;\n};\n\nlet toggleFetchingAC = () => {\n  return {\n    type: TOGGLE_FETCHING\n  };\n};\n\nlet setValidAC = isValid => {\n  return {\n    type: SET_VALID,\n    isValid: isValid\n  };\n};\n\nlet setIdErrMsgAC = errMsg => {\n  return {\n    type: SET_ID_ERR_MSG,\n    idErrMsg: errMsg\n  };\n};\n\nlet setNumberErrMsgAC = errMsg => {\n  return {\n    type: SET_NUMBER_ERR_MSG,\n    numberErrMsg: errMsg\n  };\n};\n\nlet checkValidThunk = number => {\n  return dispatch => {\n    dispatch(toggleFetchingAC());\n    komaxApi.getKomaxList().then(data => {\n      dispatch(toggleFetchingAC());\n      let numberSet = data.map(elem => elem.number);\n\n      if (numberSet.includes(number)) {\n        dispatch(setNumberErrMsgAC(\"Komax с данным номером уже существует\"));\n        dispatch(setIdErrMsgAC(\"\"));\n        dispatch(setValidAC(false));\n      } else if (number === 0) {\n        dispatch(setNumberErrMsgAC(\"Заполните поле `Komax number`\"));\n        dispatch(setIdErrMsgAC(\"\"));\n        dispatch(setValidAC(false));\n      } else {\n        dispatch(setValidAC(true));\n        dispatch(setIdErrMsgAC(\"\"));\n        dispatch(setNumberErrMsgAC(\"\"));\n      }\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nexport { modalReducer, checkValidThunk };","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/reducers/modalReducer.js"],"names":["komaxApi","handle401","initialState","isFetching","isValid","numberErrMsg","idErrMsg","TOGGLE_FETCHING","SET_VALID","SET_NUMBER_ERR_MSG","SET_ID_ERR_MSG","modalReducer","state","action","stateCopy","type","toggleFetchingAC","setValidAC","setIdErrMsgAC","errMsg","setNumberErrMsgAC","checkValidThunk","number","dispatch","getKomaxList","then","data","numberSet","map","elem","includes","catch","err"],"mappings":"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","sourcesContent":["import komaxApi from \"../DAL/komax/komax-api\";\nimport handle401 from \"./handle401\";\n\nlet initialState = {\n    isFetching : false,\n    isValid : true,\n    numberErrMsg : \"\",\n    idErrMsg : \"\"\n}\n\nconst TOGGLE_FETCHING = \"MODAL/FETCHING\";\nconst SET_VALID = \"MODAL/SET_VALID\";\nconst SET_NUMBER_ERR_MSG = \"MODAL/NUMBER_MSG\";\nconst SET_ID_ERR_MSG = \"MODAL/ID_MSG\";\n\nlet modalReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case TOGGLE_FETCHING : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break;\n        }\n        case SET_VALID : {\n            stateCopy.isValid = action.isValid;\n            break;\n        }\n        case SET_ID_ERR_MSG : {\n            stateCopy.idErrMsg = action.idErrMsg;\n            break;\n        }\n        case SET_NUMBER_ERR_MSG : {\n            stateCopy.numberErrMsg = action.numberErrMsg;\n            break;\n        }\n    }\n\n    return stateCopy;\n}\n\nlet toggleFetchingAC = () => {\n    return {\n        type : TOGGLE_FETCHING\n    }\n}\n\nlet setValidAC = (isValid) => {\n    return {\n        type : SET_VALID,\n        isValid : isValid\n    }\n}\n\nlet setIdErrMsgAC = (errMsg) => {\n    return {\n        type : SET_ID_ERR_MSG,\n        idErrMsg : errMsg\n    }\n}\n\nlet setNumberErrMsgAC = (errMsg) => {\n    return {\n        type : SET_NUMBER_ERR_MSG,\n        numberErrMsg : errMsg\n    }\n}\n\nlet checkValidThunk = (number) => {\n    return (dispatch) => {\n        dispatch(toggleFetchingAC());\n        komaxApi.getKomaxList()\n            .then(data => {\n               dispatch(toggleFetchingAC());\n               let numberSet = data.map(elem => elem.number);\n               if (numberSet.includes(number)){\n                   dispatch(setNumberErrMsgAC(\"Komax с данным номером уже существует\"));\n                   dispatch(setIdErrMsgAC(\"\"));\n                   dispatch(setValidAC(false));\n               } else if (number === 0){\n                   dispatch(setNumberErrMsgAC(\"Заполните поле `Komax number`\"));\n                   dispatch(setIdErrMsgAC(\"\"));\n                   dispatch(setValidAC(false));\n               } else {\n                  dispatch(setValidAC(true));\n                  dispatch(setIdErrMsgAC(\"\"));\n                  dispatch(setNumberErrMsgAC(\"\"));\n               }\n            })\n            .catch(err => {\n                handle401(err, dispatch);\n            });\n    }\n}\n\nexport {modalReducer, checkValidThunk}"]},"metadata":{},"sourceType":"module"}