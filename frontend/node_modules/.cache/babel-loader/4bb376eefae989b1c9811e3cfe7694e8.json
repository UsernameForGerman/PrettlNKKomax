{"ast":null,"code":"import _slicedToArray from\"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import CreateTaskPage from\"./CreateTaskPage\";import React,{useEffect,useRef,useState}from\"react\";import auth from\"../../AuthHOC/authHOC\";import classes from\"./CreateTaskPage.module.css\";import{connect}from\"react-redux\";import{getHarnessesListThunk}from\"../../../reducers/harnessesReducer\";import{getListThunk}from\"../../../reducers/komaxReducer\";import HarnessSelector from\"../../../selectors/harnessSelector\";import KappaSelector from\"../../../selectors/kappaSelector\";import KomaxSelector from\"../../../selectors/komaxSelector\";import FullScreenPreloader from\"../../common/Preloader/FullScreenPreloader\";import{getKappasThunk}from\"../../../reducers/kappasReducer\";import TasksSelector from\"../../../selectors/tasksSelector\";import{createTaskThunk,getTasksThunk,setErrorAC,setValidAC}from\"../../../reducers/tasksReducer\";import{getSealsListThunk}from\"../../../reducers/sealReducer\";import{getTerminalListThunk}from\"../../../reducers/komaxTerminalReducer\";var CreateTaskPageContainer=function CreateTaskPageContainer(props){var _useState=useState(\"parallel\"),_useState2=_slicedToArray(_useState,2),workType=_useState2[0],setWorkType=_useState2[1];var _useState3=useState(\"new\"),_useState4=_slicedToArray(_useState3,2),loadingType=_useState4[0],setLoadingType=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),multiselectOptions=_useState6[0],setMultiselectOptions=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),shouldContinue=_useState8[0],setContinue=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),harnessesData=_useState10[0],setHarnessesData=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),komaxesOptions=_useState12[0],setKomaxesOptions=_useState12[1];var _useState13=useState([]),_useState14=_slicedToArray(_useState13,2),kappasOptions=_useState14[0],setKappasOptions=_useState14[1];var mount=useRef(true);useEffect(function(){if(mount){props.fetchHarnesses();props.fetchKomaxes();props.fetchKappas();props.fetchKappas();props.fetchTasks();}return function(){mount.current=false;};},[props.harnesses.length]);var formatNumber=function formatNumber(number){var replaced=number.toString().replace(\"\\-\",\"\");while(replaced.toString().indexOf(\"-\")>0){replaced=replaced.toString().replace(\"\\-\",\"\");}var formatted=Number(replaced);return formatted;};var harnesses_options=props.harnesses.map(function(elem){return elem.harness_number;}).sort(function(a,b){return formatNumber(a)-formatNumber(b);});var komaxes_options=props.komaxes.map(function(elem){return elem.number;});var kappas_options=props.kappas.map(function(elem){return elem.number;});var addHarnessData=function addHarnessData(number,e){var data=harnessesData.filter(function(elem){return elem[number];});var text=e.target.value;var arr=harnessesData.slice();if(data.length===0){var obj={};obj[number]=Number(text);arr.push(obj);}else{arr.map(function(elem){if(elem[number]){elem[number]=Number(text);}});}setHarnessesData(arr);};var check=function check(number){var numbers=props.tasks.map(function(elem){return elem.task_name;}).filter(function(elem){return elem===number;});if(numbers.length>0){props.setError(\"Такой номер уже есть\");props.setValid(false);}else{props.setError(\"\");props.setValid(true);}};var sendDataFirst=function sendDataFirst(data){var shift=data.work_shift;var request={'task_name':data.name,'harnesses':multiselectOptions,'komaxes':komaxesOptions,'kappas':kappasOptions,'shift':shift,'type_of_allocation':workType,'loading_type':loadingType};props.send(request);};var sendDataSecond=function sendDataSecond(data){var d={};harnessesData.forEach(function(harnessItem){var key=Object.keys(harnessItem)[0];d[key]=harnessItem[key];});var request={'harness_amount':d,'task_name':data.name};props.send(request);};var fetch=function fetch(){props.fetchSeals();props.fetchTerminals();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.container},/*#__PURE__*/React.createElement(CreateTaskPage,{workType:workType,setWorkType:setWorkType,loadingType:loadingType,setLoadingType:setLoadingType,harnesses_options:harnesses_options,komaxes_options:komaxes_options,kappas_options:kappas_options,isValid:props.isValid,errMsg:props.errMsg,check:check,mount:mount,multiselectOptions:multiselectOptions,setMultiselectOptions:setMultiselectOptions,shouldContinue:shouldContinue,setContinue:setContinue,addHarnessData:addHarnessData,sendDataFirst:sendDataFirst,sendDataSecond:sendDataSecond,canSend:props.canSend,fetch:fetch,komaxesOptions:komaxesOptions,setKomaxesOptions:setKomaxesOptions,kappasOptions:kappasOptions,setKappasOptions:setKappasOptions})));};var mapStateToProps=function mapStateToProps(state){return{tasks:TasksSelector.getList(state),harnesses:HarnessSelector.getList(state),komaxes:KomaxSelector.getList(state),kappas:KappaSelector.getList(state),isFetching:HarnessSelector.getFetching(state)||KomaxSelector.getFetching(state)||KappaSelector.getFetching(state),errMsg:TasksSelector.getErrMsg(state),isValid:TasksSelector.getValid(state),canSend:TasksSelector.getCanSend(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchHarnesses:function fetchHarnesses(){dispatch(getHarnessesListThunk());},fetchKomaxes:function fetchKomaxes(){dispatch(getListThunk());},fetchKappas:function fetchKappas(){dispatch(getKappasThunk());},fetchTasks:function fetchTasks(){dispatch(getTasksThunk());},fetchSeals:function fetchSeals(){dispatch(getSealsListThunk());},fetchTerminals:function fetchTerminals(){dispatch(getTerminalListThunk());},setError:function setError(error){dispatch(setErrorAC(error));},setValid:function setValid(valid){dispatch(setValidAC(valid));},send:function send(task){dispatch(createTaskThunk(task));}};};export default auth(connect(mapStateToProps,mapDispatchToProps)(CreateTaskPageContainer));","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/CreateTaskPage/CreateTaskPageContainer.js"],"names":["CreateTaskPage","React","useEffect","useRef","useState","auth","classes","connect","getHarnessesListThunk","getListThunk","HarnessSelector","KappaSelector","KomaxSelector","FullScreenPreloader","getKappasThunk","TasksSelector","createTaskThunk","getTasksThunk","setErrorAC","setValidAC","getSealsListThunk","getTerminalListThunk","CreateTaskPageContainer","props","workType","setWorkType","loadingType","setLoadingType","multiselectOptions","setMultiselectOptions","shouldContinue","setContinue","harnessesData","setHarnessesData","komaxesOptions","setKomaxesOptions","kappasOptions","setKappasOptions","mount","fetchHarnesses","fetchKomaxes","fetchKappas","fetchTasks","current","harnesses","length","formatNumber","number","replaced","toString","replace","indexOf","formatted","Number","harnesses_options","map","elem","harness_number","sort","a","b","komaxes_options","komaxes","kappas_options","kappas","addHarnessData","e","data","filter","text","target","value","arr","slice","obj","push","check","numbers","tasks","task_name","setError","setValid","sendDataFirst","shift","work_shift","request","name","send","sendDataSecond","d","forEach","harnessItem","key","Object","keys","fetch","fetchSeals","fetchTerminals","container","isValid","errMsg","canSend","mapStateToProps","state","getList","isFetching","getFetching","getErrMsg","getValid","getCanSend","mapDispatchToProps","dispatch","error","valid","task"],"mappings":"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","sourcesContent":["import CreateTaskPage from \"./CreateTaskPage\";\nimport React, {useEffect, useRef, useState} from \"react\";\nimport auth from \"../../AuthHOC/authHOC\";\nimport classes from \"./CreateTaskPage.module.css\";\nimport {connect} from \"react-redux\";\nimport {getHarnessesListThunk} from \"../../../reducers/harnessesReducer\";\nimport {getListThunk} from \"../../../reducers/komaxReducer\";\nimport HarnessSelector from \"../../../selectors/harnessSelector\";\nimport KappaSelector from \"../../../selectors/kappaSelector\";\nimport KomaxSelector from \"../../../selectors/komaxSelector\";\nimport FullScreenPreloader from \"../../common/Preloader/FullScreenPreloader\";\nimport {getKappasThunk} from \"../../../reducers/kappasReducer\";\nimport TasksSelector from \"../../../selectors/tasksSelector\";\nimport {createTaskThunk, getTasksThunk, setErrorAC, setValidAC} from \"../../../reducers/tasksReducer\";\nimport {getSealsListThunk} from \"../../../reducers/sealReducer\";\nimport {getTerminalListThunk} from \"../../../reducers/komaxTerminalReducer\";\n\nlet CreateTaskPageContainer = (props) => {\n    let [workType, setWorkType] = useState(\"parallel\");\n    let [loadingType, setLoadingType] = useState(\"new\");\n    let [multiselectOptions, setMultiselectOptions] = useState([]);\n    let [shouldContinue, setContinue] = useState(false);\n    let [harnessesData, setHarnessesData] = useState([]);\n    let [komaxesOptions, setKomaxesOptions] = useState([]);\n    let [kappasOptions, setKappasOptions] = useState([]);\n    const mount = useRef(true);\n\n    useEffect(() => {\n        if (mount){\n            props.fetchHarnesses();\n            props.fetchKomaxes();\n            props.fetchKappas();\n            props.fetchKappas();\n            props.fetchTasks();\n        }\n        return () => {\n            mount.current = false;\n        }\n    },\n        [\n            props.harnesses.length\n        ]);\n\n    let formatNumber = (number) => {\n        let replaced = number.toString().replace(\"\\-\", \"\");\n        while (replaced.toString().indexOf(\"-\") > 0){\n            replaced = replaced.toString().replace(\"\\-\", \"\");\n        }\n        let formatted = Number(replaced);\n        return formatted;\n    }\n\n    let harnesses_options = props.harnesses.map(elem => {\n        return elem.harness_number;\n    }).sort((a,b) => {\n        return formatNumber(a) - formatNumber(b);\n    });\n\n    let komaxes_options = props.komaxes.map(elem => {\n        return elem.number;\n    });\n\n    let kappas_options = props.kappas.map(elem => {\n        return elem.number;\n    });\n\n    let addHarnessData = (number, e) => {\n        let data = harnessesData.filter(elem => elem[number]);\n        let text = e.target.value;\n        let arr = harnessesData.slice();\n        if (data.length === 0){\n            let obj = {};\n            obj[number] = Number(text);\n            arr.push(obj);\n        } else {\n            arr.map((elem) => {\n                if (elem[number]) {\n                    elem[number] = Number(text);\n                }\n            });\n        }\n        setHarnessesData(arr);\n    }\n\n    let check = (number) => {\n        let numbers = props.tasks.map((elem) => {\n            return elem.task_name;\n        }).filter((elem) => elem === number);\n        if (numbers.length > 0){\n            props.setError(\"Такой номер уже есть\");\n            props.setValid(false);\n        } else {\n            props.setError(\"\");\n            props.setValid(true);\n        }\n    }\n\n    let sendDataFirst = (data) => {\n        let shift = data.work_shift;\n        let request = {\n            'task_name' : data.name,\n            'harnesses' : multiselectOptions,\n            'komaxes' : komaxesOptions,\n            'kappas' : kappasOptions,\n            'shift' : shift,\n            'type_of_allocation' : workType,\n            'loading_type' : loadingType\n        }\n\n        props.send(request);\n    }\n\n    let sendDataSecond = (data) => {\n        let d = {};\n        harnessesData.forEach(harnessItem => {\n            let key = Object.keys(harnessItem)[0];\n            d[key] = harnessItem[key];\n        })\n        let request = {\n            'harness_amount' : d,\n            'task_name' : data.name\n        }\n\n        props.send(request);\n    }\n\n    let fetch = () => {\n        props.fetchSeals();\n        props.fetchTerminals();\n    }\n\n    return(\n        <>\n            <div className={classes.container}>\n                    <CreateTaskPage\n                        workType={workType}\n                        setWorkType={setWorkType}\n                        loadingType={loadingType}\n                        setLoadingType={setLoadingType}\n                        harnesses_options={harnesses_options}\n                        komaxes_options={komaxes_options}\n                        kappas_options={kappas_options}\n                        isValid={props.isValid}\n                        errMsg={props.errMsg}\n                        check={check}\n                        mount={mount}\n                        multiselectOptions={multiselectOptions}\n                        setMultiselectOptions={setMultiselectOptions}\n                        shouldContinue={shouldContinue}\n                        setContinue={setContinue}\n                        addHarnessData={addHarnessData}\n                        sendDataFirst={sendDataFirst}\n                        sendDataSecond={sendDataSecond}\n                        canSend={props.canSend}\n                        fetch={fetch}\n                        komaxesOptions={komaxesOptions}\n                        setKomaxesOptions={setKomaxesOptions}\n                        kappasOptions={kappasOptions}\n                        setKappasOptions={setKappasOptions}\n                    />\n               </div>\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return{\n        tasks : TasksSelector.getList(state),\n        harnesses : HarnessSelector.getList(state),\n        komaxes : KomaxSelector.getList(state),\n        kappas : KappaSelector.getList(state),\n        isFetching : HarnessSelector.getFetching(state) || KomaxSelector.getFetching(state) || KappaSelector.getFetching(state),\n        errMsg : TasksSelector.getErrMsg(state),\n        isValid : TasksSelector.getValid(state),\n        canSend : TasksSelector.getCanSend(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        fetchHarnesses : () => {\n            dispatch(getHarnessesListThunk())\n        },\n\n        fetchKomaxes : () => {\n            dispatch(getListThunk())\n        },\n\n        fetchKappas : () => {\n            dispatch(getKappasThunk())\n        },\n\n        fetchTasks : () => {\n            dispatch(getTasksThunk())\n        },\n\n        fetchSeals : () => {\n            dispatch(getSealsListThunk());\n        },\n\n        fetchTerminals : () => {\n            dispatch(getTerminalListThunk());\n        },\n\n        setError : (error) => {\n            dispatch(setErrorAC(error))\n        },\n\n        setValid : (valid) => {\n            dispatch(setValidAC(valid))\n        },\n\n        send : (task) => {\n            dispatch(createTaskThunk(task))\n        }\n    }\n}\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(CreateTaskPageContainer));"]},"metadata":{},"sourceType":"module"}