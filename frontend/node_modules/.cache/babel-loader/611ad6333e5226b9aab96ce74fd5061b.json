{"ast":null,"code":"import _objectSpread from\"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import kappa_api from\"../DAL/kappa/kappa-api\";import handle401 from\"./handle401\";var initialState={isFetching:false,kappasList:[]};var TOGGLE_FETCHING=\"KAPPA/TOGGLE_FETCHING\";var SET_LIST=\"KAPPA/TOGGLE_SET_LIST\";var kappasReducer=function kappasReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var stateCopy=_objectSpread({},state);switch(action.type){case TOGGLE_FETCHING:{stateCopy.isFetching=!stateCopy.isFetching;break;}case SET_LIST:{stateCopy.kappasList=action.list;break;}}return stateCopy;};var toggleFetchAC=function toggleFetchAC(){return{type:TOGGLE_FETCHING};};var setListAC=function setListAC(list){return{type:SET_LIST,list:list};};var getKappasThunk=function getKappasThunk(){return function(dispatch){dispatch(toggleFetchAC());kappa_api.getKappaList().then(function(data){dispatch(setListAC(data));dispatch(toggleFetchAC());}).catch(function(err){handle401(err,dispatch);});};};var createKappaThunk=function createKappaThunk(kappa){return function(dispatch){dispatch(toggleFetchAC());kappa_api.createKappa(kappa).then(function(data){dispatch(getKappasThunk());dispatch(toggleFetchAC());}).catch(function(err){handle401(err,dispatch);});};};var updateKappaThunk=function updateKappaThunk(kappa){return function(dispatch){dispatch(toggleFetchAC());kappa_api.updateKappa(kappa).then(function(data){dispatch(getKappasThunk());dispatch(toggleFetchAC());}).catch(function(err){handle401(err,dispatch);});};};export{kappasReducer,getKappasThunk,createKappaThunk,updateKappaThunk};","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/reducers/kappasReducer.js"],"names":["kappa_api","handle401","initialState","isFetching","kappasList","TOGGLE_FETCHING","SET_LIST","kappasReducer","state","action","stateCopy","type","list","toggleFetchAC","setListAC","getKappasThunk","dispatch","getKappaList","then","data","catch","err","createKappaThunk","kappa","createKappa","updateKappaThunk","updateKappa"],"mappings":"4KAAA,MAAOA,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,GAAMC,CAAAA,YAAY,CAAG,CACjBC,UAAU,CAAG,KADI,CAEjBC,UAAU,CAAG,EAFI,CAArB,CAKA,GAAMC,CAAAA,eAAe,CAAG,uBAAxB,CACA,GAAMC,CAAAA,QAAQ,CAAG,uBAAjB,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBN,YAAyB,IAAXO,CAAAA,MAAW,2CACpD,GAAIC,CAAAA,SAAS,kBAAOF,KAAP,CAAb,CACA,OAAQC,MAAM,CAACE,IAAf,EACI,IAAKN,CAAAA,eAAL,CAAuB,CACnBK,SAAS,CAACP,UAAV,CAAuB,CAACO,SAAS,CAACP,UAAlC,CACA,MACH,CAED,IAAKG,CAAAA,QAAL,CAAgB,CACZI,SAAS,CAACN,UAAV,CAAuBK,MAAM,CAACG,IAA9B,CACA,MACH,CATL,CAWA,MAAOF,CAAAA,SAAP,CACH,CAdD,CAgBA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,MAAO,CACHF,IAAI,CAAGN,eADJ,CAAP,CAGH,CAJD,CAMA,GAAMS,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACF,IAAD,CAAU,CACxB,MAAO,CACHD,IAAI,CAAGL,QADJ,CAEHM,IAAI,CAAGA,IAFJ,CAAP,CAIH,CALD,CAOA,GAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,MAAO,UAACC,QAAD,CAAc,CACjBA,QAAQ,CAACH,aAAa,EAAd,CAAR,CACAb,SAAS,CAACiB,YAAV,GACKC,IADL,CACU,SAACC,IAAD,CAAU,CACZH,QAAQ,CAACF,SAAS,CAACK,IAAD,CAAV,CAAR,CACAH,QAAQ,CAACH,aAAa,EAAd,CAAR,CACH,CAJL,EAKKO,KALL,CAKW,SAAAC,GAAG,CAAI,CACVpB,SAAS,CAACoB,GAAD,CAAML,QAAN,CAAT,CACH,CAPL,EAQH,CAVD,CAWH,CAZD,CAcA,GAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAChC,MAAO,UAACP,QAAD,CAAc,CACjBA,QAAQ,CAACH,aAAa,EAAd,CAAR,CACAb,SAAS,CAACwB,WAAV,CAAsBD,KAAtB,EACKL,IADL,CACU,SAACC,IAAD,CAAU,CACZH,QAAQ,CAACD,cAAc,EAAf,CAAR,CACAC,QAAQ,CAACH,aAAa,EAAd,CAAR,CACH,CAJL,EAKKO,KALL,CAKW,SAAAC,GAAG,CAAI,CACVpB,SAAS,CAACoB,GAAD,CAAML,QAAN,CAAT,CACH,CAPL,EAQH,CAVD,CAWH,CAZD,CAcA,GAAMS,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACF,KAAD,CAAW,CAChC,MAAO,UAACP,QAAD,CAAc,CACjBA,QAAQ,CAACH,aAAa,EAAd,CAAR,CACAb,SAAS,CAAC0B,WAAV,CAAsBH,KAAtB,EACKL,IADL,CACU,SAACC,IAAD,CAAU,CACZH,QAAQ,CAACD,cAAc,EAAf,CAAR,CACAC,QAAQ,CAACH,aAAa,EAAd,CAAR,CACH,CAJL,EAKKO,KALL,CAKW,SAAAC,GAAG,CAAI,CACVpB,SAAS,CAACoB,GAAD,CAAML,QAAN,CAAT,CACH,CAPL,EAQH,CAVD,CAWH,CAZD,CAcA,OAAQT,aAAR,CAAuBQ,cAAvB,CAAuCO,gBAAvC,CAAyDG,gBAAzD","sourcesContent":["import kappa_api from \"../DAL/kappa/kappa-api\";\nimport handle401 from \"./handle401\";\nconst initialState = {\n    isFetching : false,\n    kappasList : []\n}\n\nconst TOGGLE_FETCHING = \"KAPPA/TOGGLE_FETCHING\";\nconst SET_LIST = \"KAPPA/TOGGLE_SET_LIST\";\n\nconst kappasReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case TOGGLE_FETCHING : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break;\n        }\n\n        case SET_LIST : {\n            stateCopy.kappasList = action.list;\n            break;\n        }\n    }\n    return stateCopy;\n}\n\nconst toggleFetchAC = () => {\n    return {\n        type : TOGGLE_FETCHING\n    }\n}\n\nconst setListAC = (list) => {\n    return {\n        type : SET_LIST,\n        list : list\n    }\n}\n\nconst getKappasThunk = () => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        kappa_api.getKappaList()\n            .then((data) => {\n                dispatch(setListAC(data));\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst createKappaThunk = (kappa) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        kappa_api.createKappa(kappa)\n            .then((data) => {\n                dispatch(getKappasThunk());\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst updateKappaThunk = (kappa) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        kappa_api.updateKappa(kappa)\n            .then((data) => {\n                dispatch(getKappasThunk());\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nexport {kappasReducer, getKappasThunk, createKappaThunk, updateKappaThunk}"]},"metadata":{},"sourceType":"module"}