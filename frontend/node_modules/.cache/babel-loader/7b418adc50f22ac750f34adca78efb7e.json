{"ast":null,"code":"import _slicedToArray from\"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import LabourPage from\"./LabourPage\";import React,{useEffect,useState}from\"react\";import auth from\"../AuthHOC/authHOC\";import classes from\"./LabourPage.module.css\";import{connect}from\"react-redux\";import LabourSelector from\"../../selectors/labourSelector\";import{getListThunk}from\"../../reducers/labourReducer\";import FullScreenPreloader from\"../common/Preloader/FullScreenPreloader\";import LabourItem from\"./LabourItem/LabourItem\";var LabourPageContainer=function LabourPageContainer(props){useEffect(function(){props.fetchList();},props.labourList.length);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),selectedLabour=_useState2[0],setSelected=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpenEdit=_useState4[0],setOpenEdit=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isCreateOpen=_useState6[0],setCreateOpen=_useState6[1];var items=props.labourList.map(function(elem){var select=function select(){setSelected(elem);setOpenEdit(true);};return/*#__PURE__*/React.createElement(LabourItem,Object.assign({},elem,{select:select}));});var closeEdit=function closeEdit(){setOpenEdit(false);};var openEdit=function openEdit(){setOpenEdit(true);};var openCreate=function openCreate(){setCreateOpen(true);};var closeCreate=function closeCreate(){setCreateOpen(false);};return/*#__PURE__*/React.createElement(React.Fragment,null,props.isFetching?/*#__PURE__*/React.createElement(FullScreenPreloader,null):/*#__PURE__*/React.createElement(LabourPage,{rows:items,selectedLabour:selectedLabour,isOpenEdit:isOpenEdit,openEdit:openEdit,closeEdit:closeEdit,isCreateOpen:isCreateOpen,openCreate:openCreate,closeCreate:closeCreate}));};var mapStateToProps=function mapStateToProps(state){return{isFetching:LabourSelector.getFetching(state),labourList:LabourSelector.getList(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchList:function fetchList(){dispatch(getListThunk());}};};export default auth(connect(mapStateToProps,mapDispatchToProps)(LabourPageContainer));","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Labour/LabourPageContainer.js"],"names":["LabourPage","React","useEffect","useState","auth","classes","connect","LabourSelector","getListThunk","FullScreenPreloader","LabourItem","LabourPageContainer","props","fetchList","labourList","length","selectedLabour","setSelected","isOpenEdit","setOpenEdit","isCreateOpen","setCreateOpen","items","map","elem","select","closeEdit","openEdit","openCreate","closeCreate","isFetching","mapStateToProps","state","getFetching","getList","mapDispatchToProps","dispatch"],"mappings":"6KAAA,MAAOA,CAAAA,UAAP,KAAuB,cAAvB,CACA,MAAOC,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,CACA,OAAQC,YAAR,KAA2B,8BAA3B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,yCAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CAEA,GAAIC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CACjCV,SAAS,CAAC,UAAM,CACZU,KAAK,CAACC,SAAN,GACH,CAFQ,CAEND,KAAK,CAACE,UAAN,CAAiBC,MAFX,CAAT,CADiC,cAIGZ,QAAQ,CAAC,EAAD,CAJX,wCAI5Ba,cAJ4B,eAIZC,WAJY,8BAKDd,QAAQ,CAAC,KAAD,CALP,yCAK5Be,UAL4B,eAKhBC,WALgB,8BAMGhB,QAAQ,CAAC,KAAD,CANX,yCAM5BiB,YAN4B,eAMdC,aANc,eAOjC,GAAIC,CAAAA,KAAK,CAAGV,KAAK,CAACE,UAAN,CAAiBS,GAAjB,CAAqB,SAAAC,IAAI,CAAI,CACrC,GAAIC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACfR,WAAW,CAACO,IAAD,CAAX,CACAL,WAAW,CAAC,IAAD,CAAX,CACH,CAHD,CAIA,mBACI,oBAAC,UAAD,kBAAgBK,IAAhB,EAAsB,MAAM,CAAEC,MAA9B,GADJ,CAGH,CARW,CAAZ,CASA,GAAIC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAClBP,WAAW,CAAC,KAAD,CAAX,CACH,CAFD,CAGA,GAAIQ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACjBR,WAAW,CAAC,IAAD,CAAX,CACH,CAFD,CAGA,GAAIS,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACnBP,aAAa,CAAC,IAAD,CAAb,CACH,CAFD,CAGA,GAAIQ,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACpBR,aAAa,CAAC,KAAD,CAAb,CACH,CAFD,CAGA,mBACI,wCACKT,KAAK,CAACkB,UAAN,cACK,oBAAC,mBAAD,MADL,cAEK,oBAAC,UAAD,EACE,IAAI,CAAER,KADR,CAEE,cAAc,CAAEN,cAFlB,CAGE,UAAU,CAAEE,UAHd,CAIE,QAAQ,CAAES,QAJZ,CAKE,SAAS,CAAED,SALb,CAME,YAAY,CAAEN,YANhB,CAOE,UAAU,CAAEQ,UAPd,CAQE,WAAW,CAAEC,WARf,EAHV,CADJ,CAiBH,CA7CD,CA+CA,GAAIE,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHF,UAAU,CAAGvB,cAAc,CAAC0B,WAAf,CAA2BD,KAA3B,CADV,CAEHlB,UAAU,CAAGP,cAAc,CAAC2B,OAAf,CAAuBF,KAAvB,CAFV,CAAP,CAIH,CALD,CAOA,GAAIG,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAM,CACFvB,SAAS,CAAG,oBAAM,CACduB,QAAQ,CAAC5B,YAAY,EAAb,CAAR,CACH,CAHC,CAAN,CAKH,CAND,CASA,cAAeJ,CAAAA,IAAI,CAACE,OAAO,CAACyB,eAAD,CAAkBI,kBAAlB,CAAP,CAA6CxB,mBAA7C,CAAD,CAAnB","sourcesContent":["import LabourPage from \"./LabourPage\";\nimport React, {useEffect, useState} from \"react\";\nimport auth from \"../AuthHOC/authHOC\";\nimport classes from \"./LabourPage.module.css\";\nimport {connect} from \"react-redux\";\nimport LabourSelector from \"../../selectors/labourSelector\";\nimport {getListThunk} from \"../../reducers/labourReducer\";\nimport FullScreenPreloader from \"../common/Preloader/FullScreenPreloader\";\nimport LabourItem from \"./LabourItem/LabourItem\";\n\nlet LabourPageContainer = (props) => {\n    useEffect(() => {\n        props.fetchList();\n    }, props.labourList.length);\n    let [selectedLabour, setSelected] = useState({});\n    let [isOpenEdit, setOpenEdit] = useState(false);\n    let [isCreateOpen, setCreateOpen] = useState(false);\n    let items = props.labourList.map(elem => {\n        let select = () => {\n            setSelected(elem);\n            setOpenEdit(true);\n        }\n        return(\n            <LabourItem {...elem} select={select}/>\n        )\n    });\n    let closeEdit = () => {\n        setOpenEdit(false);\n    }\n    let openEdit = () => {\n        setOpenEdit(true);\n    }\n    let openCreate = () => {\n        setCreateOpen(true);\n    }\n    let closeCreate = () => {\n        setCreateOpen(false);\n    }\n    return(\n        <>\n            {props.isFetching\n                ? <FullScreenPreloader/>\n                : <LabourPage\n                    rows={items}\n                    selectedLabour={selectedLabour}\n                    isOpenEdit={isOpenEdit}\n                    openEdit={openEdit}\n                    closeEdit={closeEdit}\n                    isCreateOpen={isCreateOpen}\n                    openCreate={openCreate}\n                    closeCreate={closeCreate}\n                />\n            }\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isFetching : LabourSelector.getFetching(state),\n        labourList : LabourSelector.getList(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        fetchList : () => {\n            dispatch(getListThunk())\n        }\n    }\n}\n\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(LabourPageContainer));"]},"metadata":{},"sourceType":"module"}