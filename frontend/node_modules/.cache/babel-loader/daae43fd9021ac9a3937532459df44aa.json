{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Start/RecentTask/RecentTaskContainer.js\";\nimport RecentTask from \"./RecentTask\";\nimport React, { useEffect } from \"react\";\nimport classes from \"./RecentTask.module.css\";\nimport { connect } from \"react-redux\";\nimport { getStatusThunk } from \"../../../reducers/tasksReducer\";\nimport TasksSelector from \"../../../selectors/tasksSelector\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport BASE_URL from \"../../../DAL/getBaseUrl\";\nimport LoginSelector from \"../../../selectors/loginSelector\";\n\nlet RecentTaskContainer = props => {\n  useEffect(() => {\n    props.getStatus();\n  }, [props.status.harnesses.length]);\n  let komaxes = props.status.komax_task !== undefined ? props.status.komax_task.komaxes : [];\n  let harnesses = props.status.harnesses ? props.status.harnesses : [];\n  let name = props.status.komax_task !== undefined ? props.status.komax_task.task_name : -1;\n  let ticket_komax = komaxes.map(elem => {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: BASE_URL + \"tasks/\" + name + \"/get_ticket_komax/\" + elem.komax + \"/\",\n      target: \"blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.greenBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"Ticket \", elem.komax));\n  });\n  let harnesses_btns = harnesses.map(elem => {\n    let percent = isNaN(elem.left_time_secs / elem.sum_time_secs) ? 0 : elem.left_time_secs / elem.sum_time_secs * 100;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.harness,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.harness_heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, elem.harness_number), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, percent, \" % completed\", /*#__PURE__*/React.createElement(LinearProgress, {\n      variant: \"determinate\",\n      value: percent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: BASE_URL + \"harnesses/\" + elem.harness_number + \"/download/\",\n      target: \"blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: classes.greenBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"Download\")));\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, name + \"\" === \"-1\" || props.role.toString().toLowerCase() !== (\"master\" || \"operator\") ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(RecentTask, Object.assign({}, props, {\n    tickets: ticket_komax,\n    harnesses: harnesses_btns,\n    number: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 19\n    }\n  })));\n};\n\nlet mapStateToProps = state => {\n  return {\n    status: TasksSelector.getStatus(state),\n    role: LoginSelector.getRole(state)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    getStatus: () => {\n      dispatch(getStatusThunk());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecentTaskContainer);","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Start/RecentTask/RecentTaskContainer.js"],"names":["RecentTask","React","useEffect","classes","connect","getStatusThunk","TasksSelector","LinearProgress","BASE_URL","LoginSelector","RecentTaskContainer","props","getStatus","status","harnesses","length","komaxes","komax_task","undefined","name","task_name","ticket_komax","map","elem","komax","greenBtn","harnesses_btns","percent","isNaN","left_time_secs","sum_time_secs","harness","harness_heading","harness_number","role","toString","toLowerCase","mapStateToProps","state","getRole","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import RecentTask from \"./RecentTask\";\nimport React, {useEffect} from \"react\";\nimport classes from \"./RecentTask.module.css\"\nimport {connect} from \"react-redux\";\nimport {getStatusThunk} from \"../../../reducers/tasksReducer\";\nimport TasksSelector from \"../../../selectors/tasksSelector\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport BASE_URL from \"../../../DAL/getBaseUrl\";\nimport LoginSelector from \"../../../selectors/loginSelector\";\nlet RecentTaskContainer = (props) => {\n    useEffect(() => {\n        props.getStatus();\n    }, [props.status.harnesses.length]);\n\n    let komaxes = props.status.komax_task !== undefined ? props.status.komax_task.komaxes : [];\n\n    let harnesses =  props.status.harnesses ? props.status.harnesses : [];\n\n    let name = props.status.komax_task !== undefined ? props.status.komax_task.task_name : -1;\n\n    let ticket_komax = komaxes.map(elem => {\n        return(\n            <a href={BASE_URL + \"tasks/\" + name +\"/get_ticket_komax/\" + elem.komax +\"/\"} target={\"blank\"}>\n                <button className={classes.greenBtn}>\n                    Ticket {elem.komax}\n                </button>\n            </a>\n        )\n    });\n\n    let harnesses_btns = harnesses.map(elem => {\n        let percent = isNaN(elem.left_time_secs / elem.sum_time_secs) ? 0 : (elem.left_time_secs / elem.sum_time_secs) * 100;\n        return(\n            <div className={classes.harness}>\n                <div className={classes.harness_heading}>\n                    {elem.harness_number}\n                </div>\n                <div className={classes.status}>\n                    {percent} % completed\n                    <LinearProgress variant=\"determinate\" value={percent} />\n                </div>\n                <a href={BASE_URL + \"harnesses/\" + elem.harness_number +\"/download/\"} target={\"blank\"}>\n                    <button className={classes.greenBtn}>\n                        Download\n                    </button>\n                </a>\n            </div>\n        )\n    });\n\n    return (\n        <>\n            {name + \"\" === \"-1\" || props.role.toString().toLowerCase() !== (\"master\" || \"operator\")\n                ? <></>\n                : <RecentTask {...props} tickets={ticket_komax} harnesses={harnesses_btns} number={name}/>\n            }\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        status : TasksSelector.getStatus(state),\n        role : LoginSelector.getRole(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        getStatus : () => {\n            dispatch(getStatusThunk())\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecentTaskContainer);"]},"metadata":{},"sourceType":"module"}