{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komax terminal/Modal/ModalForm.js\";\nimport React, { useState } from \"react\";\nimport classes from \"./ModalForm.module.css\";\nimport { FormattedMessage } from \"react-intl\";\nimport SaveButton from \"../../common/SaveButton/SaveButton\";\n\nlet ModalForm = props => {\n  let terminalNumberRef = React.createRef();\n  let terminalAvalRef = React.createRef();\n  let materialAvalRef = React.createRef();\n\n  let collectData = e => {\n    props.close();\n    let data = {\n      terminal_name: terminalNumberRef.current.value,\n      terminal_available: terminalAvalRef.current.value,\n      seal_installed: materialAvalRef.current.value\n    };\n    props.send(data);\n  };\n\n  let isNumberValid = props.numberErrMsg.length === 0;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.ModalForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"terminal.edit_terminal_heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.close,\n    className: classes.closeBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"terminal.terminal_number_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `${classes.input} ${!isNumberValid ? classes.invalidInput : \"\"}`,\n    ref: terminalNumberRef,\n    value: props.selected.terminal_name,\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"terminal.terminal_avaliable_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: classes.select,\n    ref: terminalAvalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"True\",\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"False\",\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }, \"-\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"terminal.material_avaliable_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: classes.select,\n    ref: materialAvalRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"True\",\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"False\",\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }\n  }, \"-\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SaveButton, {\n    click: collectData,\n    disable: props.isFetching || !props.isValid,\n    value: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"save_button_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 101\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"save_button_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default ModalForm;","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komax terminal/Modal/ModalForm.js"],"names":["React","useState","classes","FormattedMessage","SaveButton","ModalForm","props","terminalNumberRef","createRef","terminalAvalRef","materialAvalRef","collectData","e","close","data","terminal_name","current","value","terminal_available","seal_installed","send","isNumberValid","numberErrMsg","length","heading","closeBtn","inputs","input","invalidInput","selected","select","option","toolbar","isFetching","isValid"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport classes from \"./ModalForm.module.css\";\nimport {FormattedMessage} from \"react-intl\";\nimport SaveButton from \"../../common/SaveButton/SaveButton\";\n\nlet ModalForm = (props) => {\n    let terminalNumberRef = React.createRef();\n    let terminalAvalRef = React.createRef();\n    let materialAvalRef = React.createRef();\n\n    let collectData = (e) => {\n        props.close();\n        let data = {\n            terminal_name : terminalNumberRef.current.value,\n            terminal_available : terminalAvalRef.current.value,\n            seal_installed : materialAvalRef.current.value\n        }\n        props.send(data);\n    };\n\n    let isNumberValid = props.numberErrMsg.length === 0;\n\n    return(\n        <div className={classes.ModalForm}>\n            <div className={classes.heading}>\n                <h2><FormattedMessage id={\"terminal.edit_terminal_heading\"}/></h2>\n                <button onClick={props.close} className={classes.closeBtn}>X</button>\n            </div>\n            <div className={classes.inputs}>\n                <label>\n                    <FormattedMessage id={\"terminal.terminal_number_label\"}/>\n                    <input type={\"text\"} className={`${classes.input} ${!isNumberValid ? classes.invalidInput :\"\"}`} ref={terminalNumberRef} value={props.selected.terminal_name} disabled/>\n                </label>\n                <label>\n                    <FormattedMessage id={\"terminal.terminal_avaliable_label\"}/>\n                    <select className={classes.select} ref={terminalAvalRef}>\n                        <option value={\"True\"} className={classes.option}>+</option>\n                        <option value={\"False\"} className={classes.option}>-</option>\n                    </select>\n                </label>\n                <label>\n                    <FormattedMessage id={\"terminal.material_avaliable_label\"}/>\n                    <select className={classes.select} ref={materialAvalRef}>\n                        <option value={\"True\"} className={classes.option}>+</option>\n                        <option value={\"False\"} className={classes.option}>-</option>\n                    </select>\n                </label>\n            </div>\n            <div className={classes.toolbar}>\n                <SaveButton click={collectData} disable={props.isFetching || !props.isValid} value={<FormattedMessage id={\"save_button_label\"}/>}>\n                    <FormattedMessage id={\"save_button_label\"}/>\n                </SaveButton>\n            </div>\n        </div>\n    );\n}\n\nexport default ModalForm;"]},"metadata":{},"sourceType":"module"}