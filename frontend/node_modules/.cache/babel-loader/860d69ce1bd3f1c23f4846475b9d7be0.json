{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komaxes/Modal/ModalForm.js\";\nimport React, { useState } from \"react\";\nimport classes from \"./ModalForm.module.css\";\nimport createKomax from \"../../../DAL/models/komax\";\nimport SaveButton from \"../../common/SaveButton/SaveButton\";\nimport { FormattedMessage } from 'react-intl';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nlet ModalForm = props => {\n  let [multiselectOptions, setMultiselectOptions] = useState(props.selected ? props.selected.sepairing ? props.selected.sepairing.trim().split(' ').filter(elem => elem.length > 0) : [] : []);\n  let currKomax = props.selected;\n\n  if (!currKomax) {\n    currKomax = createKomax({});\n  }\n\n  let komaxNumberRef = React.createRef();\n  let statusRef = React.createRef();\n  let markingRef = React.createRef();\n  let pairingRef = React.createRef();\n\n  let collectData = e => {\n    props.close();\n    let multiArr = multiselectOptions;\n\n    if (multiArr.length === 0) {\n      multiArr = currKomax.sepairing.split(\" \");\n    }\n\n    let data = {\n      number: komaxNumberRef.current.value,\n      group_of_square: multiArr.reduce((prev, elem) => {\n        return prev + \" \" + elem;\n      }).trim(),\n      pairing: pairingRef.current.value,\n      marking: markingRef.current.value,\n      status: statusRef.current.value\n    };\n    props.send(data);\n  };\n\n  let isInEditMode = props.heading === \"Изменить существующий аппарат\";\n  let isNumberValid = props.numberErrMsg.length === 0;\n  let isIdValid = props.idErrMsg.length === 0;\n\n  let check = e => {\n    if (!isInEditMode) {\n      let number = Number(komaxNumberRef.current.value);\n      props.checkValid(number);\n    }\n  };\n\n  let handleChoose = e => {\n    let arr = [];\n    e.forEach(elem => {\n      arr.push(elem[\"id\"]);\n    });\n    setMultiselectOptions(arr);\n  };\n\n  let options = ['0.5 - 1.0', '1.5 - 2.5', '4.0 - 6.0'].map((elem, index) => {\n    return {\n      name: elem,\n      id: index + 1\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.ModalForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, props.heading), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: props.close,\n    className: classes.closeBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"komax.number_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: `${classes.input} ${!isNumberValid ? classes.invalidInput : \"\"}`,\n    ref: komaxNumberRef,\n    value: currKomax.number,\n    onChange: check,\n    disabled: isInEditMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  })), isNumberValid ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }\n  }, props.numberErrMsg), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"komax.status_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: classes.select,\n    ref: statusRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    selected: currKomax.status === 1,\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, \"Works\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    selected: currKomax.status === 0,\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"Repair\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 3,\n    selected: currKomax.status === 2,\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, \"Not working\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"komax.marking_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: classes.select,\n    ref: markingRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    selected: currKomax.marking === 1,\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 25\n    }\n  }, \"Black\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 2,\n    selected: currKomax.marking === 2,\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"White\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 3,\n    selected: currKomax.marking === 3,\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Both\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"komax.pairing_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: classes.select,\n    ref: pairingRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 1,\n    selected: currKomax.pairing === 1,\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"+\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    selected: currKomax.pairing === 0,\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, \"-\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"komax.group_of_square_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Multiselect, {\n    options: options // Options to display in the dropdown\n    ,\n    onSelect: handleChoose // Function will trigger on select event\n    ,\n    onRemove: handleChoose // Function will trigger on remove event\n    ,\n    selectedValues: multiselectOptions.map(elem => {\n      return options[new Number(elem) - 1];\n    }),\n    displayValue: \"name\" // Property name to display in the dropdown options\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  })), isIdValid ? /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 23\n    }\n  }, props.idErrMsg)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SaveButton, {\n    click: collectData,\n    disable: props.isFetching || !props.isValid,\n    value: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"save_button_label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 101\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default ModalForm;","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komaxes/Modal/ModalForm.js"],"names":["React","useState","classes","createKomax","SaveButton","FormattedMessage","Multiselect","ModalForm","props","multiselectOptions","setMultiselectOptions","selected","sepairing","trim","split","filter","elem","length","currKomax","komaxNumberRef","createRef","statusRef","markingRef","pairingRef","collectData","e","close","multiArr","data","number","current","value","group_of_square","reduce","prev","pairing","marking","status","send","isInEditMode","heading","isNumberValid","numberErrMsg","isIdValid","idErrMsg","check","Number","checkValid","handleChoose","arr","forEach","push","options","map","index","name","id","closeBtn","inputs","input","invalidInput","error","select","option","toolbar","isFetching","isValid"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport classes from \"./ModalForm.module.css\";\nimport createKomax from \"../../../DAL/models/komax\";\nimport SaveButton from \"../../common/SaveButton/SaveButton\";\nimport {FormattedMessage} from 'react-intl';\nimport { Multiselect } from 'multiselect-react-dropdown';\n\nlet ModalForm = (props) => {\n    let [multiselectOptions, setMultiselectOptions] = useState(props.selected ? (props.selected.sepairing ? props.selected.sepairing.trim().split(' ').filter(elem => elem.length > 0) : []) : []);\n\n    let currKomax = props.selected;\n    if (!currKomax){\n        currKomax = createKomax({});\n    }\n\n    let komaxNumberRef = React.createRef();\n    let statusRef = React.createRef();\n    let markingRef = React.createRef();\n    let pairingRef = React.createRef();\n\n    let collectData = (e) => {\n        props.close();\n        let multiArr = multiselectOptions;\n        if (multiArr.length === 0){\n            multiArr = currKomax.sepairing.split(\" \");\n        }\n        let data = {\n            number : komaxNumberRef.current.value,\n            group_of_square : multiArr.reduce((prev, elem) => {\n                return prev + \" \" + elem\n            }).trim(),\n            pairing : pairingRef.current.value,\n            marking : markingRef.current.value,\n            status : statusRef.current.value\n        }\n\n        props.send(data);\n    };\n\n    let isInEditMode = props.heading === \"Изменить существующий аппарат\";\n    let isNumberValid = props.numberErrMsg.length === 0;\n    let isIdValid = props.idErrMsg.length === 0;\n\n    let check = (e) => {\n        if (!isInEditMode){\n            let number = Number(komaxNumberRef.current.value);\n            props.checkValid(number);\n        }\n    }\n\n    let handleChoose = (e) => {\n        let arr = [];\n        e.forEach(elem => {\n            arr.push(elem[\"id\"]);\n        });\n        setMultiselectOptions(arr);\n    }\n\n    let options = ['0.5 - 1.0', '1.5 - 2.5', '4.0 - 6.0'].map((elem, index) => {\n        return (\n            {name : elem, id : index + 1}\n        )\n    });\n\n    return(\n        <div className={classes.ModalForm}>\n            <div className={classes.heading}>\n                <h2>{props.heading}</h2>\n                <button onClick={props.close} className={classes.closeBtn}>X</button>\n            </div>\n            <div className={classes.inputs}>\n                <label>\n                    <FormattedMessage id={\"komax.number_label\"}/>\n                    <input type={\"text\"} className={`${classes.input} ${!isNumberValid ? classes.invalidInput :\"\"}`} ref={komaxNumberRef} value={currKomax.number} onChange={check} disabled={isInEditMode}/>\n                </label>\n                {isNumberValid\n                    ? <></>\n                    : <div className={classes.error}>\n                        {props.numberErrMsg}\n                      </div>\n                }\n                <label>\n                    <FormattedMessage id={\"komax.status_label\"}/>\n                    <select className={classes.select} ref={statusRef}>\n                        <option value={1} selected={currKomax.status === 1} className={classes.option}>Works</option>\n                        <option value={2} selected={currKomax.status === 0} className={classes.option}>Repair</option>\n                        <option value={3} selected={currKomax.status === 2} className={classes.option}>Not working</option>\n                    </select>\n                </label>\n                <label>\n                    <FormattedMessage id={\"komax.marking_label\"}/>\n                    <select className={classes.select} ref={markingRef}>\n                        <option value={1} selected={currKomax.marking === 1} className={classes.option}>Black</option>\n                        <option value={2} selected={currKomax.marking === 2} className={classes.option}>White</option>\n                        <option value={3} selected={currKomax.marking === 3} className={classes.option}>Both</option>\n                    </select>\n                </label>\n                <label>\n                    <FormattedMessage id={\"komax.pairing_label\"}/>\n                    <select className={classes.select} ref={pairingRef}>\n                        <option value={1} selected={currKomax.pairing === 1} className={classes.option}>+</option>\n                        <option value={0} selected={currKomax.pairing === 0} className={classes.option}>-</option>\n                    </select>\n                </label>\n                <label>\n                    <FormattedMessage id={\"komax.group_of_square_label\"}/>\n                    <Multiselect\n                        options={options} // Options to display in the dropdown\n                        onSelect={handleChoose} // Function will trigger on select event\n                        onRemove={handleChoose} // Function will trigger on remove event\n                        selectedValues={multiselectOptions.map(elem => {\n                            return options[new Number(elem) - 1];\n                        })}\n                        displayValue=\"name\" // Property name to display in the dropdown options\n                    />\n                </label>\n                {isIdValid\n                    ? <></>\n                    : <div className={classes.error}>\n                        {props.idErrMsg}\n                      </div>\n                }\n            </div>\n            <div className={classes.toolbar}>\n                <SaveButton click={collectData} disable={props.isFetching || !props.isValid} value={<FormattedMessage id={\"save_button_label\"}/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport default ModalForm;"]},"metadata":{},"sourceType":"module"}