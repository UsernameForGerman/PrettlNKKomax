{"ast":null,"code":"import _slicedToArray from\"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{connect}from\"react-redux\";import KomaxSelector from\"../../selectors/komaxSelector\";import{createKomaxThunk,getListThunk,getStatusesThunk,updateKomaxThunk}from\"../../reducers/komaxReducer\";import React,{useEffect,useState}from\"react\";import Komaxes from\"./Komaxes\";import auth from\"../AuthHOC/authHOC\";import classes from\"./Komaxes.module.css\";import komax from\"../../assets/images/komax.png\";import FullScreenPreloader from\"../common/Preloader/FullScreenPreloader\";import KappaSelector from\"../../selectors/kappaSelector\";import{getKappasThunk,updateKappaThunk}from\"../../reducers/kappasReducer\";var KomaxesContainer=function KomaxesContainer(props){useEffect(function(){if(props.komaxList.length===0){props.fetchKomaxes();}props.getStatuses();},props.komaxList.length);useEffect(function(){props.fetchKappas();},[props.kappaList.length]);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),selectedKomax=_useState2[0],setSelectedKomax=_useState2[1];var save=function save(komax){props.createKomax(komax);};var update=function update(komax){props.updateKomax(komax);};var statusDict={};props.statuses.forEach(function(status){statusDict[status.komax]=status.task_personal;});var getColorByNumber=function getColorByNumber(number){var status=statusDict[number];if(status===undefined)return\"white\";if(status===null)return\"red\";return\"green\";};var renderedKomaxItems=props.komaxList.map(function(elem){return/*#__PURE__*/React.createElement(\"div\",{className:classes.komaxItem},/*#__PURE__*/React.createElement(\"div\",{className:classes.komaxItemId},elem.number),/*#__PURE__*/React.createElement(\"img\",{style:{backgroundColor:getColorByNumber(elem.number)},src:komax,alt:\"komax\",className:classes.komaxImg}));});return/*#__PURE__*/React.createElement(React.Fragment,null,props.isFetching?/*#__PURE__*/React.createElement(FullScreenPreloader,null):/*#__PURE__*/React.createElement(Komaxes,Object.assign({},props,{items:renderedKomaxItems,save:save,update:update,updateKappa:props.updateKappa,selectedKomax:selectedKomax,setSelected:setSelectedKomax})));};var mapStateToProps=function mapStateToProps(state){return{isFetching:KomaxSelector.getFetching(state),komaxList:KomaxSelector.getList(state),kappaList:KappaSelector.getList(state),statuses:KomaxSelector.getStatuses(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{getStatuses:function getStatuses(){dispatch(getStatusesThunk());},fetchKomaxes:function fetchKomaxes(){dispatch(getListThunk());},fetchKappas:function fetchKappas(){dispatch(getKappasThunk());},createKomax:function createKomax(komax){dispatch(createKomaxThunk(komax));},updateKomax:function updateKomax(komax){dispatch(updateKomaxThunk(komax));},updateKappa:function updateKappa(kappa){dispatch(updateKappaThunk(kappa));}};};export default auth(connect(mapStateToProps,mapDispatchToProps)(KomaxesContainer));","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Komaxes/KomaxesContainer.js"],"names":["connect","KomaxSelector","createKomaxThunk","getListThunk","getStatusesThunk","updateKomaxThunk","React","useEffect","useState","Komaxes","auth","classes","komax","FullScreenPreloader","KappaSelector","getKappasThunk","updateKappaThunk","KomaxesContainer","props","komaxList","length","fetchKomaxes","getStatuses","fetchKappas","kappaList","selectedKomax","setSelectedKomax","save","createKomax","update","updateKomax","statusDict","statuses","forEach","status","task_personal","getColorByNumber","number","undefined","renderedKomaxItems","map","elem","komaxItem","komaxItemId","backgroundColor","komaxImg","isFetching","updateKappa","mapStateToProps","state","getFetching","getList","mapDispatchToProps","dispatch","kappa"],"mappings":"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","sourcesContent":["import {connect} from \"react-redux\";\nimport KomaxSelector from \"../../selectors/komaxSelector\";\nimport {createKomaxThunk, getListThunk, getStatusesThunk, updateKomaxThunk} from \"../../reducers/komaxReducer\";\nimport React, {useEffect, useState} from \"react\";\nimport Komaxes from \"./Komaxes\";\nimport auth from \"../AuthHOC/authHOC\";\nimport classes from \"./Komaxes.module.css\";\nimport komax from \"../../assets/images/komax.png\";\nimport FullScreenPreloader from \"../common/Preloader/FullScreenPreloader\";\nimport KappaSelector from \"../../selectors/kappaSelector\";\nimport {getKappasThunk, updateKappaThunk} from \"../../reducers/kappasReducer\";\n\nlet KomaxesContainer = (props) => {\n    useEffect(() => {\n        if(props.komaxList.length === 0){\n             props.fetchKomaxes();\n        }\n\n        props.getStatuses();\n    }, props.komaxList.length);\n\n    useEffect(() => {\n        props.fetchKappas();\n    }, [props.kappaList.length])\n\n    let [selectedKomax, setSelectedKomax] = useState({});\n\n    let save = (komax) => {\n        props.createKomax(komax);\n    }\n\n    let update = (komax) => {\n        props.updateKomax(komax);\n    }\n\n    let statusDict = {};\n    props.statuses.forEach(status => {\n        statusDict[status.komax] = status.task_personal;\n    });\n\n    let getColorByNumber = (number) => {\n        let status = statusDict[number];\n        if (status === undefined) return \"white\";\n        if (status === null) return \"red\";\n        return \"green\";\n    }\n\n    let renderedKomaxItems = props.komaxList.map((elem) => {\n        return (\n            <div className={classes.komaxItem}>\n                <div className={classes.komaxItemId}>\n                    {elem.number}\n                </div>\n                <img style={{backgroundColor : getColorByNumber(elem.number)}} src={komax} alt={\"komax\"} className={classes.komaxImg}/>\n            </div>\n        );\n    });\n\n    return(\n        <>\n            {props.isFetching\n                ? <FullScreenPreloader/>\n                : <Komaxes\n                    {...props}\n                    items={renderedKomaxItems}\n                    save={save}\n                    update={update}\n                    updateKappa={props.updateKappa}\n                    selectedKomax={selectedKomax}\n                    setSelected={setSelectedKomax}\n                />\n            }\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isFetching : KomaxSelector.getFetching(state),\n        komaxList : KomaxSelector.getList(state),\n        kappaList : KappaSelector.getList(state),\n        statuses : KomaxSelector.getStatuses(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        getStatuses : () => {\n            dispatch(getStatusesThunk())\n        },\n\n        fetchKomaxes : () => {\n            dispatch(getListThunk())\n        },\n\n        fetchKappas : () => {\n            dispatch(getKappasThunk())\n        },\n\n        createKomax : (komax) => {\n            dispatch(createKomaxThunk(komax))\n        },\n\n        updateKomax : (komax) => {\n            dispatch(updateKomaxThunk(komax))\n        },\n\n        updateKappa : (kappa) => {\n            dispatch(updateKappaThunk(kappa))\n        }\n    }\n}\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(KomaxesContainer));"]},"metadata":{},"sourceType":"module"}