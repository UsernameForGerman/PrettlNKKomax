{"ast":null,"code":"import React from\"react\";import Login from\"./Login\";import LoginSelector from\"../../selectors/loginSelector\";import{authThunk}from\"../../reducers/authReducer\";import{connect}from\"react-redux\";import{Redirect}from\"react-router-dom\";var LoginContainer=function LoginContainer(props){return/*#__PURE__*/React.createElement(React.Fragment,null,props.isLogged?/*#__PURE__*/React.createElement(Redirect,{to:\"/account\"}):/*#__PURE__*/React.createElement(Login,{login:props.login,errMsg:props.errMsg,isFetching:props.isFetching}));};var mapStateToProps=function mapStateToProps(state){return{isLogged:LoginSelector.getLogged(state),isFetching:LoginSelector.getFetching(state),errMsg:LoginSelector.getErr(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{login:function login(_login,password){dispatch(authThunk(_login,password));}};};export default connect(mapStateToProps,mapDispatchToProps)(LoginContainer);","map":{"version":3,"sources":["/home/german/PycharmProjects/komax_prettl/PrettlNKKomax/frontend/src/comp/Login/LoginContainer.js"],"names":["React","Login","LoginSelector","authThunk","connect","Redirect","LoginContainer","props","isLogged","login","errMsg","isFetching","mapStateToProps","state","getLogged","getFetching","getErr","mapDispatchToProps","dispatch","password"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,+BAA1B,CACA,OAAQC,SAAR,KAAwB,4BAAxB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,QAAR,KAAuB,kBAAvB,CAEA,GAAIC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAC5B,mBACI,wCACKA,KAAK,CAACC,QAAN,cACK,oBAAC,QAAD,EAAU,EAAE,CAAE,UAAd,EADL,cAEK,oBAAC,KAAD,EAAO,KAAK,CAAED,KAAK,CAACE,KAApB,CAA2B,MAAM,CAAEF,KAAK,CAACG,MAAzC,CAAiD,UAAU,CAAEH,KAAK,CAACI,UAAnE,EAHV,CADJ,CAQH,CATD,CAWA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC7B,MAAO,CACHL,QAAQ,CAAGN,aAAa,CAACY,SAAd,CAAwBD,KAAxB,CADR,CAEHF,UAAU,CAAGT,aAAa,CAACa,WAAd,CAA0BF,KAA1B,CAFV,CAGHH,MAAM,CAAGR,aAAa,CAACc,MAAd,CAAqBH,KAArB,CAHN,CAAP,CAKH,CAND,CAQA,GAAII,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACnC,MAAO,CACHT,KAAK,CAAG,eAACA,MAAD,CAAQU,QAAR,CAAqB,CACzBD,QAAQ,CAACf,SAAS,CAACM,MAAD,CAAQU,QAAR,CAAV,CAAR,CACH,CAHE,CAAP,CAKH,CAND,CAQA,cAAef,CAAAA,OAAO,CAACQ,eAAD,CAAkBK,kBAAlB,CAAP,CAA6CX,cAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport Login from \"./Login\";\nimport LoginSelector from \"../../selectors/loginSelector\";\nimport {authThunk} from \"../../reducers/authReducer\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\n\nlet LoginContainer = (props) => {\n    return(\n        <>\n            {props.isLogged\n                ? <Redirect to={\"/account\"}/>\n                : <Login login={props.login} errMsg={props.errMsg} isFetching={props.isFetching}/>\n            }\n        </>\n    );\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isLogged : LoginSelector.getLogged(state),\n        isFetching : LoginSelector.getFetching(state),\n        errMsg : LoginSelector.getErr(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        login : (login, password) => {\n            dispatch(authThunk(login, password))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginContainer);"]},"metadata":{},"sourceType":"module"}