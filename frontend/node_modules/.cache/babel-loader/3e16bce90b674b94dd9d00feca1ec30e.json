{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Harnesses/HarnessesContainer.js\";\nimport Harnesses from \"./Harnesses\";\nimport React, { useEffect, useState } from \"react\";\nimport HarnessesChooseTableItem from \"./HarnessesTables/HarnessesChooseTable/Item/HCTItem\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport classes from \"./Harnesses.module.css\";\nimport HarnessSelector from \"../../selectors/harnessSelector\";\nimport { deleteHarnessByNumberThunk, getChartByNumberThunk, getHarnessesListThunk } from \"../../reducers/harnessesReducer\";\nimport { connect } from \"react-redux\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport { FormattedMessage } from \"react-intl\";\nimport auth from \"../AuthHOC/authHOC\";\nimport FullScreenPreloader from \"../common/Preloader/FullScreenPreloader\";\nimport LoginSelector from \"../../selectors/loginSelector\";\n\nlet HarsessesContainer = props => {\n  useEffect(() => {\n    props.fetchList();\n  }, props.list.length);\n  let [selectedNumber, setSelectedNumber] = useState(\"\");\n  let items = props.list;\n  items = items.map(elem => {\n    let deleteHarness = () => {\n      props.deleteHarness(elem.harness_number);\n    };\n\n    let select = () => {\n      setSelectedNumber(elem.harness_number);\n      props.fetchMap(elem.harness_number);\n    };\n\n    return /*#__PURE__*/React.createElement(HarnessesChooseTableItem, Object.assign({}, elem, {\n      role: props.role,\n      select: select,\n      delete: deleteHarness,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }));\n  });\n  let headings = [/*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_harnesses_number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_harness\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 68\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_marking\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 118\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 168\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 222\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_color\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 276\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_length\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 329\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_armirovka\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 383\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_tube_len\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 435\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_seal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 486\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_cut_length\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 538\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_terminal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 596\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_aplicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 652\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_armirovka_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 704\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_tube_len_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 758\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_seal_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 811\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_cut_length_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 865\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_wire_terminal_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 925\n    }\n  }), /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"harnesses.map_aplicator_2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 983\n    }\n  })].map(heading => {\n    return /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 41\n      }\n    }, heading));\n  });\n\n  let renderRows = list => {\n    let order = ['harness', 'wire_type', 'marking', 'wire_number', 'wire_square', 'wire_color', 'wire_length', 'armirovka_1', 'tube_len_1', 'wire_seal_1', 'wire_cut_length_1', 'wire_terminal_1', 'aplicator_1', 'armirovka_2', 'tube_len_2', 'wire_seal_2', 'wire_cut_length_2', 'wire_terminal_2', 'aplicator_2'];\n    list = list.map(row => {\n      row = Object.keys(row).map((elem, index) => {\n        let key = order[index];\n        let value = row[key];\n        return /*#__PURE__*/React.createElement(TableCell, {\n          align: \"right\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }\n        }, value);\n      });\n      return /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, row);\n    });\n    return list;\n  };\n\n  let rows = renderRows(props.selectedMap);\n\n  let renderMap = () => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, props.isMapFetching ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mapWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 55\n      }\n    })) : selectedNumber.length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"harnesses.map_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }\n    }), \" \" + selectedNumber), /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      className: classes.table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 27\n      }\n    }, headings)), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, rows)))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.mapWrapper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"harnesses.choose_terminal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }))));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.isFetching ? /*#__PURE__*/React.createElement(FullScreenPreloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }) : /*#__PURE__*/React.createElement(Harnesses, {\n    harnesses: items,\n    role: props.role,\n    selectedTable: renderMap(),\n    fetch: props.fetchList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }));\n};\n\nlet mapStateToProps = state => {\n  return {\n    list: HarnessSelector.getList(state),\n    isFetching: HarnessSelector.getFetching(state),\n    isMapFetching: HarnessSelector.getMapFetching(state),\n    selectedMap: HarnessSelector.getMap(state),\n    role: LoginSelector.getRole(state)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    fetchList: () => {\n      dispatch(getHarnessesListThunk());\n    },\n    deleteHarness: number => {\n      dispatch(deleteHarnessByNumberThunk(number));\n    },\n    fetchMap: number => {\n      dispatch(getChartByNumberThunk(number));\n    }\n  };\n};\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(HarsessesContainer));","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Harnesses/HarnessesContainer.js"],"names":["Harnesses","React","useEffect","useState","HarnessesChooseTableItem","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","Paper","classes","HarnessSelector","deleteHarnessByNumberThunk","getChartByNumberThunk","getHarnessesListThunk","connect","Preloader","FormattedMessage","auth","FullScreenPreloader","LoginSelector","HarsessesContainer","props","fetchList","list","length","selectedNumber","setSelectedNumber","items","map","elem","deleteHarness","harness_number","select","fetchMap","role","headings","heading","renderRows","order","row","Object","keys","index","key","value","rows","selectedMap","renderMap","isMapFetching","mapWrapper","table","isFetching","mapStateToProps","state","getList","getFetching","getMapFetching","getMap","getRole","mapDispatchToProps","dispatch","number"],"mappings":"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","sourcesContent":["import Harnesses from \"./Harnesses\";\nimport React, {useEffect, useState} from \"react\";\nimport HarnessesChooseTableItem from \"./HarnessesTables/HarnessesChooseTable/Item/HCTItem\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Paper from \"@material-ui/core/Paper\";\nimport classes from \"./Harnesses.module.css\"\nimport HarnessSelector from \"../../selectors/harnessSelector\";\nimport {deleteHarnessByNumberThunk, getChartByNumberThunk, getHarnessesListThunk} from \"../../reducers/harnessesReducer\";\nimport {connect} from \"react-redux\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {FormattedMessage} from \"react-intl\";\nimport auth from \"../AuthHOC/authHOC\";\nimport FullScreenPreloader from \"../common/Preloader/FullScreenPreloader\";\nimport LoginSelector from \"../../selectors/loginSelector\";\n\nlet HarsessesContainer = (props) => {\n    useEffect(() => {\n        props.fetchList();\n    }, props.list.length);\n\n    let [selectedNumber, setSelectedNumber] = useState(\"\");\n\n    let items = props.list;\n\n    items = items.map((elem) => {\n        let deleteHarness = () => {\n            props.deleteHarness(elem.harness_number);\n        }\n\n        let select = () => {\n            setSelectedNumber(elem.harness_number);\n            props.fetchMap(elem.harness_number)\n        }\n\n        return(\n          <HarnessesChooseTableItem {...elem} role={props.role} select={select} delete={deleteHarness}/>\n        );\n    });\n\n    let headings = [\n        <FormattedMessage id={\"harnesses.map_harnesses_number\"}/>, <FormattedMessage id={\"harnesses.map_harness\"}/>, <FormattedMessage id={\"harnesses.map_marking\"}/>, <FormattedMessage id={\"harnesses.map_wire_number\"}/>, <FormattedMessage id={\"harnesses.map_wire_square\"}/>, <FormattedMessage id={\"harnesses.map_wire_color\"}/>, <FormattedMessage id={\"harnesses.map_wire_length\"}/>, <FormattedMessage id={\"harnesses.map_armirovka\"}/>, <FormattedMessage id={\"harnesses.map_tube_len\"}/>, <FormattedMessage id={\"harnesses.map_wire_seal\"}/>, <FormattedMessage id={\"harnesses.map_wire_cut_length\"}/>, <FormattedMessage id={\"harnesses.map_wire_terminal\"}/>, <FormattedMessage id={\"harnesses.map_aplicator\"}/>, <FormattedMessage id={\"harnesses.map_armirovka_2\"}/>, <FormattedMessage id={\"harnesses.map_tube_len_2\"}/>, <FormattedMessage id={\"harnesses.map_wire_seal_2\"}/>, <FormattedMessage id={\"harnesses.map_wire_cut_length_2\"}/>, <FormattedMessage id={\"harnesses.map_wire_terminal_2\"}/>, <FormattedMessage id={\"harnesses.map_aplicator_2\"}/>\n    ].map((heading) => {\n        return(<TableCell align=\"right\"><b>{heading}</b></TableCell>)\n    });\n\n    let renderRows = (list) => {\n        let order = ['harness', 'wire_type', 'marking', 'wire_number', 'wire_square', 'wire_color', 'wire_length', 'armirovka_1', 'tube_len_1', 'wire_seal_1', 'wire_cut_length_1', 'wire_terminal_1', 'aplicator_1', 'armirovka_2', 'tube_len_2', 'wire_seal_2', 'wire_cut_length_2', 'wire_terminal_2', 'aplicator_2'];\n\n        list = list.map((row) => {\n            row = Object.keys(row).map((elem, index) => {\n                let key = order[index];\n                let value = row[key];\n                return(\n                    <TableCell align=\"right\">{value}</TableCell>\n                )\n            });\n\n            return(\n                <TableRow>\n                    {row}\n                </TableRow>\n            );\n        });\n\n        return list;\n    }\n\n    let rows = renderRows(props.selectedMap);\n\n    let renderMap = () => {\n        return(\n            <>{props.isMapFetching\n                ? <div className={classes.mapWrapper}><Preloader/></div>\n                : selectedNumber.length > 0\n                ? <div>\n                    <h2><FormattedMessage id={\"harnesses.map_name\"}/>{\" \" + selectedNumber}</h2>\n                      <TableContainer component={Paper} className={classes.table}>\n                      <Table aria-label=\"simple table\">\n                        <TableHead>\n                          <TableRow>\n                              {headings}\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows}\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </div>\n                : <div className={classes.mapWrapper}>\n                    <h1>\n                        <FormattedMessage id={\"harnesses.choose_terminal\"}/>\n                    </h1>\n                  </div>\n              }\n            </>\n        );\n    };\n\n    return(\n        <>{ props.isFetching\n            ? <FullScreenPreloader/>\n            : <Harnesses harnesses={items} role={props.role} selectedTable={renderMap()} fetch={props.fetchList}/>\n          }\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        list : HarnessSelector.getList(state),\n        isFetching : HarnessSelector.getFetching(state),\n        isMapFetching : HarnessSelector.getMapFetching(state),\n        selectedMap : HarnessSelector.getMap(state),\n        role : LoginSelector.getRole(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        fetchList : () => {\n            dispatch(getHarnessesListThunk());\n        },\n\n        deleteHarness : (number) => {\n            dispatch(deleteHarnessByNumberThunk(number));\n        },\n\n        fetchMap : (number) => {\n            dispatch(getChartByNumberThunk(number))\n        }\n    }\n}\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(HarsessesContainer));\n"]},"metadata":{},"sourceType":"module"}