{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Labour/LabourPageContainer.js\";\nimport LabourPage from \"./LabourPage\";\nimport React, { useEffect, useState } from \"react\";\nimport auth from \"../AuthHOC/authHOC\";\nimport classes from \"./LabourPage.module.css\";\nimport { connect } from \"react-redux\";\nimport LabourSelector from \"../../selectors/labourSelector\";\nimport { getListThunk } from \"../../reducers/labourReducer\";\nimport FullScreenPreloader from \"../common/Preloader/FullScreenPreloader\";\nimport LabourItem from \"./LabourItem/LabourItem\";\n\nlet LabourPageContainer = props => {\n  useEffect(() => {\n    props.fetchList();\n  }, props.labourList.length);\n  let [selectedLabour, setSelected] = useState({});\n  let [isOpenEdit, setOpenEdit] = useState(false);\n  let [isCreateOpen, setCreateOpen] = useState(false);\n  let items = props.labourList.map(elem => {\n    let select = () => {\n      setSelected(elem);\n      setOpenEdit(true);\n    };\n\n    return /*#__PURE__*/React.createElement(LabourItem, Object.assign({}, elem, {\n      select: select,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }));\n  });\n\n  let closeEdit = () => {\n    setOpenEdit(false);\n  };\n\n  let openEdit = () => {\n    setOpenEdit(true);\n  };\n\n  let openCreate = () => {\n    setCreateOpen(true);\n  };\n\n  let closeCreate = () => {\n    setCreateOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.isFetching ? /*#__PURE__*/React.createElement(FullScreenPreloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(LabourPage, {\n    rows: items,\n    selectedLabour: selectedLabour,\n    isOpenEdit: isOpenEdit,\n    openEdit: openEdit,\n    closeEdit: closeEdit,\n    isCreateOpen: isCreateOpen,\n    openCreate: openCreate,\n    closeCreate: closeCreate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }\n  }));\n};\n\nlet mapStateToProps = state => {\n  return {\n    isFetching: LabourSelector.getFetching(state),\n    labourList: LabourSelector.getList(state)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    fetchList: () => {\n      dispatch(getListThunk());\n    }\n  };\n};\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(LabourPageContainer));","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Labour/LabourPageContainer.js"],"names":["LabourPage","React","useEffect","useState","auth","classes","connect","LabourSelector","getListThunk","FullScreenPreloader","LabourItem","LabourPageContainer","props","fetchList","labourList","length","selectedLabour","setSelected","isOpenEdit","setOpenEdit","isCreateOpen","setCreateOpen","items","map","elem","select","closeEdit","openEdit","openCreate","closeCreate","isFetching","mapStateToProps","state","getFetching","getList","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAAQC,YAAR,QAA2B,8BAA3B;AACA,OAAOC,mBAAP,MAAgC,yCAAhC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,IAAIC,mBAAmB,GAAIC,KAAD,IAAW;AACjCV,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAACC,SAAN;AACH,GAFQ,EAEND,KAAK,CAACE,UAAN,CAAiBC,MAFX,CAAT;AAGA,MAAI,CAACC,cAAD,EAAiBC,WAAjB,IAAgCd,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAACe,UAAD,EAAaC,WAAb,IAA4BhB,QAAQ,CAAC,KAAD,CAAxC;AACA,MAAI,CAACiB,YAAD,EAAeC,aAAf,IAAgClB,QAAQ,CAAC,KAAD,CAA5C;AACA,MAAImB,KAAK,GAAGV,KAAK,CAACE,UAAN,CAAiBS,GAAjB,CAAqBC,IAAI,IAAI;AACrC,QAAIC,MAAM,GAAG,MAAM;AACfR,MAAAA,WAAW,CAACO,IAAD,CAAX;AACAL,MAAAA,WAAW,CAAC,IAAD,CAAX;AACH,KAHD;;AAIA,wBACI,oBAAC,UAAD,oBAAgBK,IAAhB;AAAsB,MAAA,MAAM,EAAEC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH,GARW,CAAZ;;AASA,MAAIC,SAAS,GAAG,MAAM;AAClBP,IAAAA,WAAW,CAAC,KAAD,CAAX;AACH,GAFD;;AAGA,MAAIQ,QAAQ,GAAG,MAAM;AACjBR,IAAAA,WAAW,CAAC,IAAD,CAAX;AACH,GAFD;;AAGA,MAAIS,UAAU,GAAG,MAAM;AACnBP,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAFD;;AAGA,MAAIQ,WAAW,GAAG,MAAM;AACpBR,IAAAA,aAAa,CAAC,KAAD,CAAb;AACH,GAFD;;AAGA,sBACI,0CACKT,KAAK,CAACkB,UAAN,gBACK,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,gBAEK,oBAAC,UAAD;AACE,IAAA,IAAI,EAAER,KADR;AAEE,IAAA,cAAc,EAAEN,cAFlB;AAGE,IAAA,UAAU,EAAEE,UAHd;AAIE,IAAA,QAAQ,EAAES,QAJZ;AAKE,IAAA,SAAS,EAAED,SALb;AAME,IAAA,YAAY,EAAEN,YANhB;AAOE,IAAA,UAAU,EAAEQ,UAPd;AAQE,IAAA,WAAW,EAAEC,WARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHV,CADJ;AAiBH,CA7CD;;AA+CA,IAAIE,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,UAAU,EAAGvB,cAAc,CAAC0B,WAAf,CAA2BD,KAA3B,CADV;AAEHlB,IAAAA,UAAU,EAAGP,cAAc,CAAC2B,OAAf,CAAuBF,KAAvB;AAFV,GAAP;AAIH,CALD;;AAOA,IAAIG,kBAAkB,GAAIC,QAAD,IAAc;AACnC,SAAM;AACFvB,IAAAA,SAAS,EAAG,MAAM;AACduB,MAAAA,QAAQ,CAAC5B,YAAY,EAAb,CAAR;AACH;AAHC,GAAN;AAKH,CAND;;AASA,eAAeJ,IAAI,CAACE,OAAO,CAACyB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CxB,mBAA7C,CAAD,CAAnB","sourcesContent":["import LabourPage from \"./LabourPage\";\nimport React, {useEffect, useState} from \"react\";\nimport auth from \"../AuthHOC/authHOC\";\nimport classes from \"./LabourPage.module.css\";\nimport {connect} from \"react-redux\";\nimport LabourSelector from \"../../selectors/labourSelector\";\nimport {getListThunk} from \"../../reducers/labourReducer\";\nimport FullScreenPreloader from \"../common/Preloader/FullScreenPreloader\";\nimport LabourItem from \"./LabourItem/LabourItem\";\n\nlet LabourPageContainer = (props) => {\n    useEffect(() => {\n        props.fetchList();\n    }, props.labourList.length);\n    let [selectedLabour, setSelected] = useState({});\n    let [isOpenEdit, setOpenEdit] = useState(false);\n    let [isCreateOpen, setCreateOpen] = useState(false);\n    let items = props.labourList.map(elem => {\n        let select = () => {\n            setSelected(elem);\n            setOpenEdit(true);\n        }\n        return(\n            <LabourItem {...elem} select={select}/>\n        )\n    });\n    let closeEdit = () => {\n        setOpenEdit(false);\n    }\n    let openEdit = () => {\n        setOpenEdit(true);\n    }\n    let openCreate = () => {\n        setCreateOpen(true);\n    }\n    let closeCreate = () => {\n        setCreateOpen(false);\n    }\n    return(\n        <>\n            {props.isFetching\n                ? <FullScreenPreloader/>\n                : <LabourPage\n                    rows={items}\n                    selectedLabour={selectedLabour}\n                    isOpenEdit={isOpenEdit}\n                    openEdit={openEdit}\n                    closeEdit={closeEdit}\n                    isCreateOpen={isCreateOpen}\n                    openCreate={openCreate}\n                    closeCreate={closeCreate}\n                />\n            }\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isFetching : LabourSelector.getFetching(state),\n        labourList : LabourSelector.getList(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        fetchList : () => {\n            dispatch(getListThunk())\n        }\n    }\n}\n\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(LabourPageContainer));"]},"metadata":{},"sourceType":"module"}