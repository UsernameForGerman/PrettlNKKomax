{"ast":null,"code":"import _toConsumableArray from\"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import TaskDetailPage from\"./TaskDetailPage\";import React,{useEffect}from\"react\";import{withRouter}from\"react-router-dom\";import auth from\"../../AuthHOC/authHOC\";import{connect}from\"react-redux\";import classes from\"./TaskDetailPage.module.css\";import TasksSelector from\"../../../selectors/tasksSelector\";import{getTasksThunk}from\"../../../reducers/tasksReducer\";import LoginSelector from\"../../../selectors/loginSelector\";import BASE_URL from\"../../../DAL/getBaseUrl\";import formatTime from\"./formatTime\";import{FormattedMessage}from\"react-intl\";var TaskDetailPageContainer=function TaskDetailPageContainer(props){var name=props.match.params.id;useEffect(function(){props.fetchList();},props.taskList.length);var task=props.taskList.filter(function(elem){return elem.task_name===name;})[0];var komaxes=task?task.komaxes:[];var harnesses=task?task.harnesses:[];var taskHarnesses=harnesses.map(function(elem,index){return/*#__PURE__*/React.createElement(\"h3\",{className:classes.harness},elem.harness,\" : \",elem.amount);});var taskKomaxes=komaxes.map(function(elem){return/*#__PURE__*/React.createElement(\"h3\",{className:classes.komax},/*#__PURE__*/React.createElement(\"div\",{style:{minWidth:\"50px\",textAlign:\"right\"}},elem.komax,\" - \"),/*#__PURE__*/React.createElement(\"div\",{style:{minWidth:\"150px\",textAlign:\"left\"}},formatTime(elem.time,props.locale)));});var row=[];var task_komax=komaxes.map(function(elem,index){row.push(/*#__PURE__*/React.createElement(\"a\",{href:BASE_URL+\"api/v1/\"+name+\"/get_task_komax/\"+elem.komax+\"/\",target:\"blank\"},/*#__PURE__*/React.createElement(\"button\",{className:classes.greenBtn},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"task_label\"}),\" \",elem.komax)));if((index+1)%3===0){var result=/*#__PURE__*/React.createElement(\"div\",{className:classes.row},_toConsumableArray(row));row=[];return result;}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}});if(row.length>0){task_komax.push(/*#__PURE__*/React.createElement(\"div\",{className:classes.row},_toConsumableArray(row)));row=[];}row=[];var ticket_komax=komaxes.map(function(elem,index){row.push(/*#__PURE__*/React.createElement(\"a\",{href:BASE_URL+\"api/v1/\"+name+\"/get_ticket_komax/\"+elem.komax+\"/\",target:\"blank\"},/*#__PURE__*/React.createElement(\"button\",{className:classes.greenBtn},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"ticket_label\"}),\" \",elem.komax)));if((index+1)%3===0){var result=/*#__PURE__*/React.createElement(\"div\",{className:classes.row},_toConsumableArray(row));row=[];return result;}else{return/*#__PURE__*/React.createElement(React.Fragment,null);}});if(row.length>0){task_komax.push(/*#__PURE__*/React.createElement(\"div\",{className:classes.row},_toConsumableArray(row)));row=[];}return/*#__PURE__*/React.createElement(TaskDetailPage,{role:props.role,task_komax:task_komax,ticket_komax:ticket_komax,harnesses:taskHarnesses,komaxes:taskKomaxes,name:name});};var mapStateToProps=function mapStateToProps(state){return{taskList:TasksSelector.getList(state),role:LoginSelector.getRole(state)};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchList:function fetchList(){dispatch(getTasksThunk());}};};export default auth(withRouter(connect(mapStateToProps,mapDispatchToProps)(TaskDetailPageContainer)));","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/TaskDetailPage/TaskDetailPageContainer.js"],"names":["TaskDetailPage","React","useEffect","withRouter","auth","connect","classes","TasksSelector","getTasksThunk","LoginSelector","BASE_URL","formatTime","FormattedMessage","TaskDetailPageContainer","props","name","match","params","id","fetchList","taskList","length","task","filter","elem","task_name","komaxes","harnesses","taskHarnesses","map","index","harness","amount","taskKomaxes","komax","minWidth","textAlign","time","locale","row","task_komax","push","greenBtn","result","ticket_komax","role","mapStateToProps","state","getList","getRole","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import TaskDetailPage from \"./TaskDetailPage\";\nimport React, {useEffect} from \"react\";\nimport {withRouter} from \"react-router-dom\";\nimport auth from \"../../AuthHOC/authHOC\";\nimport {connect} from \"react-redux\"\nimport classes from \"./TaskDetailPage.module.css\"\nimport TasksSelector from \"../../../selectors/tasksSelector\";\nimport {getTasksThunk} from \"../../../reducers/tasksReducer\";\nimport LoginSelector from \"../../../selectors/loginSelector\";\nimport BASE_URL from \"../../../DAL/getBaseUrl\";\nimport formatTime from \"./formatTime\";\nimport {FormattedMessage} from \"react-intl\";\n\nlet TaskDetailPageContainer = (props) => {\n    let name = props.match.params.id;\n\n    useEffect(() => {\n        props.fetchList();\n    }, props.taskList.length);\n\n    let task = props.taskList.filter(elem => elem.task_name === name)[0];\n    let komaxes = task ? task.komaxes: []\n    let harnesses = task ? task.harnesses : [];\n\n    let taskHarnesses = harnesses.map((elem, index) => {\n        return(\n            <h3 className={classes.harness}>\n                {elem.harness} : {elem.amount}\n            </h3>\n        )\n    });\n\n    let taskKomaxes = komaxes.map(elem => {\n        return(\n            <h3 className={classes.komax}>\n                <div style={{\n                    minWidth : \"50px\",\n                    textAlign : \"right\"\n                }}>{elem.komax} - </div>\n                <div style={{\n                    minWidth : \"150px\",\n                    textAlign : \"left\"\n                }}>{formatTime(elem.time, props.locale)}</div>\n            </h3>\n        )\n    });\n\n    let row = [];\n    let task_komax = komaxes.map((elem, index) => {\n        row.push(\n            <a href={BASE_URL + \"api/v1/\" + name +\"/get_task_komax/\" + elem.komax +\"/\"} target={\"blank\"}>\n                <button className={classes.greenBtn}>\n                    <FormattedMessage id={\"task_label\"}/> {elem.komax}\n                </button>\n            </a>\n        )\n\n        if ((index + 1) % 3 === 0){\n            let result =\n             (\n                <div className={classes.row}>\n                    {[...row]}\n                </div>\n            )\n            row = [];\n            return result;\n        } else {\n            return (<></>)\n        }\n    });\n    if (row.length > 0){\n        task_komax.push(\n                <div className={classes.row}>\n                    {[...row]}\n                </div>)\n            row = [];\n    }\n    row = [];\n\n    let ticket_komax = komaxes.map((elem, index) => {\n        row.push(\n            <a href={BASE_URL + \"api/v1/\" + name +\"/get_ticket_komax/\" + elem.komax +\"/\"} target={\"blank\"}>\n                <button className={classes.greenBtn}>\n                    <FormattedMessage id={\"ticket_label\"}/> {elem.komax}\n                </button>\n            </a>\n        )\n        if ((index + 1) % 3 === 0){\n            let result =\n             (\n                <div className={classes.row}>\n                    {[...row]}\n                </div>\n            )\n            row = [];\n            return result;\n        } else {\n            return (<></>)\n        }\n    });\n    if (row.length > 0){\n        task_komax.push(\n                <div className={classes.row}>\n                    {[...row]}\n                </div>)\n            row = [];\n    }\n\n    return(\n        <TaskDetailPage\n            role={props.role}\n        task_komax={task_komax}\n        ticket_komax={ticket_komax}\n        harnesses={taskHarnesses}\n        komaxes={taskKomaxes}\n        name={name}\n        />\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return{\n        taskList : TasksSelector.getList(state),\n        role : LoginSelector.getRole(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return{\n        fetchList : () => {\n            dispatch(getTasksThunk())\n        }\n    }\n}\n\nexport default auth(withRouter(connect(mapStateToProps, mapDispatchToProps)(TaskDetailPageContainer)));"]},"metadata":{},"sourceType":"module"}