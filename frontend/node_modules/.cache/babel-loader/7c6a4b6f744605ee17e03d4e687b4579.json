{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/LandingPage/Infographics/Infographics.js\";\nimport React from \"react\";\nimport classes from \"./Infographics.module.css\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { easeQuadInOut } from 'd3-ease';\nimport AnimatedProgressProvider from \"../AnimatedProgressProvider\";\n\nlet Infographics = props => {\n  const value1 = 70;\n  const value2 = 40;\n  const value3 = 35;\n\n  let renderChart = val => {\n    return /*#__PURE__*/React.createElement(AnimatedProgressProvider, {\n      valueStart: 0,\n      valueEnd: val,\n      duration: 1.0,\n      easingFunction: easeQuadInOut,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, value => {\n      const roundedValue = Math.round(value);\n      return /*#__PURE__*/React.createElement(CircularProgressbar, {\n        value: roundedValue,\n        maxValue: 100,\n        text: `До ${roundedValue}%`,\n        styles: buildStyles({\n          // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n          strokeLinecap: 'round',\n          // Text size\n          textSize: '16px',\n          // Colors\n          pathColor: `#d43a3a`,\n          textColor: '#d43a3a',\n          trailColor: 'gray',\n          pathTransition: 'none'\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes.infographics,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.graph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, renderChart(value1)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"\\u0420\\u043E\\u0441\\u0442 \\u043F\\u0440\\u043E\\u0438\\u0437\\u0432-\\u0442\\u0438 \\u0435\\u0434\\u0438\\u043D\\u0438\\u0446\\u044B \\u043F\\u0440-\\u0432\\u0430\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.graph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, renderChart(value2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, \"C\\u043D\\u0438\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u0438 \\u043F\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.info,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.graph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, renderChart(value3)), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.desc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"\\u0420\\u043E\\u0441\\u0442 \\u0432\\u043E\\u0437\\u0432\\u0440\\u0430\\u0449\\u0430\\u0435\\u043C\\u043E\\u0441\\u0442\\u0438 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430\")));\n};\n\nexport default Infographics;","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/LandingPage/Infographics/Infographics.js"],"names":["React","classes","CircularProgressbar","buildStyles","easeQuadInOut","AnimatedProgressProvider","Infographics","props","value1","value2","value3","renderChart","val","value","roundedValue","Math","round","strokeLinecap","textSize","pathColor","textColor","trailColor","pathTransition","infographics","info","graph","desc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,4BAAjD;AACA,OAAO,4CAAP;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,OAAOC,wBAAP,MAAqC,6BAArC;;AAGA,IAAIC,YAAY,GAAIC,KAAD,IAAW;AAC1B,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;AACA,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAIC,WAAW,GAAIC,GAAD,IAAS;AACvB,wBACI,oBAAC,wBAAD;AACE,MAAA,UAAU,EAAE,CADd;AAEE,MAAA,QAAQ,EAAEA,GAFZ;AAGE,MAAA,QAAQ,EAAE,GAHZ;AAIE,MAAA,cAAc,EAAER,aAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMMS,KAAD,IAAW;AACR,YAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAX,CAArB;AACA,0BACI,oBAAC,mBAAD;AACI,QAAA,KAAK,EAAEC,YADX;AAEI,QAAA,QAAQ,EAAE,GAFd;AAGI,QAAA,IAAI,EAAG,MAAKA,YAAa,GAH7B;AAII,QAAA,MAAM,EAAEX,WAAW,CAAC;AAChB;AACAc,UAAAA,aAAa,EAAE,OAFC;AAIhB;AACAC,UAAAA,QAAQ,EAAE,MALM;AAOhB;AACAC,UAAAA,SAAS,EAAG,SARI;AAShBC,UAAAA,SAAS,EAAE,SATK;AAUhBC,UAAAA,UAAU,EAAE,MAVI;AAYhBC,UAAAA,cAAc,EAAE;AAZA,SAAD,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAqBH,KA7BL,CADJ;AAiCH,GAlCD;;AAmCA,sBACI;AAAS,IAAA,SAAS,EAAErB,OAAO,CAACsB,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEtB,OAAO,CAACuB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACwB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,WAAW,CAACH,MAAD,CADhB,CADJ,eAII;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACyB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uJAJJ,CADJ,eASI;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAACuB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACwB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,WAAW,CAACF,MAAD,CADhB,CADJ,eAII;AAAK,IAAA,SAAS,EAAER,OAAO,CAACyB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2JAJJ,CATJ,eAiBI;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAACuB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAEvB,OAAO,CAACwB,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKd,WAAW,CAACD,MAAD,CADhB,CADJ,eAII;AAAK,IAAA,SAAS,EAAET,OAAO,CAACyB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gKAJJ,CAjBJ,CADJ;AA4BH,CAnED;;AAqEA,eAAepB,YAAf","sourcesContent":["import React from \"react\";\nimport classes from \"./Infographics.module.css\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { easeQuadInOut } from 'd3-ease';\nimport AnimatedProgressProvider from \"../AnimatedProgressProvider\";\n\n\nlet Infographics = (props) => {\n    const value1 = 70;\n    const value2 = 40;\n    const value3 = 35;\n    let renderChart = (val) => {\n        return (\n            <AnimatedProgressProvider\n              valueStart={0}\n              valueEnd={val}\n              duration={1.0}\n              easingFunction={easeQuadInOut}\n            >\n                {(value) => {\n                    const roundedValue = Math.round(value);\n                    return (\n                        <CircularProgressbar\n                            value={roundedValue}\n                            maxValue={100}\n                            text={`До ${roundedValue}%`}\n                            styles={buildStyles({\n                                // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\n                                strokeLinecap: 'round',\n\n                                // Text size\n                                textSize: '16px',\n\n                                // Colors\n                                pathColor: `#d43a3a`,\n                                textColor: '#d43a3a',\n                                trailColor: 'gray',\n\n                                pathTransition: 'none'\n                          })}\n                        />\n                    )\n                }}\n            </AnimatedProgressProvider>\n        )\n    }\n    return (\n        <section className={classes.infographics}>\n            <div className={classes.info}>\n                <div className={classes.graph}>\n                    {renderChart(value1)}\n                </div>\n                <div className={classes.desc}>\n                    Рост произв-ти единицы пр-ва\n                </div>\n            </div>\n            <div className={classes.info}>\n                <div className={classes.graph}>\n                    {renderChart(value2)}\n                </div>\n                <div className={classes.desc}>\n                    Cнижение стоимости поставки\n                </div>\n            </div>\n            <div className={classes.info}>\n                <div className={classes.graph}>\n                    {renderChart(value3)}\n                </div>\n                <div className={classes.desc}>\n                    Рост возвращаемости клиента\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default Infographics;"]},"metadata":{},"sourceType":"module"}