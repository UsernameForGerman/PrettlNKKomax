{"ast":null,"code":"let format = (time, locale) => {\n  let obj = {\n    sec: time,\n    min: 0,\n    h: 0,\n    d: 0\n  };\n  let keys = Object.keys(obj);\n  keys.forEach((elem, index) => {\n    let curr = obj[elem];\n    let mod = index === 2 ? 24 : 60;\n    let next = Math.floor(curr / mod);\n\n    if (index < 3) {\n      obj[elem] = curr % mod;\n      obj[keys[index + 1]] += next;\n    }\n  });\n  let str = \"\";\n  keys.forEach((elem, index) => {\n    let key = keys[keys.length - 1 - index];\n    let value = obj[key];\n\n    switch (key) {\n      case \"sec\":\n        {\n          str += value > 0 ? value + (locale === \"ru\" ? \"сек\" : key) : \"\";\n          break;\n        }\n\n      case \"min\":\n        {\n          str += value > 0 ? value + (locale === \"ru\" ? \"мин\" : key) : \"\";\n          break;\n        }\n\n      case \"h\":\n        {\n          str += value > 0 ? value + (locale === \"ru\" ? \"ч\" : key) : \"\";\n          break;\n        }\n\n      case \"d\":\n        {\n          str += value > 0 ? value + (locale === \"ru\" ? \"д\" : key) : \"\";\n          break;\n        }\n    }\n\n    str += \" \";\n  });\n  return str;\n};\n\nexport default format;","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/TaskDetailPage/formatTime.js"],"names":["format","time","locale","obj","sec","min","h","d","keys","Object","forEach","elem","index","curr","mod","next","Math","floor","str","key","length","value"],"mappings":"AAAA,IAAIA,MAAM,GAAG,CAACC,IAAD,EAAOC,MAAP,KAAkB;AAC3B,MAAIC,GAAG,GAAG;AACNC,IAAAA,GAAG,EAAGH,IADA;AAENI,IAAAA,GAAG,EAAG,CAFA;AAGNC,IAAAA,CAAC,EAAG,CAHE;AAINC,IAAAA,CAAC,EAAG;AAJE,GAAV;AAOA,MAAIC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYL,GAAZ,CAAX;AACAK,EAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,QAAIC,IAAI,GAAGV,GAAG,CAACQ,IAAD,CAAd;AACA,QAAIG,GAAG,GAAGF,KAAK,KAAK,CAAV,GAAc,EAAd,GAAmB,EAA7B;AACA,QAAIG,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,IAAI,GAAGC,GAAlB,CAAX;;AACA,QAAIF,KAAK,GAAG,CAAZ,EAAc;AACVT,MAAAA,GAAG,CAACQ,IAAD,CAAH,GAAYE,IAAI,GAAGC,GAAnB;AACAX,MAAAA,GAAG,CAACK,IAAI,CAACI,KAAK,GAAG,CAAT,CAAL,CAAH,IAAwBG,IAAxB;AACH;AACJ,GARD;AAUA,MAAIG,GAAG,GAAG,EAAV;AACAV,EAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1B,QAAIO,GAAG,GAAGX,IAAI,CAACA,IAAI,CAACY,MAAL,GAAc,CAAd,GAAkBR,KAAnB,CAAd;AACA,QAAIS,KAAK,GAAGlB,GAAG,CAACgB,GAAD,CAAf;;AACA,YAAQA,GAAR;AACI,WAAK,KAAL;AAAa;AACTD,UAAAA,GAAG,IAAIG,KAAK,GAAG,CAAR,GAAYA,KAAK,IAAInB,MAAM,KAAK,IAAX,GAAkB,KAAlB,GAA0BiB,GAA9B,CAAjB,GAAsD,EAA7D;AACA;AACH;;AAED,WAAK,KAAL;AAAa;AACTD,UAAAA,GAAG,IAAIG,KAAK,GAAG,CAAR,GAAYA,KAAK,IAAInB,MAAM,KAAK,IAAX,GAAkB,KAAlB,GAA0BiB,GAA9B,CAAjB,GAAsD,EAA7D;AACA;AACH;;AAED,WAAK,GAAL;AAAW;AACPD,UAAAA,GAAG,IAAIG,KAAK,GAAG,CAAR,GAAYA,KAAK,IAAInB,MAAM,KAAK,IAAX,GAAkB,GAAlB,GAAwBiB,GAA5B,CAAjB,GAAoD,EAA3D;AACA;AACH;;AAED,WAAK,GAAL;AAAW;AACPD,UAAAA,GAAG,IAAIG,KAAK,GAAG,CAAR,GAAYA,KAAK,IAAInB,MAAM,KAAK,IAAX,GAAkB,GAAlB,GAAwBiB,GAA5B,CAAjB,GAAoD,EAA3D;AACA;AACH;AAnBL;;AAqBAD,IAAAA,GAAG,IAAK,GAAR;AACH,GAzBD;AA2BA,SAAOA,GAAP;AACH,CAhDD;;AAkDA,eAAelB,MAAf","sourcesContent":["let format = (time, locale) => {\n    let obj = {\n        sec : time,\n        min : 0,\n        h : 0,\n        d : 0\n    }\n\n    let keys = Object.keys(obj);\n    keys.forEach((elem, index) => {\n        let curr = obj[elem];\n        let mod = index === 2 ? 24 : 60;\n        let next = Math.floor(curr / mod);\n        if (index < 3){\n            obj[elem] = curr % mod;\n            obj[keys[index + 1]] += next;\n        }\n    })\n\n    let str = \"\";\n    keys.forEach((elem, index) => {\n        let key = keys[keys.length - 1 - index];\n        let value = obj[key];\n        switch (key) {\n            case \"sec\" : {\n                str += value > 0 ? value + (locale === \"ru\" ? \"сек\" : key) : \"\"\n                break;\n            }\n\n            case \"min\" : {\n                str += value > 0 ? value + (locale === \"ru\" ? \"мин\" : key) : \"\"\n                break;\n            }\n\n            case \"h\" : {\n                str += value > 0 ? value + (locale === \"ru\" ? \"ч\" : key) : \"\"\n                break;\n            }\n\n            case \"d\" : {\n                str += value > 0 ? value + (locale === \"ru\" ? \"д\" : key) : \"\"\n                break;\n            }\n        }\n        str +=  \" \";\n    })\n\n    return str;\n}\n\nexport default format;"]},"metadata":{},"sourceType":"module"}