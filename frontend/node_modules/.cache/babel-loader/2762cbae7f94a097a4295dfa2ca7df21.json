{"ast":null,"code":"import kappa_api from \"../DAL/kappa/kappa-api\";\nimport handle401 from \"./handle401\";\nconst initialState = {\n  isFetching: false,\n  kappasList: []\n};\nconst TOGGLE_FETCHING = \"KAPPA/TOGGLE_FETCHING\";\nconst SET_LIST = \"KAPPA/TOGGLE_SET_LIST\";\n\nconst kappasReducer = (state = initialState, action) => {\n  let stateCopy = { ...state\n  };\n\n  switch (action.type) {\n    case TOGGLE_FETCHING:\n      {\n        stateCopy.isFetching = !stateCopy.isFetching;\n        break;\n      }\n\n    case SET_LIST:\n      {\n        stateCopy.kappasList = action.list;\n        break;\n      }\n  }\n\n  return stateCopy;\n};\n\nconst toggleFetchAC = () => {\n  return {\n    type: TOGGLE_FETCHING\n  };\n};\n\nconst setListAC = list => {\n  return {\n    type: SET_LIST,\n    list: list\n  };\n};\n\nconst getKappasThunk = () => {\n  return dispatch => {\n    dispatch(toggleFetchAC());\n    kappa_api.getKappaList().then(data => {\n      dispatch(setListAC(data));\n      dispatch(toggleFetchAC());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nconst createKappaThunk = kappa => {\n  return dispatch => {\n    dispatch(toggleFetchAC());\n    kappa_api.createKappa(kappa).then(data => {\n      dispatch(getKappasThunk());\n      dispatch(toggleFetchAC());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nconst updateKappaThunk = kappa => {\n  return dispatch => {\n    dispatch(toggleFetchAC());\n    kappa_api.updateKappa(kappa).then(data => {\n      dispatch(getKappasThunk());\n      dispatch(toggleFetchAC());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nexport { kappasReducer, getKappasThunk, createKappaThunk, updateKappaThunk };","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/reducers/kappasReducer.js"],"names":["kappa_api","handle401","initialState","isFetching","kappasList","TOGGLE_FETCHING","SET_LIST","kappasReducer","state","action","stateCopy","type","list","toggleFetchAC","setListAC","getKappasThunk","dispatch","getKappaList","then","data","catch","err","createKappaThunk","kappa","createKappa","updateKappaThunk","updateKappa"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAG,KADI;AAEjBC,EAAAA,UAAU,EAAG;AAFI,CAArB;AAKA,MAAMC,eAAe,GAAG,uBAAxB;AACA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACpD,MAAIC,SAAS,GAAG,EAAC,GAAGF;AAAJ,GAAhB;;AACA,UAAQC,MAAM,CAACE,IAAf;AACI,SAAKN,eAAL;AAAuB;AACnBK,QAAAA,SAAS,CAACP,UAAV,GAAuB,CAACO,SAAS,CAACP,UAAlC;AACA;AACH;;AAED,SAAKG,QAAL;AAAgB;AACZI,QAAAA,SAAS,CAACN,UAAV,GAAuBK,MAAM,CAACG,IAA9B;AACA;AACH;AATL;;AAWA,SAAOF,SAAP;AACH,CAdD;;AAgBA,MAAMG,aAAa,GAAG,MAAM;AACxB,SAAO;AACHF,IAAAA,IAAI,EAAGN;AADJ,GAAP;AAGH,CAJD;;AAMA,MAAMS,SAAS,GAAIF,IAAD,IAAU;AACxB,SAAO;AACHD,IAAAA,IAAI,EAAGL,QADJ;AAEHM,IAAAA,IAAI,EAAGA;AAFJ,GAAP;AAIH,CALD;;AAOA,MAAMG,cAAc,GAAG,MAAM;AACzB,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACAb,IAAAA,SAAS,CAACiB,YAAV,GACKC,IADL,CACWC,IAAD,IAAU;AACZH,MAAAA,QAAQ,CAACF,SAAS,CAACK,IAAD,CAAV,CAAR;AACAH,MAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACH,KAJL,EAKKO,KALL,CAKWC,GAAG,IAAI;AACVpB,MAAAA,SAAS,CAACoB,GAAD,EAAML,QAAN,CAAT;AACH,KAPL;AAQH,GAVD;AAWH,CAZD;;AAcA,MAAMM,gBAAgB,GAAIC,KAAD,IAAW;AAChC,SAAQP,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACAb,IAAAA,SAAS,CAACwB,WAAV,CAAsBD,KAAtB,EACKL,IADL,CACWC,IAAD,IAAU;AACZH,MAAAA,QAAQ,CAACD,cAAc,EAAf,CAAR;AACAC,MAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACH,KAJL,EAKKO,KALL,CAKWC,GAAG,IAAI;AACVpB,MAAAA,SAAS,CAACoB,GAAD,EAAML,QAAN,CAAT;AACH,KAPL;AAQH,GAVD;AAWH,CAZD;;AAcA,MAAMS,gBAAgB,GAAIF,KAAD,IAAW;AAChC,SAAQP,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACAb,IAAAA,SAAS,CAAC0B,WAAV,CAAsBH,KAAtB,EACKL,IADL,CACWC,IAAD,IAAU;AACZH,MAAAA,QAAQ,CAACD,cAAc,EAAf,CAAR;AACAC,MAAAA,QAAQ,CAACH,aAAa,EAAd,CAAR;AACH,KAJL,EAKKO,KALL,CAKWC,GAAG,IAAI;AACVpB,MAAAA,SAAS,CAACoB,GAAD,EAAML,QAAN,CAAT;AACH,KAPL;AAQH,GAVD;AAWH,CAZD;;AAcA,SAAQT,aAAR,EAAuBQ,cAAvB,EAAuCO,gBAAvC,EAAyDG,gBAAzD","sourcesContent":["import kappa_api from \"../DAL/kappa/kappa-api\";\nimport handle401 from \"./handle401\";\nconst initialState = {\n    isFetching : false,\n    kappasList : []\n}\n\nconst TOGGLE_FETCHING = \"KAPPA/TOGGLE_FETCHING\";\nconst SET_LIST = \"KAPPA/TOGGLE_SET_LIST\";\n\nconst kappasReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case TOGGLE_FETCHING : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break;\n        }\n\n        case SET_LIST : {\n            stateCopy.kappasList = action.list;\n            break;\n        }\n    }\n    return stateCopy;\n}\n\nconst toggleFetchAC = () => {\n    return {\n        type : TOGGLE_FETCHING\n    }\n}\n\nconst setListAC = (list) => {\n    return {\n        type : SET_LIST,\n        list : list\n    }\n}\n\nconst getKappasThunk = () => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        kappa_api.getKappaList()\n            .then((data) => {\n                dispatch(setListAC(data));\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst createKappaThunk = (kappa) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        kappa_api.createKappa(kappa)\n            .then((data) => {\n                dispatch(getKappasThunk());\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nconst updateKappaThunk = (kappa) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        kappa_api.updateKappa(kappa)\n            .then((data) => {\n                dispatch(getKappasThunk());\n                dispatch(toggleFetchAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nexport {kappasReducer, getKappasThunk, createKappaThunk, updateKappaThunk}"]},"metadata":{},"sourceType":"module"}