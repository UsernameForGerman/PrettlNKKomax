{"ast":null,"code":"var _jsxFileName = \"/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/TasksPageContainer.js\";\nimport React, { useEffect } from \"react\";\nimport TasksPage from \"./TasksPage\";\nimport auth from \"../AuthHOC/authHOC\";\nimport TaskItem from \"./TaskItem/TaskItem\";\nimport classes from \"./TasksPage.module.css\";\nimport { connect } from \"react-redux\";\nimport TasksSelector from \"../../selectors/tasksSelector\";\nimport { deleteTaskThunk, getTasksThunk } from \"../../reducers/tasksReducer\";\nimport FullScreenPreloader from \"../common/Preloader/FullScreenPreloader\";\nimport LoginSelector from \"../../selectors/loginSelector\";\n\nlet TasksPageContainer = props => {\n  let user = {\n    username: props.login\n  };\n  useEffect(() => {\n    props.fetchList();\n  }, props.tasksList.length);\n  let items = props.tasksList.sort((a, b) => {\n    return Number(b.task_name) - Number(a.task_name);\n  }).map(elem => {\n    return /*#__PURE__*/React.createElement(TaskItem, Object.assign({}, elem, {\n      role: props.role,\n      komax: props.komax,\n      delete: props.deleteTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }));\n  });\n\n  let renderRows = items => {\n    let rows = [];\n    let row = [];\n\n    for (let i = 0; i < items.length; i++) {\n      row.push(items[i]);\n\n      if (i % 3 === 2) {\n        rows.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: classes.recentTasks,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }\n        }, row));\n        row = [];\n      }\n    }\n\n    if (row.length > 0) {\n      rows.push( /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.recentTasks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, row));\n    }\n\n    return rows;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.isFetching ? /*#__PURE__*/React.createElement(FullScreenPreloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }) : /*#__PURE__*/React.createElement(TasksPage, Object.assign({\n    rows: renderRows(items)\n  }, user, {\n    role: props.role,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  })));\n};\n\nlet mapStateToProps = state => {\n  return {\n    isFetching: TasksSelector.getFetching(state),\n    tasksList: TasksSelector.getList(state),\n    login: LoginSelector.getLogin(state),\n    role: LoginSelector.getRole(state),\n    komax: LoginSelector.getKomax(state)\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    fetchList: () => {\n      dispatch(getTasksThunk());\n    },\n    deleteTask: task => {\n      dispatch(deleteTaskThunk(task));\n    }\n  };\n};\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(TasksPageContainer));","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/comp/Tasks/TasksPageContainer.js"],"names":["React","useEffect","TasksPage","auth","TaskItem","classes","connect","TasksSelector","deleteTaskThunk","getTasksThunk","FullScreenPreloader","LoginSelector","TasksPageContainer","props","user","username","login","fetchList","tasksList","length","items","sort","a","b","Number","task_name","map","elem","role","komax","deleteTask","renderRows","rows","row","i","push","recentTasks","isFetching","mapStateToProps","state","getFetching","getList","getLogin","getRole","getKomax","mapDispatchToProps","dispatch","task"],"mappings":"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","sourcesContent":["import React, {useEffect} from \"react\";\nimport TasksPage from \"./TasksPage\";\nimport auth from \"../AuthHOC/authHOC\";\nimport TaskItem from \"./TaskItem/TaskItem\";\nimport classes from \"./TasksPage.module.css\"\nimport {connect} from \"react-redux\";\nimport TasksSelector from \"../../selectors/tasksSelector\";\nimport {deleteTaskThunk, getTasksThunk} from \"../../reducers/tasksReducer\";\nimport FullScreenPreloader from \"../common/Preloader/FullScreenPreloader\";\nimport LoginSelector from \"../../selectors/loginSelector\";\n\nlet TasksPageContainer = (props) => {\n    let user = {\n        username : props.login\n    }\n    useEffect(() => {\n        props.fetchList();\n    }, props.tasksList.length);\n\n    let items = props.tasksList.sort((a,b) => {\n        return Number(b.task_name) - Number(a.task_name);\n    }).map(elem => {\n        return (\n            <TaskItem {...elem} role={props.role} komax={props.komax} delete={props.deleteTask}/>\n        );\n    });\n\n    let renderRows = (items) => {\n        let rows = [];\n        let row = [];\n        for (let i = 0; i < items.length; i++){\n            row.push(items[i]);\n            if (i % 3 === 2){\n                rows.push(\n                    (\n                        <div className={classes.recentTasks}>\n                            {row}\n                        </div>\n                    )\n                );\n                row = [];\n            }\n        }\n        if (row.length > 0){\n            rows.push(\n                (\n                    <div className={classes.recentTasks}>\n                        {row}\n                    </div>\n                )\n            );\n        }\n\n        return rows;\n    }\n\n    return(\n        <>\n            {props.isFetching\n                ? <FullScreenPreloader/>\n                : <TasksPage rows={renderRows(items)} {...user} role={props.role}/>\n            }\n        </>\n    )\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        isFetching : TasksSelector.getFetching(state),\n        tasksList : TasksSelector.getList(state),\n        login : LoginSelector.getLogin(state),\n        role : LoginSelector.getRole(state),\n        komax : LoginSelector.getKomax(state)\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        fetchList: () => {\n            dispatch(getTasksThunk())\n        },\n\n        deleteTask: (task) => {\n            dispatch(deleteTaskThunk(task))\n        }\n    }\n}\n\nexport default auth(connect(mapStateToProps, mapDispatchToProps)(TasksPageContainer));"]},"metadata":{},"sourceType":"module"}