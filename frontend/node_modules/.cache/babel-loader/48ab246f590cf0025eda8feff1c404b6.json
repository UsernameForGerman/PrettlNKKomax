{"ast":null,"code":"import harnessApi from \"../DAL/harness/harnessApi\";\nimport harness_chart_api from \"../DAL/harness_chart/harness_chart_api\";\nimport handle401 from \"./handle401\";\nlet initialState = {\n  isFetching: false,\n  harnessesList: [],\n  isMapFetching: false,\n  selectedMap: []\n};\nconst TOGGLE_FETCHING = \"HARNESS/FETCHING\";\nconst TOGGLE_MAP_FETCHING = \"HARNESS/MAP_FETCHING\";\nconst SET_HARNESSES_LIST = \"HARNESS/SET_LIST\";\nconst SET_SELECTED_MAP = \"HARNESS/SET_MAP\";\n\nlet harnessesReducer = (state = initialState, action) => {\n  let stateCopy = { ...state\n  };\n\n  switch (action.type) {\n    case TOGGLE_FETCHING:\n      {\n        stateCopy.isFetching = !stateCopy.isFetching;\n        break;\n      }\n\n    case TOGGLE_MAP_FETCHING:\n      {\n        stateCopy.isMapFetching = !stateCopy.isMapFetching;\n        break;\n      }\n\n    case SET_HARNESSES_LIST:\n      {\n        stateCopy.harnessesList = action.list;\n        break;\n      }\n\n    case SET_SELECTED_MAP:\n      {\n        stateCopy.selectedMap = action.map;\n        break;\n      }\n  }\n\n  return stateCopy;\n};\n\nlet toggleFetchingAC = () => {\n  return {\n    type: TOGGLE_FETCHING\n  };\n};\n\nlet toggleMapFetchingAC = () => {\n  return {\n    type: TOGGLE_MAP_FETCHING\n  };\n};\n\nlet setListAC = list => {\n  return {\n    type: SET_HARNESSES_LIST,\n    list: list\n  };\n};\n\nlet setMapAC = map => {\n  return {\n    type: SET_SELECTED_MAP,\n    map: map\n  };\n};\n\nlet getHarnessesListThunk = () => {\n  return dispatch => {\n    dispatch(toggleFetchingAC());\n    harnessApi.getHarnessList().then(data => {\n      dispatch(setListAC(data));\n      dispatch(toggleFetchingAC());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nlet getChartByNumberThunk = number => {\n  return dispatch => {\n    dispatch(toggleMapFetchingAC());\n    harness_chart_api.getHarnessChartByNumber(number).then(data => {\n      dispatch(setMapAC(data));\n      dispatch(toggleMapFetchingAC());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nlet deleteHarnessByNumberThunk = number => {\n  return dispatch => {\n    dispatch(toggleFetchingAC());\n    harnessApi.deleteHarnessByNumber(number).then(data => {\n      dispatch(toggleFetchingAC());\n      dispatch(getHarnessesListThunk());\n    }).catch(err => {\n      handle401(err, dispatch);\n    });\n  };\n};\n\nexport { harnessesReducer, getHarnessesListThunk, deleteHarnessByNumberThunk, getChartByNumberThunk };","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/reducers/harnessesReducer.js"],"names":["harnessApi","harness_chart_api","handle401","initialState","isFetching","harnessesList","isMapFetching","selectedMap","TOGGLE_FETCHING","TOGGLE_MAP_FETCHING","SET_HARNESSES_LIST","SET_SELECTED_MAP","harnessesReducer","state","action","stateCopy","type","list","map","toggleFetchingAC","toggleMapFetchingAC","setListAC","setMapAC","getHarnessesListThunk","dispatch","getHarnessList","then","data","catch","err","getChartByNumberThunk","number","getHarnessChartByNumber","deleteHarnessByNumberThunk","deleteHarnessByNumber"],"mappings":"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","sourcesContent":["import harnessApi from \"../DAL/harness/harnessApi\";\nimport harness_chart_api from \"../DAL/harness_chart/harness_chart_api\";\nimport handle401 from \"./handle401\";\n\nlet initialState = {\n    isFetching : false,\n    harnessesList : [],\n    isMapFetching : false,\n    selectedMap : []\n}\n\nconst TOGGLE_FETCHING = \"HARNESS/FETCHING\";\nconst TOGGLE_MAP_FETCHING = \"HARNESS/MAP_FETCHING\";\nconst SET_HARNESSES_LIST = \"HARNESS/SET_LIST\";\nconst SET_SELECTED_MAP = \"HARNESS/SET_MAP\";\n\nlet harnessesReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case TOGGLE_FETCHING : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break;\n        }\n        case TOGGLE_MAP_FETCHING : {\n            stateCopy.isMapFetching = !stateCopy.isMapFetching;\n            break;\n        }\n        case SET_HARNESSES_LIST : {\n            stateCopy.harnessesList = action.list;\n            break;\n        }\n        case SET_SELECTED_MAP : {\n            stateCopy.selectedMap = action.map;\n            break;\n        }\n    }\n\n    return stateCopy;\n}\n\nlet toggleFetchingAC = () => {\n    return {\n        type : TOGGLE_FETCHING\n    }\n}\n\nlet toggleMapFetchingAC = () => {\n    return {\n        type : TOGGLE_MAP_FETCHING\n    }\n}\n\nlet setListAC = (list) => {\n    return {\n        type : SET_HARNESSES_LIST,\n        list : list\n    }\n}\n\nlet setMapAC = (map) => {\n    return {\n        type : SET_SELECTED_MAP,\n        map : map\n    }\n}\n\nlet getHarnessesListThunk = () => {\n    return (dispatch) => {\n        dispatch(toggleFetchingAC());\n        harnessApi.getHarnessList()\n            .then(data => {\n                dispatch(setListAC(data));\n                dispatch(toggleFetchingAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            })\n    }\n}\n\nlet getChartByNumberThunk = (number) => {\n    return (dispatch) => {\n        dispatch(toggleMapFetchingAC());\n        harness_chart_api.getHarnessChartByNumber(number)\n            .then(data => {\n                dispatch(setMapAC(data));\n                dispatch(toggleMapFetchingAC());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nlet deleteHarnessByNumberThunk = (number) => {\n    return (dispatch) => {\n        dispatch(toggleFetchingAC());\n        harnessApi.deleteHarnessByNumber(number)\n            .then(data => {\n                dispatch(toggleFetchingAC());\n                dispatch(getHarnessesListThunk());\n            })\n            .catch(err => {\n                handle401(err, dispatch)\n            });\n    }\n}\n\nexport {harnessesReducer, getHarnessesListThunk, deleteHarnessByNumberThunk, getChartByNumberThunk}"]},"metadata":{},"sourceType":"module"}