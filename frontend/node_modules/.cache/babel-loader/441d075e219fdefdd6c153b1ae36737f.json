{"ast":null,"code":"import authApi from \"../DAL/auth/auth-api\";\nimport group_api from \"../DAL/group_api/group_api\";\nimport choose_komax_api from \"../DAL/choose_komax/choose_komax_api\";\n\nlet checkLogged = () => {\n  let token = window.localStorage.getItem('token');\n  return !(token === null);\n};\n\nlet get = prop => {\n  let value = window.localStorage.getItem(prop);\n  if (value === null) return \"\";\n  return value;\n};\n\nconst initialState = {\n  isFetching: false,\n  isLogged: checkLogged(),\n  errMsg: \"\",\n  token: get('token'),\n  login: get('login'),\n  role: get('role'),\n  komax: get('komax')\n};\nconst TOGGLE_FETCHING = \"LOGIN/TOGGLE_FETCHING\";\nconst SET_LOGGED = \"LOGIN/SET_LOGGED\";\nconst SET_TOKEN = \"LOGIN/SET_TOKEN\";\nconst SET_ERROR = \"LOGIN/ERROR\";\nconst SET_LOGIN = \"LOGIN/SET_LOGIN\";\nconst SET_ROLE = \"LOGIN/SET_ROLE\";\nconst SET_KOMAX = \"LOGIN/SET_KOMAX\";\nconst LOGOUT = \"LOGIN/LOGOUT\";\n\nconst authReducer = (state = initialState, action) => {\n  let stateCopy = { ...state\n  };\n\n  switch (action.type) {\n    case TOGGLE_FETCHING:\n      {\n        stateCopy.isFetching = !stateCopy.isFetching;\n        break;\n      }\n\n    case SET_LOGGED:\n      {\n        stateCopy.isLogged = true;\n        break;\n      }\n\n    case SET_TOKEN:\n      {\n        stateCopy.token = action.token;\n        break;\n      }\n\n    case SET_ERROR:\n      {\n        stateCopy.errMsg = action.err;\n        break;\n      }\n\n    case SET_LOGIN:\n      {\n        stateCopy.login = action.login;\n        break;\n      }\n\n    case SET_ROLE:\n      {\n        stateCopy.role = action.role;\n        break;\n      }\n\n    case LOGOUT:\n      {\n        stateCopy.token = null;\n        stateCopy.isLogged = false;\n        stateCopy.errMsg = \"\";\n        stateCopy.login = \"\";\n        stateCopy.role = \"\";\n        stateCopy.komax = \"\";\n        window.localStorage.clear();\n        break;\n      }\n\n    case SET_KOMAX:\n      {\n        stateCopy.komax = action.komax;\n        break;\n      }\n  }\n\n  return stateCopy;\n};\n\nconst toggleFetchAC = () => {\n  return {\n    type: TOGGLE_FETCHING\n  };\n};\n\nconst setLoginAC = login => {\n  return {\n    type: SET_LOGIN,\n    login: login\n  };\n};\n\nconst setRoleAC = role => {\n  return {\n    type: SET_ROLE,\n    role: role\n  };\n};\n\nconst setLoggedAC = () => {\n  return {\n    type: SET_LOGGED\n  };\n};\n\nconst setTokenAC = token => {\n  return {\n    type: SET_TOKEN,\n    token: token\n  };\n};\n\nconst setErrAC = err => {\n  return {\n    type: SET_ERROR,\n    err: err\n  };\n};\n\nconst logoutAC = () => {\n  return {\n    type: LOGOUT\n  };\n};\n\nconst setKomaxAC = komax => {\n  return {\n    type: SET_KOMAX,\n    komax: komax\n  };\n};\n\nconst authThunk = (login, password) => {\n  return dispatch => {\n    dispatch(toggleFetchAC());\n    authApi.auth(login, password).then(token => {\n      window.localStorage.setItem('token', token);\n      dispatch(setTokenAC(token));\n      dispatch(setLoginAC(login));\n      window.localStorage.setItem('login', login);\n      dispatch(setLoggedAC());\n      group_api.getGroup().then(data => {\n        if (data.length === 0) return 'Admin';\n        return data[0].name;\n      }).then(role => {\n        dispatch(setRoleAC(role));\n        window.localStorage.setItem('role', role);\n        dispatch(toggleFetchAC());\n      });\n    }).catch(err => {\n      dispatch(setErrAC(\"Invalid login or password\"));\n      dispatch(toggleFetchAC());\n    });\n  };\n};\n\nconst logoutThunk = () => {\n  return dispatch => {\n    dispatch(toggleFetchAC());\n    authApi.logout().then(resp => {\n      dispatch(logoutAC());\n      dispatch(toggleFetchAC());\n    });\n  };\n};\n\nconst chooseKomaxThunk = (login, number) => {\n  return dispatch => {\n    window.localStorage.setItem('komax', number);\n    choose_komax_api.chooseKomax(login, number).then(resp => {\n      dispatch(setKomaxAC(number));\n    });\n  };\n};\n\nexport { authReducer, authThunk, logoutThunk, chooseKomaxThunk, logoutAC };","map":{"version":3,"sources":["/home/whatruska/PycharmProjects/PrettlNKKomax/frontend/src/reducers/authReducer.js"],"names":["authApi","group_api","choose_komax_api","checkLogged","token","window","localStorage","getItem","get","prop","value","initialState","isFetching","isLogged","errMsg","login","role","komax","TOGGLE_FETCHING","SET_LOGGED","SET_TOKEN","SET_ERROR","SET_LOGIN","SET_ROLE","SET_KOMAX","LOGOUT","authReducer","state","action","stateCopy","type","err","clear","toggleFetchAC","setLoginAC","setRoleAC","setLoggedAC","setTokenAC","setErrAC","logoutAC","setKomaxAC","authThunk","password","dispatch","auth","then","setItem","getGroup","data","length","name","catch","logoutThunk","logout","resp","chooseKomaxThunk","number","chooseKomax"],"mappings":"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","sourcesContent":["import authApi from \"../DAL/auth/auth-api\";\nimport group_api from \"../DAL/group_api/group_api\";\nimport choose_komax_api from \"../DAL/choose_komax/choose_komax_api\";\n\nlet checkLogged = () => {\n    let token = window.localStorage.getItem('token');\n    return !(token === null);\n}\n\nlet get = (prop) => {\n    let value = window.localStorage.getItem(prop);\n    if (value === null) return \"\";\n    return value;\n}\n\nconst initialState = {\n    isFetching : false,\n    isLogged : checkLogged(),\n    errMsg : \"\",\n    token : get('token'),\n    login : get('login'),\n    role : get('role'),\n    komax : get('komax')\n}\n\nconst TOGGLE_FETCHING = \"LOGIN/TOGGLE_FETCHING\";\nconst SET_LOGGED = \"LOGIN/SET_LOGGED\";\nconst SET_TOKEN = \"LOGIN/SET_TOKEN\";\nconst SET_ERROR = \"LOGIN/ERROR\";\nconst SET_LOGIN = \"LOGIN/SET_LOGIN\";\nconst SET_ROLE = \"LOGIN/SET_ROLE\";\nconst SET_KOMAX = \"LOGIN/SET_KOMAX\";\nconst LOGOUT = \"LOGIN/LOGOUT\";\n\nconst authReducer = (state = initialState, action) => {\n    let stateCopy = {...state};\n    switch (action.type) {\n        case TOGGLE_FETCHING : {\n            stateCopy.isFetching = !stateCopy.isFetching;\n            break;\n        }\n\n        case SET_LOGGED : {\n            stateCopy.isLogged = true;\n            break;\n        }\n\n        case SET_TOKEN : {\n            stateCopy.token = action.token;\n            break;\n        }\n\n        case SET_ERROR : {\n            stateCopy.errMsg = action.err;\n            break;\n        }\n\n        case SET_LOGIN : {\n            stateCopy.login = action.login;\n            break;\n        }\n\n        case SET_ROLE : {\n            stateCopy.role = action.role;\n            break;\n        }\n\n        case LOGOUT : {\n            stateCopy.token = null;\n            stateCopy.isLogged = false;\n            stateCopy.errMsg = \"\";\n            stateCopy.login = \"\";\n            stateCopy.role = \"\";\n            stateCopy.komax = \"\";\n            window.localStorage.clear();\n            break;\n        }\n\n        case SET_KOMAX : {\n            stateCopy.komax = action.komax;\n            break;\n        }\n    }\n    return stateCopy;\n}\n\nconst toggleFetchAC = () => {\n    return {\n        type : TOGGLE_FETCHING\n    }\n}\n\nconst setLoginAC = (login) => {\n    return {\n        type : SET_LOGIN,\n        login : login\n    }\n}\n\nconst setRoleAC = (role) => {\n    return {\n        type : SET_ROLE,\n        role : role\n    }\n}\n\nconst setLoggedAC = () => {\n    return {\n        type : SET_LOGGED\n    }\n}\n\nconst setTokenAC = (token) => {\n    return {\n        type : SET_TOKEN,\n        token : token\n    }\n}\n\nconst setErrAC = (err) => {\n    return {\n        type : SET_ERROR,\n        err : err\n    }\n}\n\nconst logoutAC = () => {\n    return{\n        type : LOGOUT\n    }\n}\n\nconst setKomaxAC = (komax) => {\n    return {\n        type : SET_KOMAX,\n        komax : komax\n    }\n}\n\n\nconst authThunk = (login, password) => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        authApi.auth(login, password).then((token) => {\n            window.localStorage.setItem('token', token);\n            dispatch(setTokenAC(token));\n            dispatch(setLoginAC(login));\n            window.localStorage.setItem('login', login);\n            dispatch(setLoggedAC());\n            group_api.getGroup().then(data => {\n                if (data.length === 0) return 'Admin';\n                return data[0].name\n            }).then(role => {\n                dispatch(setRoleAC(role));\n                window.localStorage.setItem('role', role);\n                dispatch(toggleFetchAC());\n            });\n        }).catch((err) => {\n            dispatch(setErrAC(\"Invalid login or password\"));\n            dispatch(toggleFetchAC());\n        });\n    }\n}\n\nconst logoutThunk = () => {\n    return (dispatch) => {\n        dispatch(toggleFetchAC());\n        authApi.logout().then(resp => {\n            dispatch(logoutAC());\n            dispatch(toggleFetchAC());\n        })\n    }\n}\n\nconst chooseKomaxThunk = (login, number) => {\n    return (dispatch) => {\n        window.localStorage.setItem('komax', number);\n        choose_komax_api.chooseKomax(login, number).then(resp => {\n            dispatch(setKomaxAC(number));\n        });\n    }\n}\n\nexport {authReducer, authThunk, logoutThunk, chooseKomaxThunk, logoutAC}"]},"metadata":{},"sourceType":"module"}